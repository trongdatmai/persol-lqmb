{"version":3,"sources":["config.js","views/Pages/Login/Login.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","styleExists","color","display","Login","history","useHistory","useState","account","setAccount","err","setErr","className","md","style","addonType","type","placeholder","autoComplete","value","username","onChange","target","prev","password","xs","onClick","database","ref","orderByChild","equalTo","on","snapshot","a","async","val","Object","values","localStorage","setItem","JSON","stringify","push","to","width","active","tabIndex"],"mappings":"6KAAA,sBAwBeA,QAASC,cAtBH,CACnBC,OAAQ,0CACRC,WAAY,8BACZC,YAAa,qCACbC,UAAW,cACXC,cAAe,0BACfC,kBAAmB,cACnBC,MAAO,2CACPC,cAAe,kB,sOCOXC,EAAc,CAAEC,MAAO,UAAWC,QAAS,SAsHlCC,UApHD,WACZ,IAAMC,EAAUC,cADE,EAEYC,mBAAS,IAFrB,mBAEXC,EAFW,KAEFC,EAFE,OAGIF,oBAAS,GAHb,mBAGXG,EAHW,KAGNC,EAHM,KA0BlB,OACE,yBAAKC,UAAU,mCACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKA,UAAU,0BACb,kBAAC,IAAD,CAAKC,GAAG,KACN,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAMD,UAAU,OACd,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,qCACA,uBAAGA,UAAU,cAAb,2BACA,uBAAGE,MAAOJ,EAAMT,EAAc,CAACE,QAAS,SAAxC,eACA,kBAAC,IAAD,CAAYS,UAAU,QACpB,kBAAC,IAAD,CAAiBG,UAAU,WACzB,kBAAC,IAAD,KACE,uBAAGH,UAAU,gBAGjB,kBAAC,IAAD,CACEI,KAAK,OACLC,YAAY,WACZC,aAAa,WACbC,MAAOV,EAAWW,SAClBC,SAAU,gBAAYF,EAAZ,EAAGG,OAASH,MAAZ,OAAwBV,GAAW,SAAAc,GAAI,sBAASA,EAAT,CAAeH,SAAUD,WAG9E,kBAAC,IAAD,CAAYP,UAAU,QACpB,kBAAC,IAAD,CAAiBG,UAAU,WACzB,kBAAC,IAAD,KACE,uBAAGH,UAAU,gBAGjB,kBAAC,IAAD,CACEI,KAAK,WACLC,YAAY,WACZC,aAAa,mBACbC,MAAOV,EAAWe,SAClBH,SAAU,gBAAYF,EAAZ,EAAGG,OAASH,MAAZ,OAAwBV,GAAW,SAAAc,GAAI,sBAASA,EAAT,CAAeC,SAAUL,WAG9E,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKM,GAAG,KACN,kBAAC,IAAD,CAAQvB,MAAM,UAAUU,UAAU,OAAOc,QAhE3C,WACNnC,IAASoC,WAElBC,IAAI,SACJC,aAAa,YACbC,QAAQtB,EAAQY,UAChBW,GAAG,SAAS,SAAMC,GAAN,iBAAAC,EAAAC,OAAA,gDACY,OAAnBF,EAASG,MACXxB,GAAO,IACD,EACQyB,OAAOC,OAAOL,EAASG,OADhC,wBAEEX,WAAahB,EAAQgB,UAC1Bb,GAAO,GACP2B,aAAaC,QAAQ,UAAWC,KAAKC,UAAUjC,IAC/CH,EAAQqC,KAAK,0BAEb/B,GAAO,IAVA,0CA0DK,UAIF,kBAAC,IAAD,CAAKc,GAAG,IAAIb,UAAU,cACpB,kBAAC,IAAD,CAAQV,MAAM,OAAOU,UAAU,QAA/B,oBAGA,kBAAC,OAAD,CAAM+B,GAAG,aACT,kBAAC,IAAD,CAAQzC,MAAM,OAAOU,UAAU,QAA/B,sBAUV,kBAAC,IAAD,CACEA,UAAU,4CACVE,MAAO,CAAE8B,MAAO,QAEhB,kBAAC,IAAD,CAAUhC,UAAU,eAClB,6BACE,uCACA,mFACA,kBAAC,OAAD,CAAM+B,GAAG,aACP,kBAAC,IAAD,CACEzC,MAAM,UACNU,UAAU,OACViC,QAAM,EACNC,UAAW,GAJb","file":"static/js/55.76f31a17.chunk.js","sourcesContent":["import firebase from \"firebase\";\r\n\r\nvar firebaseConfig = {\r\n  apiKey: \"AIzaSyDBF8amla_vjNklDN4EeieSM9Y4dj87OTU\",\r\n  authDomain: \"persol-lqmb.firebaseapp.com\",\r\n  databaseURL: \"https://persol-lqmb.firebaseio.com\",\r\n  projectId: \"persol-lqmb\",\r\n  storageBucket: \"persol-lqmb.appspot.com\",\r\n  messagingSenderId: \"18719045844\",\r\n  appId: \"1:18719045844:web:267353846c47f3dbaee341\",\r\n  measurementId: \"G-82D3GSXG4D\"\r\n};\r\n\r\n// var firebaseConfig = {\r\n//   apiKey: \"AIzaSyAKlfuUNlBR95laYX0ndWHSrHyZ2p1sfto\",\r\n//   authDomain: \"test-db-dbb9b.firebaseapp.com\",\r\n//   databaseURL: \"https://test-db-dbb9b.firebaseio.com\",\r\n//   projectId: \"test-db-dbb9b\",\r\n//   storageBucket: \"test-db-dbb9b.appspot.com\",\r\n//   messagingSenderId: \"714708611588\",\r\n//   appId: \"1:714708611588:web:fda8b14e5ff2bed82e7b51\",\r\n//   measurementId: \"G-FX8CDKFY0S\"\r\n// };\r\n\r\nexport default firebase.initializeApp(firebaseConfig);\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardBody,\r\n  CardGroup,\r\n  Col,\r\n  Container,\r\n  Form,\r\n  Input,\r\n  InputGroup,\r\n  InputGroupAddon,\r\n  InputGroupText,\r\n  Row\r\n} from \"reactstrap\";\r\nimport firebase from './../../../config';\r\nimport { useHistory, Link } from 'react-router-dom';\r\nconst styleExists = { color: '#FF3300', display: 'block' }\r\n\r\nconst Login = () => {\r\n  const history = useHistory();\r\n  const [account, setAccount] = useState({});\r\n  const [err, setErr] = useState(false);\r\n  const handleLogin = () => {\r\n    const ref = firebase.database();\r\n    ref\r\n      .ref(\"users\")\r\n      .orderByChild(\"username\")\r\n      .equalTo(account.username)\r\n      .on(\"value\", async snapshot => {\r\n        if (snapshot.val() === null) {\r\n          setErr(true)\r\n        } else {\r\n          const [acc] = Object.values(snapshot.val())\r\n          if(acc.password === account.password) {\r\n            setErr(false)\r\n            localStorage.setItem('account', JSON.stringify(account));\r\n            history.push('/match/history-matchs');\r\n          } else {\r\n            setErr(true)\r\n          }\r\n        }\r\n      });\r\n  }\r\n\r\n  return (\r\n    <div className=\"app flex-row align-items-center\">\r\n      <Container>\r\n        <Row className=\"justify-content-center\">\r\n          <Col md=\"8\">\r\n            <CardGroup>\r\n              <Card className=\"p-4\">\r\n                <CardBody>\r\n                  <Form>\r\n                    <h1>Login</h1>\r\n                    <p className=\"text-muted\">Sign In to your account</p>\r\n                    <p style={err ? styleExists : {display: 'none'} } >Login fail!</p>\r\n                    <InputGroup className=\"mb-3\">\r\n                      <InputGroupAddon addonType=\"prepend\">\r\n                        <InputGroupText>\r\n                          <i className=\"icon-user\"></i>\r\n                        </InputGroupText>\r\n                      </InputGroupAddon>\r\n                      <Input\r\n                        type=\"text\"\r\n                        placeholder=\"Username\"\r\n                        autoComplete=\"username\"\r\n                        value={setAccount.username}\r\n                        onChange={({ target: {value}}) => setAccount(prev => ({...prev, username: value}))}\r\n                      />\r\n                    </InputGroup>\r\n                    <InputGroup className=\"mb-4\">\r\n                      <InputGroupAddon addonType=\"prepend\">\r\n                        <InputGroupText>\r\n                          <i className=\"icon-lock\"></i>\r\n                        </InputGroupText>\r\n                      </InputGroupAddon>\r\n                      <Input\r\n                        type=\"password\"\r\n                        placeholder=\"Password\"\r\n                        autoComplete=\"current-password\"\r\n                        value={setAccount.password}\r\n                        onChange={({ target: {value}}) => setAccount(prev => ({...prev, password: value}))}\r\n                      />\r\n                    </InputGroup>\r\n                    <Row>\r\n                      <Col xs=\"6\">\r\n                        <Button color=\"primary\" className=\"px-4\" onClick={handleLogin}>\r\n                          Login\r\n                        </Button>\r\n                      </Col>\r\n                      <Col xs=\"6\" className=\"text-right\">\r\n                        <Button color=\"link\" className=\"px-0\">\r\n                          Forgot password?\r\n                        </Button>\r\n                        <Link to=\"/register\">\r\n                        <Button color=\"link\" className=\"px-0\">\r\n                          Register Now\r\n                        </Button>\r\n                    </Link>\r\n                        \r\n                      </Col>\r\n                    </Row>\r\n                  </Form>\r\n                </CardBody>\r\n              </Card>\r\n              <Card\r\n                className=\"text-white bg-primary py-5 d-md-down-none\"\r\n                style={{ width: \"44%\" }}\r\n              >\r\n                <CardBody className=\"text-center\">\r\n                  <div>\r\n                    <h2>Sign up</h2>\r\n                    <p>Sign up for an account if you don't already have one</p>\r\n                    <Link to=\"/register\">\r\n                      <Button\r\n                        color=\"primary\"\r\n                        className=\"mt-3\"\r\n                        active\r\n                        tabIndex={-1}\r\n                      >\r\n                        Register Now!\r\n                      </Button>\r\n                    </Link>\r\n                  </div>\r\n                </CardBody>\r\n              </Card>\r\n            </CardGroup>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"sourceRoot":""}