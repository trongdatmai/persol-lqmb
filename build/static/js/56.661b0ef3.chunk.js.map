{"version":3,"sources":["config.js","views/Pages/Register/Register.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","styleErr","border","styleExists","color","display","Register","history","useHistory","useState","username","password","repPassword","win","lose","account","setAccout","err","setErr","disabled","setDisabled","className","md","lg","xl","style","exist","addonType","type","placeholder","autoComplete","value","onChange","target","prev","block","onClick","a","async","e","trim","ref","database","orderByChild","equalTo","on","snapshot","val","avatar","push","localStorage","setItem","JSON","stringify","key","xs","sm"],"mappings":"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","file":"static/js/56.661b0ef3.chunk.js","sourcesContent":["import firebase from \"firebase\";\r\n\r\nvar firebaseConfig = {\r\n  apiKey: \"AIzaSyDBF8amla_vjNklDN4EeieSM9Y4dj87OTU\",\r\n  authDomain: \"persol-lqmb.firebaseapp.com\",\r\n  databaseURL: \"https://persol-lqmb.firebaseio.com\",\r\n  projectId: \"persol-lqmb\",\r\n  storageBucket: \"persol-lqmb.appspot.com\",\r\n  messagingSenderId: \"18719045844\",\r\n  appId: \"1:18719045844:web:267353846c47f3dbaee341\",\r\n  measurementId: \"G-82D3GSXG4D\"\r\n};\r\n\r\n// var firebaseConfig = {\r\n//   apiKey: \"AIzaSyAKlfuUNlBR95laYX0ndWHSrHyZ2p1sfto\",\r\n//   authDomain: \"test-db-dbb9b.firebaseapp.com\",\r\n//   databaseURL: \"https://test-db-dbb9b.firebaseio.com\",\r\n//   projectId: \"test-db-dbb9b\",\r\n//   storageBucket: \"test-db-dbb9b.appspot.com\",\r\n//   messagingSenderId: \"714708611588\",\r\n//   appId: \"1:714708611588:web:fda8b14e5ff2bed82e7b51\",\r\n//   measurementId: \"G-FX8CDKFY0S\"\r\n// };\r\n\r\nexport default firebase.initializeApp(firebaseConfig);\r\n","import React, { Component, useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardBody,\r\n  CardFooter,\r\n  Col,\r\n  Container,\r\n  Form,\r\n  Input,\r\n  InputGroup,\r\n  InputGroupAddon,\r\n  InputGroupText,\r\n  Row\r\n} from \"reactstrap\";\r\nimport firebase from \"./../../../config\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst styleErr = { border: \"1px solid #FF3300\" };\r\nconst styleExists = { color: '#FF3300', display: 'block' }\r\nfunction sleep(time) {\r\n  return new Promise(resolve => setTimeout(resolve, time));\r\n}\r\nconst Register = () => {\r\n  let history = useHistory();\r\n\r\n  const [account, setAccout] = useState({\r\n    username: \"\",\r\n    password: \"\",\r\n    repPassword: \"\",\r\n    win: 0,\r\n    lose: 0\r\n  });\r\n  const [err, setErr] = useState({});\r\n  const [disabled, setDisabled] = useState(false);\r\n\r\n  const handleRegister = async () => {\r\n    let e = false;\r\n    if (account.repPassword !== account.password || !account.password) {\r\n      setErr(prev => ({ ...prev, password: true }));\r\n      e = true;\r\n    }\r\n    if (!account.username && !account.username.trim()) {\r\n      setErr(prev => ({ ...prev, username: true }));\r\n      e = true;\r\n    }\r\n    if (e) return;\r\n    await setDisabled(true);\r\n\r\n    const ref = firebase.database();\r\n\r\n    ref\r\n      .ref(\"users\")\r\n      .orderByChild(\"username\")\r\n      .equalTo(account.username)\r\n      .on(\"value\", async snapshot => {\r\n        if (snapshot.val() === null) {\r\n          account.avatar = 'https://image.flaticon.com/icons/svg/2439/2439789.svg';\r\n          await setAccout(prev => { delete prev.repPassword; return prev });\r\n          ref.ref(\"users\").push(account);\r\n          localStorage.setItem('account', JSON.stringify(account));\r\n          history.push('/user/profile');\r\n        } else {\r\n          setErr(prev => ({ ...prev, exist: true }));\r\n          setDisabled(false)\r\n          var key = snapshot.key;\r\n          var childData = snapshot.val();\r\n        }\r\n      });\r\n    // firebase.database().ref('users').push(account);\r\n  };\r\n  return (\r\n    <div className=\"app flex-row align-items-center\">\r\n      <Container>\r\n        <Row className=\"justify-content-center\">\r\n          <Col md=\"9\" lg=\"7\" xl=\"6\">\r\n            <Card className=\"mx-4\">\r\n              <CardBody className=\"p-4\">\r\n                <Form>\r\n                  <h1>Register</h1>\r\n                  <p className=\"text-muted\">Create your account</p>\r\n                  <p style={err.exist ? styleExists : {display: 'none'} } >Account already exists</p>\r\n                  <InputGroup\r\n                    className=\"mb-3\"\r\n                    style={err.username ? styleErr : {}}\r\n                  >\r\n                    <InputGroupAddon addonType=\"prepend\">\r\n                      <InputGroupText>\r\n                        <i className=\"icon-user\"></i>\r\n                      </InputGroupText>\r\n                    </InputGroupAddon>\r\n                    <Input\r\n                      type=\"text\"\r\n                      placeholder=\"Username\"\r\n                      autoComplete=\"username\"\r\n                      value={account.username}\r\n                      onChange={({ target: { value } }) => {\r\n                        setErr(prev => ({ ...prev, exist: false }));\r\n                        setAccout(prev => ({ ...prev, username: value }));\r\n                        setErr(prev => ({ ...prev, username: false }));\r\n                      }}\r\n                    />\r\n                  </InputGroup>\r\n                  <InputGroup\r\n                    className=\"mb-3\"\r\n                    style={err.password ? styleErr : {}}\r\n                  >\r\n                    <InputGroupAddon addonType=\"prepend\">\r\n                      <InputGroupText>\r\n                        <i className=\"icon-lock\"></i>\r\n                      </InputGroupText>\r\n                    </InputGroupAddon>\r\n                    <Input\r\n                      type=\"password\"\r\n                      placeholder=\"Password\"\r\n                      autoComplete=\"new-password\"\r\n                      value={account.password}\r\n                      onChange={({ target: { value } }) => {\r\n                        setAccout(prev => ({ ...prev, password: value }));\r\n                        setErr(prev => ({ ...prev, password: false }));\r\n                      }}\r\n                    />\r\n                  </InputGroup>\r\n                  <InputGroup\r\n                    className=\"mb-4\"\r\n                    style={err.password ? styleErr : {}}\r\n                  >\r\n                    <InputGroupAddon addonType=\"prepend\">\r\n                      <InputGroupText>\r\n                        <i className=\"icon-lock\"></i>\r\n                      </InputGroupText>\r\n                    </InputGroupAddon>\r\n                    <Input\r\n                      type=\"password\"\r\n                      placeholder=\"Repeat password\"\r\n                      autoComplete=\"new-password\"\r\n                      value={account.repPassword}\r\n                      onChange={({ target: { value } }) => {\r\n                        setAccout(prev => ({ ...prev, repPassword: value }));\r\n                        setErr(prev => ({ ...prev, password: false }));\r\n                      }}\r\n                    />\r\n                  </InputGroup>\r\n                  <Button\r\n                    color=\"success\"\r\n                    block\r\n                    onClick={handleRegister}\r\n                    disabled={disabled}\r\n                  >\r\n                    Create Account\r\n                  </Button>\r\n                </Form>\r\n              </CardBody>\r\n              <CardFooter className=\"p-4\">\r\n                <Row>\r\n                  <Col xs=\"12\" sm=\"6\">\r\n                    <Button className=\"btn-facebook mb-1\" block>\r\n                      <span>facebook</span>\r\n                    </Button>\r\n                  </Col>\r\n                  <Col xs=\"12\" sm=\"6\">\r\n                    <Button className=\"btn-twitter mb-1\" block>\r\n                      <span>twitter</span>\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              </CardFooter>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n"],"sourceRoot":""}