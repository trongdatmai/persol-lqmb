{"ast":null,"code":"'use strict';\n\nvar GetIntrinsic = require('es-abstract/GetIntrinsic');\n\nvar callBound = require('es-abstract/helpers/callBound');\n\nvar inspect = require('object-inspect');\n\nvar $TypeError = GetIntrinsic('%TypeError%');\nvar $WeakMap = GetIntrinsic('%WeakMap%', true);\nvar $Map = GetIntrinsic('%Map%', true);\nvar $push = callBound('Array.prototype.push');\nvar $weakMapGet = callBound('WeakMap.prototype.get', true);\nvar $weakMapSet = callBound('WeakMap.prototype.set', true);\nvar $weakMapHas = callBound('WeakMap.prototype.has', true);\nvar $mapGet = callBound('Map.prototype.get', true);\nvar $mapSet = callBound('Map.prototype.set', true);\nvar $mapHas = callBound('Map.prototype.has', true);\n\nvar objectGet = function objectGet(objects, key) {\n  // eslint-disable-line consistent-return\n  for (var i = 0; i < objects.length; i += 1) {\n    if (objects[i].key === key) {\n      return objects[i].value;\n    }\n  }\n};\n\nvar objectSet = function objectSet(objects, key, value) {\n  for (var i = 0; i < objects.length; i += 1) {\n    if (objects[i].key === key) {\n      objects[i].value = value; // eslint-disable-line no-param-reassign\n\n      return;\n    }\n  }\n\n  $push(objects, {\n    key: key,\n    value: value\n  });\n};\n\nvar objectHas = function objectHas(objects, key) {\n  for (var i = 0; i < objects.length; i += 1) {\n    if (objects[i].key === key) {\n      return true;\n    }\n  }\n\n  return false;\n};\n\nmodule.exports = function getSideChannel() {\n  var $wm;\n  var $m;\n  var $o;\n  var channel = {\n    assert: function assert(key) {\n      if (!channel.has(key)) {\n        throw new $TypeError('Side channel does not contain ' + inspect(key));\n      }\n    },\n    get: function get(key) {\n      // eslint-disable-line consistent-return\n      if ($WeakMap && key && (typeof key === 'object' || typeof key === 'function')) {\n        if ($wm) {\n          return $weakMapGet($wm, key);\n        }\n      } else if ($Map) {\n        if ($m) {\n          return $mapGet($m, key);\n        }\n      } else {\n        if ($o) {\n          // eslint-disable-line no-lonely-if\n          return objectGet($o, key);\n        }\n      }\n    },\n    has: function has(key) {\n      if ($WeakMap && key && (typeof key === 'object' || typeof key === 'function')) {\n        if ($wm) {\n          return $weakMapHas($wm, key);\n        }\n      } else if ($Map) {\n        if ($m) {\n          return $mapHas($m, key);\n        }\n      } else {\n        if ($o) {\n          // eslint-disable-line no-lonely-if\n          return objectHas($o, key);\n        }\n      }\n\n      return false;\n    },\n    set: function set(key, value) {\n      if ($WeakMap && key && (typeof key === 'object' || typeof key === 'function')) {\n        if (!$wm) {\n          $wm = new $WeakMap();\n        }\n\n        $weakMapSet($wm, key, value);\n      } else if ($Map) {\n        if (!$m) {\n          $m = new $Map();\n        }\n\n        $mapSet($m, key, value);\n      } else {\n        if (!$o) {\n          $o = [];\n        }\n\n        objectSet($o, key, value);\n      }\n    }\n  };\n  return channel;\n};","map":null,"metadata":{},"sourceType":"script"}