{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/Users/maidat/Desktop/team-lq/persol-lqmb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/maidat/Desktop/team-lq/persol-lqmb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/Users/maidat/Desktop/team-lq/persol-lqmb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/Users/maidat/Desktop/team-lq/persol-lqmb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/Users/maidat/Desktop/team-lq/persol-lqmb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nvar events_1 = require(\"events\");\n\nvar promisify_1 = __importDefault(require(\"./promisify\"));\n\nfunction isAgentBase(v) {\n  return Boolean(v) && typeof v.addRequest === 'function';\n}\n\nfunction isHttpAgent(v) {\n  return Boolean(v) && typeof v.addRequest === 'function';\n}\n\nfunction isSecureEndpoint() {\n  var _ref = new Error(),\n      stack = _ref.stack;\n\n  if (typeof stack !== 'string') return false;\n  return stack.split('\\n').some(function (l) {\n    return l.indexOf('(https.js:') !== -1;\n  });\n}\n\nfunction createAgent(callback, opts) {\n  return new createAgent.Agent(callback, opts);\n}\n\n(function (createAgent) {\n  /**\n   * Base `http.Agent` implementation.\n   * No pooling/keep-alive is implemented by default.\n   *\n   * @param {Function} callback\n   * @api public\n   */\n  var Agent =\n  /*#__PURE__*/\n  function (_events_1$EventEmitte) {\n    _inherits(Agent, _events_1$EventEmitte);\n\n    function Agent(callback, _opts) {\n      var _this;\n\n      _classCallCheck(this, Agent);\n\n      _this = _possibleConstructorReturn(this, _getPrototypeOf(Agent).call(this)); // The callback gets promisified lazily\n\n      _this.promisifiedCallback = undefined;\n      var opts = _opts;\n\n      if (typeof callback === 'function') {\n        _this.callback = callback;\n      } else if (callback) {\n        opts = callback;\n      } // timeout for the socket to be returned from the callback\n\n\n      _this.timeout = null;\n\n      if (opts && typeof opts.timeout === 'number') {\n        _this.timeout = opts.timeout;\n      }\n\n      _this.options = opts || {};\n      _this.maxFreeSockets = 1;\n      _this.maxSockets = 1;\n      _this.sockets = [];\n      _this.requests = [];\n      return _this;\n    }\n\n    _createClass(Agent, [{\n      key: \"callback\",\n      value: function callback(req, opts, fn) {\n        throw new Error('\"agent-base\" has no default implementation, you must subclass and override `callback()`');\n      }\n      /**\n       * Called by node-core's \"_http_client.js\" module when creating\n       * a new HTTP request with this Agent instance.\n       *\n       * @api public\n       */\n\n    }, {\n      key: \"addRequest\",\n      value: function addRequest(req, _opts) {\n        var ownOpts = Object.assign({}, _opts);\n\n        if (typeof ownOpts.secureEndpoint !== 'boolean') {\n          ownOpts.secureEndpoint = isSecureEndpoint();\n        } // Set default `host` for HTTP to localhost\n\n\n        if (ownOpts.host == null) {\n          ownOpts.host = 'localhost';\n        } // Set default `port` for HTTP if none was explicitly specified\n\n\n        if (ownOpts.port == null) {\n          ownOpts.port = ownOpts.secureEndpoint ? 443 : 80;\n        }\n\n        var opts = Object.assign(Object.assign({}, this.options), ownOpts);\n\n        if (opts.host && opts.path) {\n          // If both a `host` and `path` are specified then it's most likely the\n          // result of a `url.parse()` call... we need to remove the `path` portion so\n          // that `net.connect()` doesn't attempt to open that as a unix socket file.\n          delete opts.path;\n        }\n\n        delete opts.agent;\n        delete opts.hostname;\n        delete opts._defaultAgent;\n        delete opts.defaultPort;\n        delete opts.createConnection; // Hint to use \"Connection: close\"\n        // XXX: non-documented `http` module API :(\n\n        req._last = true;\n        req.shouldKeepAlive = false; // Create the `stream.Duplex` instance\n\n        var timedOut = false;\n        var timeout = null;\n        var timeoutMs = this.timeout;\n        var freeSocket = this.freeSocket;\n\n        function onerror(err) {\n          if (req._hadError) return;\n          req.emit('error', err); // For Safety. Some additional errors might fire later on\n          // and we need to make sure we don't double-fire the error event.\n\n          req._hadError = true;\n        }\n\n        function ontimeout() {\n          timeout = null;\n          timedOut = true;\n          var err = new Error(\"A \\\"socket\\\" was not created for HTTP request before \".concat(timeoutMs, \"ms\"));\n          err.code = 'ETIMEOUT';\n          onerror(err);\n        }\n\n        function callbackError(err) {\n          if (timedOut) return;\n\n          if (timeout !== null) {\n            clearTimeout(timeout);\n            timeout = null;\n          }\n\n          onerror(err);\n        }\n\n        function onsocket(socket) {\n          var sock;\n\n          function onfree() {\n            freeSocket(sock, opts);\n          }\n\n          if (timedOut) return;\n\n          if (timeout != null) {\n            clearTimeout(timeout);\n            timeout = null;\n          }\n\n          if (isAgentBase(socket) || isHttpAgent(socket)) {\n            // `socket` is actually an `http.Agent` instance, so\n            // relinquish responsibility for this `req` to the Agent\n            // from here on\n            socket.addRequest(req, opts);\n            return;\n          }\n\n          if (socket) {\n            sock = socket;\n            sock.on('free', onfree);\n            req.onSocket(sock);\n            return;\n          }\n\n          var err = new Error(\"no Duplex stream was returned to agent-base for `\".concat(req.method, \" \").concat(req.path, \"`\"));\n          onerror(err);\n        }\n\n        if (typeof this.callback !== 'function') {\n          onerror(new Error('`callback` is not defined'));\n          return;\n        }\n\n        if (!this.promisifiedCallback) {\n          if (this.callback.length >= 3) {\n            // Legacy callback function - convert to a Promise\n            this.promisifiedCallback = promisify_1.default(this.callback);\n          } else {\n            this.promisifiedCallback = this.callback;\n          }\n        }\n\n        if (typeof timeoutMs === 'number' && timeoutMs > 0) {\n          timeout = setTimeout(ontimeout, timeoutMs);\n        }\n\n        if ('port' in opts && typeof opts.port !== 'number') {\n          opts.port = Number(opts.port);\n        }\n\n        try {\n          Promise.resolve(this.promisifiedCallback(req, opts)).then(onsocket, callbackError);\n        } catch (err) {\n          Promise.reject(err).catch(callbackError);\n        }\n      }\n    }, {\n      key: \"freeSocket\",\n      value: function freeSocket(socket, opts) {\n        // TODO reuse sockets\n        socket.destroy();\n      }\n    }, {\n      key: \"destroy\",\n      value: function destroy() {}\n    }, {\n      key: \"defaultPort\",\n      get: function get() {\n        if (typeof this.explicitDefaultPort === 'number') {\n          return this.explicitDefaultPort;\n        } else {\n          return isSecureEndpoint() ? 443 : 80;\n        }\n      },\n      set: function set(v) {\n        this.explicitDefaultPort = v;\n      }\n    }, {\n      key: \"protocol\",\n      get: function get() {\n        if (typeof this.explicitProtocol === 'string') {\n          return this.explicitProtocol;\n        } else {\n          return isSecureEndpoint() ? 'https:' : 'http:';\n        }\n      },\n      set: function set(v) {\n        this.explicitProtocol = v;\n      }\n    }]);\n\n    return Agent;\n  }(events_1.EventEmitter);\n\n  createAgent.Agent = Agent;\n})(createAgent || (createAgent = {})); // So that `instanceof` works correctly\n\n\ncreateAgent.prototype = createAgent.Agent.prototype;\nmodule.exports = createAgent;","map":null,"metadata":{},"sourceType":"script"}