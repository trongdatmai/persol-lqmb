{"ast":null,"code":"import _defineProperty from \"/Users/maidat/Desktop/team-lq/persol-lqmb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/maidat/Desktop/team-lq/persol-lqmb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/maidat/Desktop/team-lq/persol-lqmb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/maidat/Desktop/team-lq/persol-lqmb/src/components/Random/index.js\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport firebase from \"./../../config\";\nimport { Card, CardBody, CardHeader, Col, Row, Table, CardImg, Badge, Button } from \"reactstrap\";\nimport { AppSwitch } from \"@coreui/react\";\nimport ChartTeams from \"./ChartTeams\";\nimport TableTeams from \"./TableTeams\";\nimport OldMatch from \"./OldMatch\";\nimport moment from \"moment\";\n\nvar scrollToRef = function scrollToRef(ref) {\n  return ref.current.scrollIntoView({\n    behavior: \"smooth\",\n    block: \"start\"\n  });\n};\n\nvar Random = function Random(_ref) {\n  var changeStatusProgress = _ref.changeStatusProgress;\n\n  try {\n    var myRef = useRef(null);\n    var ref = firebase.database();\n\n    var _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        users = _useState2[0],\n        setUsers = _useState2[1];\n\n    var _useState3 = useState({}),\n        _useState4 = _slicedToArray(_useState3, 2),\n        teams = _useState4[0],\n        setTeams = _useState4[1];\n\n    var _useState5 = useState({}),\n        _useState6 = _slicedToArray(_useState5, 2),\n        oldMatch = _useState6[0],\n        setOldMatch = _useState6[1];\n\n    useEffect(function () {\n      changeStatusProgress(true);\n      ref.ref(\"users\").orderByValue().on(\"value\", function (snap) {\n        changeStatusProgress(false);\n        setUsers(Object.values(snap.val()).map(function (user) {\n          return _objectSpread({}, user, {\n            checked: true\n          });\n        }));\n      });\n      ref.ref(\"historyRandom\").orderByValue().limitToLast(1).on(\"value\", function (snap) {\n        changeStatusProgress(false);\n\n        if (snap.val() !== null) {\n          setOldMatch(Object.values(snap.val())[0]);\n        }\n      });\n    }, []);\n\n    var statisticPlayer = function statisticPlayer(player) {\n      return users.find(function (user) {\n        return user.ingame === player;\n      });\n    };\n\n    useEffect(function () {\n      scrollToRef(myRef);\n    }, [teams]);\n\n    var lastInfoTeam = function lastInfoTeam() {\n      var _ref2;\n\n      var t1 = teams[0] && teams[0].map(function (i) {\n        var player = i.split(\" - \")[0];\n        var addStatistic = i + \" - \" + statisticPlayer(player).win + \" - \" + statisticPlayer(player).lose + \" - \" + statisticPlayer(player).avatar;\n        return addStatistic;\n      });\n      var t2 = teams[1] && teams[1].map(function (i) {\n        var player = i.split(\" - \")[0];\n        var addStatistic = i + \" - \" + statisticPlayer(player).win + \" - \" + statisticPlayer(player).lose + \" -  \" + statisticPlayer(player).avatar;\n        return addStatistic;\n      });\n      return _ref2 = {}, _defineProperty(_ref2, 0, t1), _defineProperty(_ref2, 1, t2), _ref2;\n    };\n\n    var handleSplitTeam = function handleSplitTeam() {\n      var teams = users.filter(function (i) {\n        return i.checked;\n      });\n      var names = teams.map(function (i) {\n        return i.ingame;\n      });\n      var details = teams.reduce(function (acc, cur) {\n        return _objectSpread({}, acc, _defineProperty({}, cur.ingame, cur.role));\n      }, {});\n\n      var random = function random() {\n        return ~~(Math.random() * 5);\n      };\n\n      var isFull = function isFull(team) {\n        return team.length === 5;\n      };\n\n      var renderLane = function renderLane(player, team) {\n        try {\n          var rLane = details[player][random()];\n\n          if (!rLane || team.some(function (i) {\n            return i.includes(rLane);\n          })) {\n            return renderLane(player, team);\n          }\n\n          return \"\".concat(player, \" - \").concat(rLane);\n        } catch (err) {\n          return handleSplitTeam();\n        }\n      };\n\n      var splitTeam = names.reduce(function (acc, cur) {\n        if (isFull(acc[0]) || isFull(acc[1])) {\n          isFull(acc[0]) ? acc[1].push(renderLane(cur, acc[1])) : acc[0].push(renderLane(cur, acc[1]));\n        } else {\n          var r = random() % 2;\n          acc[r].push(renderLane(cur, acc[r]));\n        }\n\n        return acc;\n      }, {\n        \"0\": [],\n        \"1\": []\n      });\n\n      if (splitTeam[0].filter(Boolean).length === 5 && splitTeam[1].filter(Boolean).length === 5) {\n        setTeams(splitTeam);\n      }\n    };\n\n    var renderUser = function renderUser() {\n      return users.map(function (user, index) {\n        return React.createElement(\"tr\", {\n          key: user.username,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145\n          },\n          __self: this\n        }, index + 1), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 146\n          },\n          __self: this\n        }, user.avatar && React.createElement(CardImg, {\n          style: {\n            width: \"30px\"\n          },\n          src: user.avatar,\n          alt: \"avatar\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148\n          },\n          __self: this\n        })), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 155\n          },\n          __self: this\n        }, user.ingame), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 156\n          },\n          __self: this\n        }, user.role.map(function (r) {\n          return React.createElement(\"span\", {\n            key: user.username + r,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 158\n            },\n            __self: this\n          }, r, \", \");\n        })), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 161\n          },\n          __self: this\n        }, user.win), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 162\n          },\n          __self: this\n        }, user.lose), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 163\n          },\n          __self: this\n        }, user.win / (user.win + user.lose) * 100 || 0, \" \", React.createElement(\"small\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 164\n          },\n          __self: this\n        }, \"%\")), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 166\n          },\n          __self: this\n        }, React.createElement(AppSwitch, {\n          className: \"mx-1\",\n          color: \"success\",\n          checked: user.checked,\n          disabled: handleTotalSelected() === 10 && !user.checked,\n          onChange: function onChange(_ref3) {\n            var checked = _ref3.target.checked;\n            setUsers(function (prev) {\n              return prev.map(function (p) {\n                if (p.username === user.username) {\n                  p.checked = checked;\n                }\n\n                return p;\n              });\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 167\n          },\n          __self: this\n        })));\n      });\n    };\n\n    var handleTotalSelected = function handleTotalSelected() {\n      return users.filter(function (i) {\n        return i.checked;\n      }).length;\n    };\n\n    var handleSaveTeamRandom = function handleSaveTeamRandom() {\n      changeStatusProgress(true);\n      var statistic = {\n        blueTeam: teams[0],\n        redTeam: teams[1],\n        dateMatch: moment(new Date()).format(\"YYYY-MM-DD\"),\n        complete: false,\n        authorCreate: JSON.parse(localStorage.getItem(\"account\")).username,\n        authorUpdate: \"\"\n      };\n      ref.ref(\"historyRandom\").push(statistic, function (snap) {\n        changeStatusProgress(false);\n      });\n      setOldMatch(statistic);\n    };\n\n    console.log(\"teams\", oldMatch);\n    if (oldMatch.complete === false) return React.createElement(OldMatch, {\n      oldMatch: oldMatch,\n      changeStatusProgress: changeStatusProgress,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    });\n    return React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }, React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, React.createElement(CardHeader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fa fa-align-justify\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }), \" Users table\"), React.createElement(CardBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, \"Player selected\", \" \", React.createElement(Badge, {\n      color: handleTotalSelected() === 10 ? \"success\" : \"secondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }, handleTotalSelected())), handleTotalSelected() !== 10 && React.createElement(\"small\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }, \"Choose 10 players from the board\") || React.createElement(\"small\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }, \"Picked enough\"), React.createElement(Table, {\n      hover: true,\n      bordered: true,\n      striped: true,\n      responsive: true,\n      size: \"sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }, \"#\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }, \"Avatar\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }, \"Player\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }, \"Role\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }, \"Win\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }, \"Lost\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }, \"Win rate \", React.createElement(\"small\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }, \"(%)\")), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }, \"Status\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }, renderUser())), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255\n      },\n      __self: this\n    }, React.createElement(Col, {\n      col: \"6\",\n      sm: \"4\",\n      md: \"3\",\n      xl: \"2\",\n      className: \"mb-3 mb-xl-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    }, React.createElement(Button, {\n      block: true,\n      color: \"success\",\n      disabled: handleTotalSelected() !== 10,\n      onClick: handleSplitTeam,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }, \"Random team\"))), React.createElement(\"div\", {\n      ref: myRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267\n      },\n      __self: this\n    }, teams && JSON.stringify(teams) !== \"{}\" && React.createElement(React.Fragment, null, React.createElement(TableTeams, {\n      teams: lastInfoTeam(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    }), React.createElement(ChartTeams, {\n      teams: lastInfoTeam(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    }), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272\n      },\n      __self: this\n    }, React.createElement(Col, {\n      col: \"6\",\n      sm: \"4\",\n      md: \"3\",\n      xl: \"2\",\n      className: \"mb-3 mb-xl-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273\n      },\n      __self: this\n    }, React.createElement(Button, {\n      block: true,\n      color: \"success\",\n      onClick: handleSaveTeamRandom,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280\n      },\n      __self: this\n    }, \"Save Team\")))))))));\n  } catch (e) {\n    console.log(loi);\n  }\n};\n\nexport default Random;","map":{"version":3,"sources":["/Users/maidat/Desktop/team-lq/persol-lqmb/src/components/Random/index.js"],"names":["React","useState","useEffect","useRef","firebase","Card","CardBody","CardHeader","Col","Row","Table","CardImg","Badge","Button","AppSwitch","ChartTeams","TableTeams","OldMatch","moment","scrollToRef","ref","current","scrollIntoView","behavior","block","Random","changeStatusProgress","myRef","database","users","setUsers","teams","setTeams","oldMatch","setOldMatch","orderByValue","on","snap","Object","values","val","map","user","checked","limitToLast","statisticPlayer","player","find","ingame","lastInfoTeam","t1","i","split","addStatistic","win","lose","avatar","t2","handleSplitTeam","filter","names","details","reduce","acc","cur","role","random","Math","isFull","team","length","renderLane","rLane","some","includes","err","splitTeam","push","r","Boolean","renderUser","index","username","width","handleTotalSelected","target","prev","p","handleSaveTeamRandom","statistic","blueTeam","redTeam","dateMatch","Date","format","complete","authorCreate","JSON","parse","localStorage","getItem","authorUpdate","console","log","stringify","e","loi"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport firebase from \"./../../config\";\nimport {\n  Card,\n  CardBody,\n  CardHeader,\n  Col,\n  Row,\n  Table,\n  CardImg,\n  Badge,\n  Button\n} from \"reactstrap\";\nimport { AppSwitch } from \"@coreui/react\";\nimport ChartTeams from \"./ChartTeams\";\nimport TableTeams from \"./TableTeams\";\nimport OldMatch from \"./OldMatch\";\nimport moment from \"moment\";\n\nconst scrollToRef = ref =>\n  ref.current.scrollIntoView({ behavior: \"smooth\", block: \"start\" });\n\nconst Random = ({ changeStatusProgress }) => {\n  try {\n    const myRef = useRef(null);\n    const ref = firebase.database();\n    const [users, setUsers] = useState([]);\n    const [teams, setTeams] = useState({});\n    const [oldMatch, setOldMatch] = useState({});\n\n    useEffect(() => {\n      changeStatusProgress(true);\n      ref\n        .ref(\"users\")\n        .orderByValue()\n        .on(\"value\", snap => {\n          changeStatusProgress(false);\n          setUsers(\n            Object.values(snap.val()).map(user => ({ ...user, checked: true }))\n          );\n        });\n\n      ref\n        .ref(\"historyRandom\")\n        .orderByValue()\n        .limitToLast(1)\n        .on(\"value\", snap => {\n          changeStatusProgress(false);\n          if (snap.val() !== null) {\n            setOldMatch(Object.values(snap.val())[0]);\n          }\n        });\n    }, []);\n\n    const statisticPlayer = player =>\n      users.find(user => user.ingame === player);\n\n    useEffect(() => {\n      scrollToRef(myRef);\n    }, [teams]);\n\n    const lastInfoTeam = () => {\n      const t1 =\n        teams[0] &&\n        teams[0].map(i => {\n          const player = i.split(\" - \")[0];\n          const addStatistic =\n            i +\n            \" - \" +\n            statisticPlayer(player).win +\n            \" - \" +\n            statisticPlayer(player).lose +\n            \" - \" +\n            statisticPlayer(player).avatar;\n          return addStatistic;\n        });\n      const t2 =\n        teams[1] &&\n        teams[1].map(i => {\n          const player = i.split(\" - \")[0];\n          const addStatistic =\n            i +\n            \" - \" +\n            statisticPlayer(player).win +\n            \" - \" +\n            statisticPlayer(player).lose +\n            \" -  \" +\n            statisticPlayer(player).avatar;\n          return addStatistic;\n        });\n      return { [0]: t1, [1]: t2 };\n    };\n\n    const handleSplitTeam = () => {\n      const teams = users.filter(i => i.checked);\n      const names = teams.map(i => i.ingame);\n      const details = teams.reduce(\n        (acc, cur) => ({ ...acc, [cur.ingame]: cur.role }),\n        {}\n      );\n\n      const random = () => ~~(Math.random() * 5);\n\n      const isFull = team => team.length === 5;\n\n      const renderLane = (player, team) => {\n        try {\n          const rLane = details[player][random()];\n          if (!rLane || team.some(i => i.includes(rLane))) {\n            return renderLane(player, team);\n          }\n          return `${player} - ${rLane}`;\n        } catch (err) {\n          return handleSplitTeam();\n        }\n      };\n\n      const splitTeam = names.reduce(\n        (acc, cur) => {\n          if (isFull(acc[0]) || isFull(acc[1])) {\n            isFull(acc[0])\n              ? acc[1].push(renderLane(cur, acc[1]))\n              : acc[0].push(renderLane(cur, acc[1]));\n          } else {\n            const r = random() % 2;\n            acc[r].push(renderLane(cur, acc[r]));\n          }\n          return acc;\n        },\n        { \"0\": [], \"1\": [] }\n      );\n\n      if (\n        splitTeam[0].filter(Boolean).length === 5 &&\n        splitTeam[1].filter(Boolean).length === 5\n      ) {\n        setTeams(splitTeam);\n      }\n    };\n\n    const renderUser = () => {\n      return users.map((user, index) => {\n        return (\n          <tr key={user.username}>\n            <td>{index + 1}</td>\n            <td>\n              {user.avatar && (\n                <CardImg\n                  style={{ width: \"30px\" }}\n                  src={user.avatar}\n                  alt=\"avatar\"\n                />\n              )}\n            </td>\n            <td>{user.ingame}</td>\n            <td>\n              {user.role.map(r => (\n                <span key={user.username + r}>{r}, </span>\n              ))}\n            </td>\n            <td>{user.win}</td>\n            <td>{user.lose}</td>\n            <td>\n              {(user.win / (user.win + user.lose)) * 100 || 0} <small>%</small>\n            </td>\n            <td>\n              <AppSwitch\n                className={\"mx-1\"}\n                color={\"success\"}\n                checked={user.checked}\n                disabled={handleTotalSelected() === 10 && !user.checked}\n                onChange={({ target: { checked } }) => {\n                  setUsers(prev =>\n                    prev.map(p => {\n                      if (p.username === user.username) {\n                        p.checked = checked;\n                      }\n                      return p;\n                    })\n                  );\n                }}\n              />\n            </td>\n          </tr>\n        );\n      });\n    };\n\n    const handleTotalSelected = () => {\n      return users.filter(i => i.checked).length;\n    };\n\n    const handleSaveTeamRandom = () => {\n      changeStatusProgress(true);\n      const statistic = {\n        blueTeam: teams[0],\n        redTeam: teams[1],\n        dateMatch: moment(new Date()).format(\"YYYY-MM-DD\"),\n        complete: false,\n        authorCreate: JSON.parse(localStorage.getItem(\"account\")).username,\n        authorUpdate: \"\"\n      };\n\n      ref.ref(\"historyRandom\").push(statistic, snap => {\n        changeStatusProgress(false);\n      });\n      setOldMatch(statistic);\n    };\n\n    console.log(\"teams\", oldMatch);\n    if (oldMatch.complete === false)\n      return (\n        <OldMatch\n          oldMatch={oldMatch}\n          changeStatusProgress={changeStatusProgress}\n        />\n      );\n\n    return (\n      <Row>\n        <Col>\n          <Card>\n            <CardHeader>\n              <i className=\"fa fa-align-justify\"></i> Users table\n            </CardHeader>\n            <CardBody>\n              <h4>\n                Player selected{\" \"}\n                <Badge\n                  color={handleTotalSelected() === 10 ? \"success\" : \"secondary\"}\n                >\n                  {handleTotalSelected()}\n                </Badge>\n              </h4>\n              {(handleTotalSelected() !== 10 && (\n                <small>Choose 10 players from the board</small>\n              )) || <small>Picked enough</small>}\n              <Table hover bordered striped responsive size=\"sm\">\n                <thead>\n                  <tr>\n                    <th>#</th>\n                    <th>Avatar</th>\n                    <th>Player</th>\n                    <th>Role</th>\n                    <th>Win</th>\n                    <th>Lost</th>\n                    <th>\n                      Win rate <small>(%)</small>\n                    </th>\n                    <th>Status</th>\n                  </tr>\n                </thead>\n                <tbody>{renderUser()}</tbody>\n              </Table>\n              <Row>\n                <Col col=\"6\" sm=\"4\" md=\"3\" xl=\"2\" className=\"mb-3 mb-xl-0\">\n                  <Button\n                    block\n                    color=\"success\"\n                    disabled={handleTotalSelected() !== 10}\n                    onClick={handleSplitTeam}\n                  >\n                    Random team\n                  </Button>\n                </Col>\n              </Row>\n              <div ref={myRef}>\n                {teams && JSON.stringify(teams) !== \"{}\" && (\n                  <>\n                    <TableTeams teams={lastInfoTeam()} />\n                    <ChartTeams teams={lastInfoTeam()} />\n                    <Row>\n                      <Col\n                        col=\"6\"\n                        sm=\"4\"\n                        md=\"3\"\n                        xl=\"2\"\n                        className=\"mb-3 mb-xl-0\"\n                      >\n                        <Button\n                          block\n                          color=\"success\"\n                          onClick={handleSaveTeamRandom}\n                        >\n                          Save Team\n                        </Button>\n                      </Col>\n                    </Row>\n                  </>\n                )}\n              </div>\n            </CardBody>\n          </Card>\n        </Col>\n      </Row>\n    );\n  } catch (e) {\n    console.log(loi);\n  }\n};\n\nexport default Random;\n"]},"metadata":{},"sourceType":"module"}