{"ast":null,"code":"import _defineProperty from \"/Users/maidat/Desktop/team-lq/persol-lqmb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/maidat/Desktop/team-lq/persol-lqmb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/maidat/Desktop/team-lq/persol-lqmb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/maidat/Desktop/team-lq/persol-lqmb/src/components/Random/index.js\";\nimport React, { useState, useEffect } from \"react\";\nimport firebase from \"./../../config\";\nimport { Card, CardBody, CardHeader, Col, Row, Table, CardImg, Badge, Button } from \"reactstrap\";\nimport { AppSwitch } from \"@coreui/react\";\n\nvar Random = function Random(_ref) {\n  var changeStatusProgress = _ref.changeStatusProgress;\n  var ref = firebase.database();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      users = _useState2[0],\n      setUsers = _useState2[1];\n\n  useEffect(function () {\n    changeStatusProgress(true);\n    ref.ref(\"users\").orderByValue().on(\"value\", function (snap) {\n      changeStatusProgress(false);\n      setUsers(Object.values(snap.val()).map(function (user) {\n        return _objectSpread({}, user, {\n          checked: true\n        });\n      }));\n    });\n  }, []);\n\n  var handleSplitTeam = function handleSplitTeam() {\n    var teams = users.filter(function (i) {\n      return i.checked;\n    });\n    var names = teams.map(function (i) {\n      return i.ingame;\n    });\n    var details = teams.reduce(function (acc, cur) {\n      acc = _objectSpread({}, acc, _defineProperty({}, cur.ingame, cur.role));\n    }, {});\n\n    var random = function random() {\n      return ~~(Math.random() * 5);\n    };\n\n    var isFull = function isFull(team) {\n      return team.length === 5;\n    }; // const renderLane = (player, team) => {\n    //   const rLane = details[player][random()];\n    //   if (!rLane || team.some(i => i.includes(rLane))) {\n    //     return renderLane(player, team);\n    //   }\n    //   return `${player} - ${rLane}`;\n    // };\n\n\n    console.log(names, details);\n  };\n\n  var renderUser = function renderUser() {\n    return users.map(function (user, index) {\n      return React.createElement(\"tr\", {\n        key: user.username,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, index + 1), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, user.avatar && React.createElement(CardImg, {\n        style: {\n          width: \"30px\"\n        },\n        src: user.avatar,\n        alt: \"avatar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      })), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, user.ingame), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, user.role.map(function (r) {\n        return React.createElement(\"span\", {\n          key: user.username + r,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }, r, \", \");\n      })), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(\"small\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"NA\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(\"small\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, \"NA\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(\"small\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"NA\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(AppSwitch, {\n        className: \"mx-1\",\n        color: \"success\",\n        checked: user.checked,\n        disabled: handleTotalSelected() === 10 && !user.checked,\n        onChange: function onChange(_ref2) {\n          var checked = _ref2.target.checked;\n          setUsers(function (prev) {\n            return prev.map(function (p) {\n              if (p.username === user.username) {\n                p.checked = checked;\n              }\n\n              return p;\n            });\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      })));\n    });\n  };\n\n  var handleTotalSelected = function handleTotalSelected() {\n    return users.filter(function (i) {\n      return i.checked;\n    }).length;\n  };\n\n  return React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(Col, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, React.createElement(CardHeader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fa fa-align-justify\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }), \" Users table\"), React.createElement(CardBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, \"Player selected\", \" \", React.createElement(Badge, {\n    color: handleTotalSelected() === 10 ? \"success\" : \"secondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, handleTotalSelected())), handleTotalSelected() !== 10 && React.createElement(\"small\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, \"Choose 10 players from the board\") || React.createElement(\"small\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, \"Picked enough\"), React.createElement(Table, {\n    hover: true,\n    bordered: true,\n    striped: true,\n    responsive: true,\n    size: \"sm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, React.createElement(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, \"#\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, \"Avatar\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, \"Player\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, \"Role\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, \"Win\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, \"Lost\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, \"Win rate \", React.createElement(\"small\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, \"(%)\")), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, \"Status\"))), React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, renderUser())), React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, React.createElement(Col, {\n    col: \"6\",\n    sm: \"4\",\n    md: \"3\",\n    xl: \"2\",\n    className: \"mb-3 mb-xl-0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, React.createElement(Button, {\n    block: true,\n    color: \"success\",\n    disabled: handleTotalSelected() !== 10,\n    onClick: handleSplitTeam,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, \"Random team\")))))));\n};\n\nexport default Random;","map":{"version":3,"sources":["/Users/maidat/Desktop/team-lq/persol-lqmb/src/components/Random/index.js"],"names":["React","useState","useEffect","firebase","Card","CardBody","CardHeader","Col","Row","Table","CardImg","Badge","Button","AppSwitch","Random","changeStatusProgress","ref","database","users","setUsers","orderByValue","on","snap","Object","values","val","map","user","checked","handleSplitTeam","teams","filter","i","names","ingame","details","reduce","acc","cur","role","random","Math","isFull","team","length","console","log","renderUser","index","username","avatar","width","r","handleTotalSelected","target","prev","p"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport firebase from \"./../../config\";\nimport {\n  Card,\n  CardBody,\n  CardHeader,\n  Col,\n  Row,\n  Table,\n  CardImg,\n  Badge,\n  Button\n} from \"reactstrap\";\nimport { AppSwitch } from \"@coreui/react\";\n\nconst Random = ({ changeStatusProgress }) => {\n  const ref = firebase.database();\n  const [users, setUsers] = useState([]);\n\n  useEffect(() => {\n    changeStatusProgress(true);\n    ref\n      .ref(\"users\")\n      .orderByValue()\n      .on(\"value\", snap => {\n        changeStatusProgress(false);\n        setUsers(\n          Object.values(snap.val()).map(user => ({ ...user, checked: true }))\n        );\n      });\n  }, []);\n\n  const handleSplitTeam = () => {\n    const teams = users.filter(i => i.checked);\n    const names = teams.map(i => i.ingame);\n    const details = teams.reduce((acc, cur) => {\n        acc = {...acc, [cur.ingame]: cur.role}\n    }, {})\n    const random = () => ~~(Math.random() * 5);\n\n    const isFull = team => team.length === 5;\n\n    // const renderLane = (player, team) => {\n    //   const rLane = details[player][random()];\n    //   if (!rLane || team.some(i => i.includes(rLane))) {\n    //     return renderLane(player, team);\n    //   }\n    //   return `${player} - ${rLane}`;\n    // };\n\n    console.log(names, details);\n  };\n\n  const renderUser = () => {\n    return users.map((user, index) => {\n      return (\n        <tr key={user.username}>\n          <td>{index + 1}</td>\n          <td>\n            {user.avatar && (\n              <CardImg\n                style={{ width: \"30px\" }}\n                src={user.avatar}\n                alt=\"avatar\"\n              />\n            )}\n          </td>\n          <td>{user.ingame}</td>\n          <td>\n            {user.role.map(r => (\n              <span key={user.username + r}>{r}, </span>\n            ))}\n          </td>\n          <td>\n            <small>NA</small>\n          </td>\n          <td>\n            <small>NA</small>\n          </td>\n          <td>\n            <small>NA</small>\n          </td>\n          <td>\n            <AppSwitch\n              className={\"mx-1\"}\n              color={\"success\"}\n              checked={user.checked}\n              disabled={handleTotalSelected() === 10 && !user.checked}\n              onChange={({ target: { checked } }) => {\n                setUsers(prev =>\n                  prev.map(p => {\n                    if (p.username === user.username) {\n                      p.checked = checked;\n                    }\n                    return p;\n                  })\n                );\n              }}\n            />\n          </td>\n        </tr>\n      );\n    });\n  };\n\n  const handleTotalSelected = () => {\n    return users.filter(i => i.checked).length;\n  };\n\n  return (\n    <Row>\n      <Col>\n        <Card>\n          <CardHeader>\n            <i className=\"fa fa-align-justify\"></i> Users table\n          </CardHeader>\n          <CardBody>\n            <h4>\n              Player selected{\" \"}\n              <Badge\n                color={handleTotalSelected() === 10 ? \"success\" : \"secondary\"}\n              >\n                {handleTotalSelected()}\n              </Badge>\n            </h4>\n            {(handleTotalSelected() !== 10 && (\n              <small>Choose 10 players from the board</small>\n            )) || <small>Picked enough</small>}\n            <Table hover bordered striped responsive size=\"sm\">\n              <thead>\n                <tr>\n                  <th>#</th>\n                  <th>Avatar</th>\n                  <th>Player</th>\n                  <th>Role</th>\n                  <th>Win</th>\n                  <th>Lost</th>\n                  <th>\n                    Win rate <small>(%)</small>\n                  </th>\n                  <th>Status</th>\n                </tr>\n              </thead>\n              <tbody>{renderUser()}</tbody>\n            </Table>\n            <Row>\n              <Col col=\"6\" sm=\"4\" md=\"3\" xl=\"2\" className=\"mb-3 mb-xl-0\">\n                <Button\n                  block\n                  color=\"success\"\n                  disabled={handleTotalSelected() !== 10}\n                  onClick={handleSplitTeam}\n                >\n                  Random team\n                </Button>\n              </Col>\n            </Row>\n          </CardBody>\n        </Card>\n      </Col>\n    </Row>\n  );\n};\n\nexport default Random;\n"]},"metadata":{},"sourceType":"module"}