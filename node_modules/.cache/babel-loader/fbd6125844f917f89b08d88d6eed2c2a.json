{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\Admin\\\\Desktop\\\\persol\\\\persol-lqmb\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\Admin\\\\Desktop\\\\persol\\\\persol-lqmb\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"C:\\\\Users\\\\Admin\\\\Desktop\\\\persol\\\\persol-lqmb\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"C:\\\\Users\\\\Admin\\\\Desktop\\\\persol\\\\persol-lqmb\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"C:\\\\Users\\\\Admin\\\\Desktop\\\\persol\\\\persol-lqmb\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\persol\\\\persol-lqmb\\\\src\\\\components\\\\Random\\\\OldMatch.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Card, CardBody, CardHeader, Col, Row, ListGroupItem, ListGroup, FormGroup, Label, Input, Button } from \"reactstrap\";\nimport moment from \"moment\";\nimport firebase from \"./../../config\";\nimport { useHistory } from \"react-router-dom\";\n\nvar OldMatch = function OldMatch(_ref) {\n  var oldMatch = _ref.oldMatch,\n      changeStatusProgress = _ref.changeStatusProgress,\n      reset = _ref.reset;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      matchs = _useState2[0],\n      setMatchs = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      err = _useState4[0],\n      setErr = _useState4[1];\n\n  var ref = firebase.database();\n  var history = useHistory();\n  useEffect(function () {\n    var tmp = false;\n\n    for (var i = 0; i < matchs.length; i++) {\n      for (var j in matchs[i]) {\n        if (matchs[i][j] === \"\") {\n          tmp = true;\n          break;\n        }\n      }\n\n      if (tmp) break;\n    }\n\n    !!matchs.length ? setErr(tmp) : setErr(true);\n  }, [matchs]);\n\n  var handleRenderMatch = function handleRenderMatch(_ref2) {\n    var value = _ref2.target.value;\n    var statisticMatch = [];\n\n    for (var i = 0; i < value; i++) {\n      statisticMatch = [].concat(_toConsumableArray(statisticMatch), [{\n        mvpWin: \"\",\n        mvpLose: \"\",\n        blueKill: \"\",\n        redKill: \"\",\n        win: \"\"\n      }]);\n    }\n\n    setMatchs(statisticMatch);\n  };\n\n  var renderTeamPlayer = function renderTeamPlayer(nameTeam) {\n    if (nameTeam === \"blueTeam\") {\n      return {\n        win: oldMatch.blueTeam,\n        lose: oldMatch.redTeam\n      };\n    }\n\n    if (nameTeam === \"redTeam\") {\n      return {\n        win: oldMatch.redTeam,\n        lose: oldMatch.blueTeam\n      };\n    }\n  };\n\n  var handleTeamWinStatics = function handleTeamWinStatics(value, match) {\n    setMatchs(function (prev) {\n      var newMatch = prev;\n      newMatch[match] = _objectSpread({}, newMatch[match], {}, value);\n      return JSON.parse(JSON.stringify(newMatch));\n    });\n  };\n\n  var handleSaveHistory =\n  /*#__PURE__*/\n  function () {\n    var _ref3 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return matchs.map(function (match) {\n                ref.ref(\"historyMatch\").push(_objectSpread({}, match, {\n                  blueTeam: oldMatch.blueTeam,\n                  redTeam: oldMatch.redTeam,\n                  dateMatch: oldMatch.dateMatch,\n                  authorCreate: JSON.parse(localStorage.getItem(\"account\")).username,\n                  authorUpdate: \"\"\n                }));\n                var teamWin = oldMatch[match.win].map(function (i) {\n                  return i.split(\" - \")[0];\n                });\n                var teamLose = oldMatch[match.win === \"blueTeam\" ? \"redTeam\" : \"blueTeam\"].map(function (i) {\n                  return i.split(\" - \")[0];\n                });\n                ref.ref(\"users\").once(\"value\", function (snap) {\n                  if (snap.val() !== null) {\n                    var tmp = JSON.parse(JSON.stringify(snap.val()));\n                    Object.values(snap.val()).forEach(function (i, index) {\n                      if (teamWin.includes(i.ingame.trim())) {\n                        i = _objectSpread({}, i, {\n                          win: parseInt(i.win) + 1\n                        });\n                      }\n\n                      if (teamLose.includes(i.ingame.trim())) {\n                        i = _objectSpread({}, i, {\n                          lose: parseInt(i.lose) + 1\n                        });\n                      }\n\n                      var key = Object.keys(snap.val())[index];\n                      tmp[key] = JSON.parse(JSON.stringify(i));\n                    });\n                    ref.ref(\"users\").update(tmp, function () {\n                      console.log('update done');\n                    });\n                  }\n                });\n              });\n\n            case 2:\n              _context.next = 4;\n              return ref.ref(\"historyRandom\").orderByValue().limitToLast(1).on(\"value\", function (snap) {\n                changeStatusProgress(false);\n\n                if (snap.val() !== null) {\n                  ref.ref().child(\"/historyRandom/\" + Object.keys(snap.val())[0]).update(_objectSpread({}, oldMatch, {\n                    complete: true\n                  }), function () {\n                    console.log('update 2 done');\n                  });\n                }\n              });\n\n            case 4:\n              setTimeout(window.location.reload(), 500);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleSaveHistory() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  return React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, React.createElement(Col, {\n    xs: \"12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, React.createElement(CardHeader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fa fa-align-justify\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }), \" Random match results on\", \" \", oldMatch.dateMatch), React.createElement(CardBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, React.createElement(Col, {\n    xs: 12,\n    sm: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, React.createElement(CardHeader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, \"Blue Team\")), React.createElement(CardBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, React.createElement(ListGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, oldMatch.blueTeam.map(function (i) {\n    return React.createElement(ListGroupItem, {\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, \" \", i, \" \");\n  }))))), React.createElement(Col, {\n    xs: 12,\n    sm: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, React.createElement(CardHeader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, \"Red Team\")), React.createElement(CardBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, React.createElement(ListGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, oldMatch.redTeam.map(function (i) {\n    return React.createElement(ListGroupItem, {\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, \" \", i, \" \");\n  }))))), React.createElement(Col, {\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, React.createElement(Label, {\n    htmlFor: \"NOM\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, \"Number of match:\"), React.createElement(Input, {\n    type: \"text\",\n    id: \"NOM\",\n    placeholder: \"0\",\n    onChange: handleRenderMatch,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }))), React.createElement(Col, {\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }, !!matchs.length && matchs.map(function (m, index) {\n    return React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, React.createElement(CardHeader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, \"Match \", index + 1, \":\")), React.createElement(CardBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      row: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: \"3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, React.createElement(Label, {\n      htmlFor: \"select\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, \"Team win:\")), React.createElement(Col, {\n      xs: \"12\",\n      md: \"9\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, React.createElement(Input, {\n      type: \"select\",\n      name: \"select\",\n      id: \"select\",\n      onChange: function onChange(_ref4) {\n        var value = _ref4.target.value;\n        return handleTeamWinStatics({\n          win: value\n        }, index);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, \"Please select\"), React.createElement(\"option\", {\n      value: \"blueTeam\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, \"Blue Team\"), React.createElement(\"option\", {\n      value: \"redTeam\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, \"Red Team\")))), !!m.win && React.createElement(React.Fragment, null, React.createElement(FormGroup, {\n      row: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: \"3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, React.createElement(Label, {\n      htmlFor: \"select\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, \"MVP team win:\")), React.createElement(Col, {\n      xs: \"12\",\n      md: \"9\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, React.createElement(Input, {\n      type: \"select\",\n      name: \"select\",\n      id: \"select\",\n      onChange: function onChange(_ref5) {\n        var value = _ref5.target.value;\n        return handleTeamWinStatics({\n          mvpWin: value\n        }, index);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, \"Please select\"), renderTeamPlayer(m.win).win.map(function (i) {\n      return React.createElement(\"option\", {\n        value: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }, i);\n    })))), React.createElement(FormGroup, {\n      row: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: \"3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }, React.createElement(Label, {\n      htmlFor: \"select\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, \"MVP team lose:\")), React.createElement(Col, {\n      xs: \"12\",\n      md: \"9\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }, React.createElement(Input, {\n      type: \"select\",\n      name: \"select\",\n      id: \"select\",\n      onChange: function onChange(_ref6) {\n        var value = _ref6.target.value;\n        return handleTeamWinStatics({\n          mvpLose: value\n        }, index);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }, \"Please select\"), renderTeamPlayer(m.win).lose.map(function (i) {\n      return React.createElement(\"option\", {\n        value: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }, i);\n    })))), React.createElement(FormGroup, {\n      row: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: \"3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }, React.createElement(Label, {\n      htmlFor: \"select\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }, \"Blue team kill:\")), React.createElement(Col, {\n      xs: \"12\",\n      md: \"9\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }, React.createElement(Input, {\n      type: \"text\",\n      name: \"select\",\n      id: \"select\",\n      placeholder: \"0\",\n      onChange: function onChange(_ref7) {\n        var value = _ref7.target.value;\n        return handleTeamWinStatics({\n          blueKill: value\n        }, index);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }))), React.createElement(FormGroup, {\n      row: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: \"3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    }, React.createElement(Label, {\n      htmlFor: \"select\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    }, \"Red team kill:\")), React.createElement(Col, {\n      xs: \"12\",\n      md: \"9\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    }, React.createElement(Input, {\n      type: \"text\",\n      name: \"select\",\n      id: \"select\",\n      placeholder: \"0\",\n      onChange: function onChange(_ref8) {\n        var value = _ref8.target.value;\n        return handleTeamWinStatics({\n          redKill: value\n        }, index);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272\n      },\n      __self: this\n    }))), React.createElement(FormGroup, {\n      row: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: \"3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287\n      },\n      __self: this\n    }, React.createElement(Label, {\n      htmlFor: \"select\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288\n      },\n      __self: this\n    }, \"Time to play (integer):\")), React.createElement(Col, {\n      xs: \"12\",\n      md: \"9\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290\n      },\n      __self: this\n    }, React.createElement(Input, {\n      type: \"text\",\n      name: \"select\",\n      id: \"select\",\n      placeholder: \"15\",\n      onChange: function onChange(_ref9) {\n        var value = _ref9.target.value;\n        return handleTeamWinStatics({\n          timeToPlay: value\n        }, index);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291\n      },\n      __self: this\n    }))))));\n  }))), React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312\n    },\n    __self: this\n  }, React.createElement(Col, {\n    col: \"6\",\n    sm: \"4\",\n    md: \"3\",\n    xl: \"2\",\n    className: \"mb-3 mb-xl-0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313\n    },\n    __self: this\n  }, React.createElement(Button, {\n    block: true,\n    color: \"success\",\n    onClick: handleSaveHistory,\n    disabled: err,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314\n    },\n    __self: this\n  }, \"Save\")))))));\n};\n\nexport default OldMatch;","map":{"version":3,"sources":["C:/Users/Admin/Desktop/persol/persol-lqmb/src/components/Random/OldMatch.js"],"names":["React","useState","useEffect","Card","CardBody","CardHeader","Col","Row","ListGroupItem","ListGroup","FormGroup","Label","Input","Button","moment","firebase","useHistory","OldMatch","oldMatch","changeStatusProgress","reset","matchs","setMatchs","err","setErr","ref","database","history","tmp","i","length","j","handleRenderMatch","value","target","statisticMatch","mvpWin","mvpLose","blueKill","redKill","win","renderTeamPlayer","nameTeam","blueTeam","lose","redTeam","handleTeamWinStatics","match","prev","newMatch","JSON","parse","stringify","handleSaveHistory","map","push","dateMatch","authorCreate","localStorage","getItem","username","authorUpdate","teamWin","split","teamLose","once","snap","val","Object","values","forEach","index","includes","ingame","trim","parseInt","key","keys","update","console","log","orderByValue","limitToLast","on","child","complete","setTimeout","window","location","reload","m","timeToPlay"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  Col,\r\n  Row,\r\n  ListGroupItem,\r\n  ListGroup,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  Button\r\n} from \"reactstrap\";\r\nimport moment from \"moment\";\r\nimport firebase from \"./../../config\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst OldMatch = ({ oldMatch, changeStatusProgress, reset }) => {\r\n  const [matchs, setMatchs] = useState([]);\r\n  const [err, setErr] = useState(true);\r\n  const ref = firebase.database();\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    let tmp = false;\r\n    for (let i = 0; i < matchs.length; i++) {\r\n      for (let j in matchs[i]) {\r\n        if (matchs[i][j] === \"\") {\r\n          tmp = true;\r\n          break;\r\n        }\r\n      }\r\n      if (tmp) break;\r\n    }\r\n    !!matchs.length ? setErr(tmp) : setErr(true);\r\n  }, [matchs]);\r\n\r\n  const handleRenderMatch = ({ target: { value } }) => {\r\n    let statisticMatch = [];\r\n    for (let i = 0; i < value; i++) {\r\n      statisticMatch = [\r\n        ...statisticMatch,\r\n        {\r\n          mvpWin: \"\",\r\n          mvpLose: \"\",\r\n          blueKill: \"\",\r\n          redKill: \"\",\r\n          win: \"\"\r\n        }\r\n      ];\r\n    }\r\n    setMatchs(statisticMatch);\r\n  };\r\n\r\n  const renderTeamPlayer = nameTeam => {\r\n    if (nameTeam === \"blueTeam\") {\r\n      return { win: oldMatch.blueTeam, lose: oldMatch.redTeam };\r\n    }\r\n    if (nameTeam === \"redTeam\") {\r\n      return { win: oldMatch.redTeam, lose: oldMatch.blueTeam };\r\n    }\r\n  };\r\n\r\n  const handleTeamWinStatics = (value, match) => {\r\n    setMatchs(prev => {\r\n      let newMatch = prev;\r\n      newMatch[match] = { ...newMatch[match], ...value };\r\n      return JSON.parse(JSON.stringify(newMatch));\r\n    });\r\n  };\r\n  const handleSaveHistory = async () => {\r\n    await matchs.map(match => {\r\n      ref.ref(\"historyMatch\").push({\r\n        ...match,\r\n        blueTeam: oldMatch.blueTeam,\r\n        redTeam: oldMatch.redTeam,\r\n        dateMatch: oldMatch.dateMatch,\r\n        authorCreate: JSON.parse(localStorage.getItem(\"account\")).username,\r\n        authorUpdate: \"\"\r\n      });\r\n\r\n      const teamWin = oldMatch[match.win].map(i => i.split(\" - \")[0]);\r\n      const teamLose = oldMatch[\r\n        match.win === \"blueTeam\" ? \"redTeam\" : \"blueTeam\"\r\n      ].map(i => i.split(\" - \")[0]);\r\n      ref.ref(\"users\").once(\"value\", snap => {\r\n        if (snap.val() !== null) {\r\n          const tmp = JSON.parse(JSON.stringify(snap.val()));\r\n          Object.values(snap.val()).forEach((i, index) => {\r\n            if (teamWin.includes(i.ingame.trim())) {\r\n              i = { ...i, win: parseInt(i.win) + 1 };\r\n            }\r\n            if (teamLose.includes(i.ingame.trim())) {\r\n              i = { ...i, lose: parseInt(i.lose) + 1 };\r\n            }\r\n            const key = Object.keys(snap.val())[index];\r\n            tmp[key] = JSON.parse(JSON.stringify(i));\r\n          });\r\n          ref.ref(\"users\").update(tmp, () => { console.log('update done')})\r\n        }\r\n      });\r\n    });\r\n\r\n    await ref\r\n      .ref(\"historyRandom\")\r\n      .orderByValue()\r\n      .limitToLast(1)\r\n      .on(\"value\", snap => {\r\n        changeStatusProgress(false);\r\n        if (snap.val() !== null) {\r\n          ref\r\n            .ref()\r\n            .child(\"/historyRandom/\" + Object.keys(snap.val())[0])\r\n            .update({\r\n              ...oldMatch,\r\n              complete: true\r\n            }, () => { console.log('update 2 done' )});\r\n        }\r\n      });\r\n    setTimeout(window.location.reload(), 500);\r\n  };\r\n\r\n  return (\r\n    <Row>\r\n      <Col xs=\"12\">\r\n        <Card>\r\n          <CardHeader>\r\n            <i className=\"fa fa-align-justify\"></i> Random match results on{\" \"}\r\n            {oldMatch.dateMatch}\r\n          </CardHeader>\r\n          <CardBody>\r\n            <Row>\r\n              <Col xs={12} sm={6}>\r\n                <Card>\r\n                  <CardHeader>\r\n                    <strong>Blue Team</strong>\r\n                  </CardHeader>\r\n                  <CardBody>\r\n                    <ListGroup>\r\n                      {oldMatch.blueTeam.map(i => {\r\n                        return <ListGroupItem key={i}> {i} </ListGroupItem>;\r\n                      })}\r\n                    </ListGroup>\r\n                  </CardBody>\r\n                </Card>\r\n              </Col>\r\n              <Col xs={12} sm={6}>\r\n                <Card>\r\n                  <CardHeader>\r\n                    <strong>Red Team</strong>\r\n                  </CardHeader>\r\n                  <CardBody>\r\n                    <ListGroup>\r\n                      {oldMatch.redTeam.map(i => {\r\n                        return <ListGroupItem key={i}> {i} </ListGroupItem>;\r\n                      })}\r\n                    </ListGroup>\r\n                  </CardBody>\r\n                </Card>\r\n              </Col>\r\n              <Col xs={12}>\r\n                <FormGroup>\r\n                  <Label htmlFor=\"NOM\">Number of match:</Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    id=\"NOM\"\r\n                    placeholder=\"0\"\r\n                    onChange={handleRenderMatch}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col xs={12}>\r\n                {!!matchs.length &&\r\n                  matchs.map((m, index) => (\r\n                    <Card>\r\n                      <CardHeader>\r\n                        <strong>Match {index + 1}:</strong>\r\n                      </CardHeader>\r\n                      <CardBody>\r\n                        <FormGroup row>\r\n                          <Col md=\"3\">\r\n                            <Label htmlFor=\"select\">Team win:</Label>\r\n                          </Col>\r\n                          <Col xs=\"12\" md=\"9\">\r\n                            <Input\r\n                              type=\"select\"\r\n                              name=\"select\"\r\n                              id=\"select\"\r\n                              onChange={({ target: { value } }) =>\r\n                                handleTeamWinStatics({ win: value }, index)\r\n                              }\r\n                            >\r\n                              <option value=\"\">Please select</option>\r\n                              <option value=\"blueTeam\">Blue Team</option>\r\n                              <option value=\"redTeam\">Red Team</option>\r\n                            </Input>\r\n                          </Col>\r\n                        </FormGroup>\r\n                        {!!m.win && (\r\n                          <>\r\n                            <FormGroup row>\r\n                              <Col md=\"3\">\r\n                                <Label htmlFor=\"select\">MVP team win:</Label>\r\n                              </Col>\r\n                              <Col xs=\"12\" md=\"9\">\r\n                                <Input\r\n                                  type=\"select\"\r\n                                  name=\"select\"\r\n                                  id=\"select\"\r\n                                  onChange={({ target: { value } }) =>\r\n                                    handleTeamWinStatics(\r\n                                      { mvpWin: value },\r\n                                      index\r\n                                    )\r\n                                  }\r\n                                >\r\n                                  <option value=\"\">Please select</option>\r\n                                  {renderTeamPlayer(m.win).win.map(i => (\r\n                                    <option value={i}>{i}</option>\r\n                                  ))}\r\n                                </Input>\r\n                              </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                              <Col md=\"3\">\r\n                                <Label htmlFor=\"select\">MVP team lose:</Label>\r\n                              </Col>\r\n                              <Col xs=\"12\" md=\"9\">\r\n                                <Input\r\n                                  type=\"select\"\r\n                                  name=\"select\"\r\n                                  id=\"select\"\r\n                                  onChange={({ target: { value } }) =>\r\n                                    handleTeamWinStatics(\r\n                                      { mvpLose: value },\r\n                                      index\r\n                                    )\r\n                                  }\r\n                                >\r\n                                  <option value=\"\">Please select</option>\r\n                                  {renderTeamPlayer(m.win).lose.map(i => (\r\n                                    <option value={i}>{i}</option>\r\n                                  ))}\r\n                                </Input>\r\n                              </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                              <Col md=\"3\">\r\n                                <Label htmlFor=\"select\">Blue team kill:</Label>\r\n                              </Col>\r\n                              <Col xs=\"12\" md=\"9\">\r\n                                <Input\r\n                                  type=\"text\"\r\n                                  name=\"select\"\r\n                                  id=\"select\"\r\n                                  placeholder=\"0\"\r\n                                  onChange={({ target: { value } }) =>\r\n                                    handleTeamWinStatics(\r\n                                      { blueKill: value },\r\n                                      index\r\n                                    )\r\n                                  }\r\n                                />\r\n                              </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                              <Col md=\"3\">\r\n                                <Label htmlFor=\"select\">Red team kill:</Label>\r\n                              </Col>\r\n                              <Col xs=\"12\" md=\"9\">\r\n                                <Input\r\n                                  type=\"text\"\r\n                                  name=\"select\"\r\n                                  id=\"select\"\r\n                                  placeholder=\"0\"\r\n                                  onChange={({ target: { value } }) =>\r\n                                    handleTeamWinStatics(\r\n                                      { redKill: value },\r\n                                      index\r\n                                    )\r\n                                  }\r\n                                />\r\n                              </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                              <Col md=\"3\">\r\n                                <Label htmlFor=\"select\">Time to play (integer):</Label>\r\n                              </Col>\r\n                              <Col xs=\"12\" md=\"9\">\r\n                                <Input\r\n                                  type=\"text\"\r\n                                  name=\"select\"\r\n                                  id=\"select\"\r\n                                  placeholder=\"15\"\r\n                                  onChange={({ target: { value } }) =>\r\n                                    handleTeamWinStatics(\r\n                                      { timeToPlay: value },\r\n                                      index\r\n                                    )\r\n                                  }\r\n                                />\r\n                              </Col>\r\n                            </FormGroup>\r\n                          </>\r\n                        )}\r\n                      </CardBody>\r\n                    </Card>\r\n                  ))}\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col col=\"6\" sm=\"4\" md=\"3\" xl=\"2\" className=\"mb-3 mb-xl-0\">\r\n                <Button\r\n                  block\r\n                  color=\"success\"\r\n                  onClick={handleSaveHistory}\r\n                  disabled={err}\r\n                >\r\n                  Save\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n          </CardBody>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default OldMatch;\r\n"]},"metadata":{},"sourceType":"module"}