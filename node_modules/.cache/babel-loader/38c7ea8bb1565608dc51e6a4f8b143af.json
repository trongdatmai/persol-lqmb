{"ast":null,"code":"import _objectSpread from \"/Users/maidat/Desktop/team-lq/persol-lqmb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"/Users/maidat/Desktop/team-lq/persol-lqmb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/Users/maidat/Desktop/team-lq/persol-lqmb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/maidat/Desktop/team-lq/persol-lqmb/src/components/Random/OldMatch.js\";\nimport React, { useState } from \"react\";\nimport { Card, CardBody, CardHeader, Col, Row, ListGroupItem, ListGroup, FormGroup, Label, Input, Button } from \"reactstrap\";\n\nvar OldMatch = function OldMatch(_ref) {\n  var oldMatch = _ref.oldMatch;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      matchs = _useState2[0],\n      setMatchs = _useState2[1];\n\n  var handleRenderMatch = function handleRenderMatch(_ref2) {\n    var value = _ref2.target.value;\n    var statisticMatch = [];\n\n    for (var i = 0; i < value; i++) {\n      statisticMatch = [].concat(_toConsumableArray(statisticMatch), [{\n        mvpWin: \"\",\n        mvpLose: \"\",\n        blueKill: \"\",\n        redKill: \"\",\n        win: \"\"\n      }]);\n    }\n\n    setMatchs(statisticMatch);\n  };\n\n  var renderTeamPlayer = function renderTeamPlayer(nameTeam) {\n    if (nameTeam === \"blueTeam\") {\n      return {\n        win: oldMatch.blueTeam,\n        lose: oldMatch.redTeam\n      };\n    }\n\n    if (nameTeam === \"redTeam\") {\n      return {\n        win: oldMatch.redTeam,\n        lose: oldMatch.blueTeam\n      };\n    }\n  };\n\n  var handleTeamWinStatics = function handleTeamWinStatics(value, match) {\n    setMatchs(function (prev) {\n      var newMatch = prev;\n      newMatch[match] = _objectSpread({}, newMatch[match], value);\n      return JSON.parse(JSON.stringify(newMatch));\n    });\n  };\n\n  var handleSaveHistory = function handleSaveHistory() {};\n\n  return React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(Col, {\n    xs: \"12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(CardHeader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fa fa-align-justify\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }), \" Random match results on\", \" \", oldMatch.dateMatch), React.createElement(CardBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(Col, {\n    xs: 12,\n    sm: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(CardHeader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"Blue Team\")), React.createElement(CardBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(ListGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, oldMatch.blueTeam.map(function (i) {\n    return React.createElement(ListGroupItem, {\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \" \", i, \" \");\n  }))))), React.createElement(Col, {\n    xs: 12,\n    sm: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(CardHeader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, \"Red Team\")), React.createElement(CardBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(ListGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, oldMatch.redTeam.map(function (i) {\n    return React.createElement(ListGroupItem, {\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \" \", i, \" \");\n  }))))), React.createElement(Col, {\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(Label, {\n    htmlFor: \"NOM\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, \"Number of match:\"), React.createElement(Input, {\n    type: \"text\",\n    id: \"NOM\",\n    placeholder: \"0\",\n    onChange: handleRenderMatch,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }))), React.createElement(Col, {\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, !!matchs.length && matchs.map(function (m, index) {\n    return React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(CardHeader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"Match \", index + 1, \":\")), React.createElement(CardBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      row: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: \"3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(Label, {\n      htmlFor: \"select\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \"Team win:\")), React.createElement(Col, {\n      xs: \"12\",\n      md: \"9\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(Input, {\n      type: \"select\",\n      name: \"select\",\n      id: \"select\",\n      onChange: function onChange(_ref3) {\n        var value = _ref3.target.value;\n        return handleTeamWinStatics({\n          win: value\n        }, index);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \"Please select\"), React.createElement(\"option\", {\n      value: \"blueTeam\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, \"Blue Team\"), React.createElement(\"option\", {\n      value: \"redTeam\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \"Red Team\")))), !!m.win && React.createElement(React.Fragment, null, React.createElement(FormGroup, {\n      row: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: \"3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(Label, {\n      htmlFor: \"select\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, \"MVP team win:\")), React.createElement(Col, {\n      xs: \"12\",\n      md: \"9\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(Input, {\n      type: \"select\",\n      name: \"select\",\n      id: \"select\",\n      onChange: function onChange(_ref4) {\n        var value = _ref4.target.value;\n        return handleTeamWinStatics({\n          mvpWin: value\n        }, index);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, \"Please select\"), renderTeamPlayer(m.win).win.map(function (i) {\n      return React.createElement(\"option\", {\n        value: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, i);\n    })))), React.createElement(FormGroup, {\n      row: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: \"3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, React.createElement(Label, {\n      htmlFor: \"select\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, \"MVP team lose:\")), React.createElement(Col, {\n      xs: \"12\",\n      md: \"9\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, React.createElement(Input, {\n      type: \"select\",\n      name: \"select\",\n      id: \"select\",\n      onChange: function onChange(_ref5) {\n        var value = _ref5.target.value;\n        return handleTeamWinStatics({\n          mvpLose: value\n        }, index);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, \"Please select\"), renderTeamPlayer(m.win).lose.map(function (i) {\n      return React.createElement(\"option\", {\n        value: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, i);\n    })))), React.createElement(FormGroup, {\n      row: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: \"3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, React.createElement(Label, {\n      htmlFor: \"select\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, \"Blue kill:\")), React.createElement(Col, {\n      xs: \"12\",\n      md: \"9\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, React.createElement(Input, {\n      type: \"text\",\n      name: \"select\",\n      id: \"select\",\n      placeholder: \"0\",\n      onChange: function onChange(_ref6) {\n        var value = _ref6.target.value;\n        return handleTeamWinStatics({\n          blueKill: value\n        }, index);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }))), React.createElement(FormGroup, {\n      row: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: \"3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, React.createElement(Label, {\n      htmlFor: \"select\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, \"Red kill:\")), React.createElement(Col, {\n      xs: \"12\",\n      md: \"9\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, React.createElement(Input, {\n      type: \"text\",\n      name: \"select\",\n      id: \"select\",\n      placeholder: \"0\",\n      onChange: function onChange(_ref7) {\n        var value = _ref7.target.value;\n        return handleTeamWinStatics({\n          redKill: value\n        }, index);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }))))));\n  }))), React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226\n    },\n    __self: this\n  }, React.createElement(Col, {\n    col: \"6\",\n    sm: \"4\",\n    md: \"3\",\n    xl: \"2\",\n    className: \"mb-3 mb-xl-0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227\n    },\n    __self: this\n  }, React.createElement(Button, {\n    block: true,\n    color: \"success\",\n    onClick: handleSaveHistory,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228\n    },\n    __self: this\n  }, \"Save\")))))));\n};\n\nexport default OldMatch;","map":{"version":3,"sources":["/Users/maidat/Desktop/team-lq/persol-lqmb/src/components/Random/OldMatch.js"],"names":["React","useState","Card","CardBody","CardHeader","Col","Row","ListGroupItem","ListGroup","FormGroup","Label","Input","Button","OldMatch","oldMatch","matchs","setMatchs","handleRenderMatch","value","target","statisticMatch","i","mvpWin","mvpLose","blueKill","redKill","win","renderTeamPlayer","nameTeam","blueTeam","lose","redTeam","handleTeamWinStatics","match","prev","newMatch","JSON","parse","stringify","handleSaveHistory","dateMatch","map","length","m","index"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  Card,\n  CardBody,\n  CardHeader,\n  Col,\n  Row,\n  ListGroupItem,\n  ListGroup,\n  FormGroup,\n  Label,\n  Input,\n  Button\n} from \"reactstrap\";\n\nconst OldMatch = ({ oldMatch }) => {\n  const [matchs, setMatchs] = useState([]);\n\n  const handleRenderMatch = ({ target: { value } }) => {\n    let statisticMatch = [];\n    for (let i = 0; i < value; i++) {\n      statisticMatch = [\n        ...statisticMatch,\n        {\n          mvpWin: \"\",\n          mvpLose: \"\",\n          blueKill: \"\",\n          redKill: \"\",\n          win: \"\"\n        }\n      ];\n    }\n    setMatchs(statisticMatch);\n  };\n\n  const renderTeamPlayer = nameTeam => {\n    if (nameTeam === \"blueTeam\") {\n      return { win: oldMatch.blueTeam, lose: oldMatch.redTeam };\n    }\n    if (nameTeam === \"redTeam\") {\n      return { win: oldMatch.redTeam, lose: oldMatch.blueTeam };\n    }\n  };\n\n  const handleTeamWinStatics = (value, match) => {\n    setMatchs(prev => {\n      let newMatch = prev;\n      newMatch[match] = { ...newMatch[match], ...value };\n      return JSON.parse(JSON.stringify(newMatch));\n    });\n  };\n  \n  const handleSaveHistory = () => {\n\n  }\n  \n  return (\n    <Row>\n      <Col xs=\"12\">\n        <Card>\n          <CardHeader>\n            <i className=\"fa fa-align-justify\"></i> Random match results on{\" \"}\n            {oldMatch.dateMatch}\n          </CardHeader>\n          <CardBody>\n            <Row>\n              <Col xs={12} sm={6}>\n                <Card>\n                  <CardHeader>\n                    <strong>Blue Team</strong>\n                  </CardHeader>\n                  <CardBody>\n                    <ListGroup>\n                      {oldMatch.blueTeam.map(i => {\n                        return <ListGroupItem key={i}> {i} </ListGroupItem>;\n                      })}\n                    </ListGroup>\n                  </CardBody>\n                </Card>\n              </Col>\n              <Col xs={12} sm={6}>\n                <Card>\n                  <CardHeader>\n                    <strong>Red Team</strong>\n                  </CardHeader>\n                  <CardBody>\n                    <ListGroup>\n                      {oldMatch.redTeam.map(i => {\n                        return <ListGroupItem key={i}> {i} </ListGroupItem>;\n                      })}\n                    </ListGroup>\n                  </CardBody>\n                </Card>\n              </Col>\n              <Col xs={12}>\n                <FormGroup>\n                  <Label htmlFor=\"NOM\">Number of match:</Label>\n                  <Input\n                    type=\"text\"\n                    id=\"NOM\"\n                    placeholder=\"0\"\n                    onChange={handleRenderMatch}\n                  />\n                </FormGroup>\n              </Col>\n              <Col xs={12}>\n                {!!matchs.length &&\n                  matchs.map((m, index) => (\n                    <Card>\n                      <CardHeader>\n                        <strong>Match {index + 1}:</strong>\n                      </CardHeader>\n                      <CardBody>\n                        <FormGroup row>\n                          <Col md=\"3\">\n                            <Label htmlFor=\"select\">Team win:</Label>\n                          </Col>\n                          <Col xs=\"12\" md=\"9\">\n                            <Input\n                              type=\"select\"\n                              name=\"select\"\n                              id=\"select\"\n                              onChange={({ target: { value } }) =>\n                                handleTeamWinStatics({ win: value }, index)\n                              }\n                            >\n                              <option value=\"\">Please select</option>\n                              <option value=\"blueTeam\">Blue Team</option>\n                              <option value=\"redTeam\">Red Team</option>\n                            </Input>\n                          </Col>\n                        </FormGroup>\n                        {!!m.win && (\n                          <>\n                            <FormGroup row>\n                              <Col md=\"3\">\n                                <Label htmlFor=\"select\">MVP team win:</Label>\n                              </Col>\n                              <Col xs=\"12\" md=\"9\">\n                                <Input\n                                  type=\"select\"\n                                  name=\"select\"\n                                  id=\"select\"\n                                  onChange={({ target: { value } }) =>\n                                    handleTeamWinStatics(\n                                      { mvpWin: value },\n                                      index\n                                    )\n                                  }\n                                >\n                                  <option value=\"\">Please select</option>\n                                  {renderTeamPlayer(m.win).win.map(i => (\n                                    <option value={i}>{i}</option>\n                                  ))}\n                                </Input>\n                              </Col>\n                            </FormGroup>\n                            <FormGroup row>\n                              <Col md=\"3\">\n                                <Label htmlFor=\"select\">MVP team lose:</Label>\n                              </Col>\n                              <Col xs=\"12\" md=\"9\">\n                                <Input\n                                  type=\"select\"\n                                  name=\"select\"\n                                  id=\"select\"\n                                  onChange={({ target: { value } }) =>\n                                    handleTeamWinStatics(\n                                      { mvpLose: value },\n                                      index\n                                    )\n                                  }\n                                >\n                                  <option value=\"\">Please select</option>\n                                  {renderTeamPlayer(m.win).lose.map(i => (\n                                    <option value={i}>{i}</option>\n                                  ))}\n                                </Input>\n                              </Col>\n                            </FormGroup>\n                            <FormGroup row>\n                              <Col md=\"3\">\n                                <Label htmlFor=\"select\">Blue kill:</Label>\n                              </Col>\n                              <Col xs=\"12\" md=\"9\">\n                                <Input\n                                  type=\"text\"\n                                  name=\"select\"\n                                  id=\"select\"\n                                  placeholder=\"0\"\n                                  onChange={({ target: { value } }) =>\n                                    handleTeamWinStatics(\n                                      { blueKill: value },\n                                      index\n                                    )\n                                  }\n                                />\n                              </Col>\n                            </FormGroup>\n                            <FormGroup row>\n                              <Col md=\"3\">\n                                <Label htmlFor=\"select\">Red kill:</Label>\n                              </Col>\n                              <Col xs=\"12\" md=\"9\">\n                                <Input\n                                  type=\"text\"\n                                  name=\"select\"\n                                  id=\"select\"\n                                  placeholder=\"0\"\n                                  onChange={({ target: { value } }) =>\n                                    handleTeamWinStatics(\n                                      { redKill: value },\n                                      index\n                                    )\n                                  }\n                                />\n                              </Col>\n                            </FormGroup>\n                          </>\n                        )}\n                      </CardBody>\n                    </Card>\n                  ))}\n              </Col>\n            </Row>\n            <Row>\n              <Col col=\"6\" sm=\"4\" md=\"3\" xl=\"2\" className=\"mb-3 mb-xl-0\">\n                <Button block color=\"success\" onClick={handleSaveHistory}>\n                  Save\n                </Button>\n              </Col>\n            </Row>\n          </CardBody>\n        </Card>\n      </Col>\n    </Row>\n  );\n};\n\nexport default OldMatch;\n"]},"metadata":{},"sourceType":"module"}