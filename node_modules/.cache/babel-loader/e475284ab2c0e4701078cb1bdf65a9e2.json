{"ast":null,"code":"import _regeneratorRuntime from \"/Users/maidat/Desktop/team-lq/persol-lqmb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _defineProperty from \"/Users/maidat/Desktop/team-lq/persol-lqmb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"/Users/maidat/Desktop/team-lq/persol-lqmb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"/Users/maidat/Desktop/team-lq/persol-lqmb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/maidat/Desktop/team-lq/persol-lqmb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/maidat/Desktop/team-lq/persol-lqmb/src/components/Random/index.js\";\nimport React, { useState, useEffect } from \"react\";\nimport firebase from \"./../../config\";\nimport { Card, CardBody, CardHeader, Col, Row, Table, CardImg, Badge, Button } from \"reactstrap\";\nimport { AppSwitch } from \"@coreui/react\";\n\nvar Random = function Random(_ref) {\n  var changeStatusProgress = _ref.changeStatusProgress;\n  var ref = firebase.database();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      users = _useState2[0],\n      setUsers = _useState2[1];\n\n  var _useState3 = useState({}),\n      _useState4 = _slicedToArray(_useState3, 2),\n      teams = _useState4[0],\n      setTeams = _useState4[1];\n\n  useEffect(function () {\n    changeStatusProgress(true);\n    ref.ref(\"users\").orderByValue().on(\"value\", function (snap) {\n      changeStatusProgress(false);\n      setUsers(Object.values(snap.val()).map(function (user) {\n        return _objectSpread({}, user, {\n          checked: true\n        });\n      }));\n    });\n  }, []);\n\n  var handleSplitTeam =\n  /*#__PURE__*/\n  function () {\n    var _ref2 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var teams, names, details, random, isFull, renderLane, splitTeam;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              teams = users.filter(function (i) {\n                return i.checked;\n              });\n              names = teams.map(function (i) {\n                return i.ingame;\n              });\n              details = teams.reduce(function (acc, cur) {\n                return _objectSpread({}, acc, _defineProperty({}, cur.ingame, cur.role));\n              }, {});\n\n              random = function random() {\n                return ~~(Math.random() * 5);\n              };\n\n              isFull = function isFull(team) {\n                return team.length === 5;\n              };\n\n              renderLane = function renderLane(player, team) {\n                try {\n                  var rLane = details[player][random()];\n\n                  if (!rLane || team.some(function (i) {\n                    return i.includes(rLane);\n                  })) {\n                    return renderLane(player, team);\n                  }\n\n                  return \"\".concat(player, \" - \").concat(rLane);\n                } catch (err) {\n                  return handleSplitTeam();\n                }\n              };\n\n              _context.next = 8;\n              return names.reduce(function (acc, cur) {\n                if (isFull(acc[0]) || isFull(acc[1])) {\n                  isFull(acc[0]) ? acc[1].push(renderLane(cur, acc[1])) : acc[0].push(renderLane(cur, acc[1]));\n                } else {\n                  var r = random() % 2;\n                  acc[r].push(renderLane(cur, acc[r]));\n                }\n\n                return acc;\n              }, {\n                \"0\": [],\n                \"1\": []\n              });\n\n            case 8:\n              splitTeam = _context.sent;\n              // if (\n              //   splitTeam[1].filter(Boolean).length === 5 &&\n              //   splitTeam[2].filter(Boolean).length === 5\n              // ) {\n              setTeams(splitTeam); // } else {\n              //     console.log('aaaaaaa')\n              // //   return handleSplitTeam();\n              // }\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleSplitTeam() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  console.log(teams);\n\n  var renderUser = function renderUser() {\n    return users.map(function (user, index) {\n      return React.createElement(\"tr\", {\n        key: user.username,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, index + 1), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, user.avatar && React.createElement(CardImg, {\n        style: {\n          width: \"30px\"\n        },\n        src: user.avatar,\n        alt: \"avatar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      })), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, user.ingame), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, user.role.map(function (r) {\n        return React.createElement(\"span\", {\n          key: user.username + r,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100\n          },\n          __self: this\n        }, r, \", \");\n      })), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(\"small\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, \"NA\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(\"small\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, \"NA\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(\"small\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, \"NA\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(AppSwitch, {\n        className: \"mx-1\",\n        color: \"success\",\n        checked: user.checked,\n        disabled: handleTotalSelected() === 10 && !user.checked,\n        onChange: function onChange(_ref3) {\n          var checked = _ref3.target.checked;\n          setUsers(function (prev) {\n            return prev.map(function (p) {\n              if (p.username === user.username) {\n                p.checked = checked;\n              }\n\n              return p;\n            });\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      })));\n    });\n  };\n\n  var handleTotalSelected = function handleTotalSelected() {\n    return users.filter(function (i) {\n      return i.checked;\n    }).length;\n  };\n\n  return React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, React.createElement(Col, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, React.createElement(CardHeader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fa fa-align-justify\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }), \" Users table\"), React.createElement(CardBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, \"Player selected\", \" \", React.createElement(Badge, {\n    color: handleTotalSelected() === 10 ? \"success\" : \"secondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, handleTotalSelected())), handleTotalSelected() !== 10 && React.createElement(\"small\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, \"Choose 10 players from the board\") || React.createElement(\"small\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, \"Picked enough\"), React.createElement(Table, {\n    hover: true,\n    bordered: true,\n    striped: true,\n    responsive: true,\n    size: \"sm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, React.createElement(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, \"#\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, \"Avatar\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, \"Player\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, \"Role\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, \"Win\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, \"Lost\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }, \"Win rate \", React.createElement(\"small\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, \"(%)\")), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }, \"Status\"))), React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }, renderUser())), React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }, React.createElement(Col, {\n    col: \"6\",\n    sm: \"4\",\n    md: \"3\",\n    xl: \"2\",\n    className: \"mb-3 mb-xl-0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  }, React.createElement(Button, {\n    block: true,\n    color: \"success\",\n    disabled: handleTotalSelected() !== 10,\n    onClick: handleSplitTeam,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  }, \"Random team\")))))));\n};\n\nexport default Random;","map":{"version":3,"sources":["/Users/maidat/Desktop/team-lq/persol-lqmb/src/components/Random/index.js"],"names":["React","useState","useEffect","firebase","Card","CardBody","CardHeader","Col","Row","Table","CardImg","Badge","Button","AppSwitch","Random","changeStatusProgress","ref","database","users","setUsers","teams","setTeams","orderByValue","on","snap","Object","values","val","map","user","checked","handleSplitTeam","filter","i","names","ingame","details","reduce","acc","cur","role","random","Math","isFull","team","length","renderLane","player","rLane","some","includes","err","push","r","splitTeam","console","log","renderUser","index","username","avatar","width","handleTotalSelected","target","prev","p"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport firebase from \"./../../config\";\nimport {\n  Card,\n  CardBody,\n  CardHeader,\n  Col,\n  Row,\n  Table,\n  CardImg,\n  Badge,\n  Button\n} from \"reactstrap\";\nimport { AppSwitch } from \"@coreui/react\";\n\nconst Random = ({ changeStatusProgress }) => {\n  const ref = firebase.database();\n  const [users, setUsers] = useState([]);\n  const [teams, setTeams] = useState({});\n  useEffect(() => {\n    changeStatusProgress(true);\n    ref\n      .ref(\"users\")\n      .orderByValue()\n      .on(\"value\", snap => {\n        changeStatusProgress(false);\n        setUsers(\n          Object.values(snap.val()).map(user => ({ ...user, checked: true }))\n        );\n      });\n  }, []);\n\n  const handleSplitTeam = async () => {\n    const teams = users.filter(i => i.checked);\n    const names = teams.map(i => i.ingame);\n    const details = teams.reduce(\n      (acc, cur) => ({ ...acc, [cur.ingame]: cur.role }),\n      {}\n    );\n\n    const random = () => ~~(Math.random() * 5);\n\n    const isFull = team => team.length === 5;\n\n    const renderLane = (player, team) => {\n      try {\n        const rLane = details[player][random()];\n        if (!rLane || team.some(i => i.includes(rLane))) {\n          return renderLane(player, team);\n        }\n        return `${player} - ${rLane}`;\n      } catch (err) {\n        return handleSplitTeam();\n      }\n    };\n\n    const splitTeam = await names.reduce(\n      (acc, cur) => {\n        if (isFull(acc[0]) || isFull(acc[1])) {\n          isFull(acc[0])\n            ? acc[1].push(renderLane(cur, acc[1]))\n            : acc[0].push(renderLane(cur, acc[1]));\n        } else {\n          const r = random() % 2;\n          acc[r].push(renderLane(cur, acc[r]));\n        }\n        return acc;\n      },\n      { \"0\": [], \"1\": [] }\n    );\n\n    // if (\n    //   splitTeam[1].filter(Boolean).length === 5 &&\n    //   splitTeam[2].filter(Boolean).length === 5\n    // ) {\n      setTeams(splitTeam);\n    // } else {\n    //     console.log('aaaaaaa')\n    // //   return handleSplitTeam();\n    // }\n  };\n  console.log(teams);\n  const renderUser = () => {\n    return users.map((user, index) => {\n      return (\n        <tr key={user.username}>\n          <td>{index + 1}</td>\n          <td>\n            {user.avatar && (\n              <CardImg\n                style={{ width: \"30px\" }}\n                src={user.avatar}\n                alt=\"avatar\"\n              />\n            )}\n          </td>\n          <td>{user.ingame}</td>\n          <td>\n            {user.role.map(r => (\n              <span key={user.username + r}>{r}, </span>\n            ))}\n          </td>\n          <td>\n            <small>NA</small>\n          </td>\n          <td>\n            <small>NA</small>\n          </td>\n          <td>\n            <small>NA</small>\n          </td>\n          <td>\n            <AppSwitch\n              className={\"mx-1\"}\n              color={\"success\"}\n              checked={user.checked}\n              disabled={handleTotalSelected() === 10 && !user.checked}\n              onChange={({ target: { checked } }) => {\n                setUsers(prev =>\n                  prev.map(p => {\n                    if (p.username === user.username) {\n                      p.checked = checked;\n                    }\n                    return p;\n                  })\n                );\n              }}\n            />\n          </td>\n        </tr>\n      );\n    });\n  };\n\n  const handleTotalSelected = () => {\n    return users.filter(i => i.checked).length;\n  };\n\n  return (\n    <Row>\n      <Col>\n        <Card>\n          <CardHeader>\n            <i className=\"fa fa-align-justify\"></i> Users table\n          </CardHeader>\n          <CardBody>\n            <h4>\n              Player selected{\" \"}\n              <Badge\n                color={handleTotalSelected() === 10 ? \"success\" : \"secondary\"}\n              >\n                {handleTotalSelected()}\n              </Badge>\n            </h4>\n            {(handleTotalSelected() !== 10 && (\n              <small>Choose 10 players from the board</small>\n            )) || <small>Picked enough</small>}\n            <Table hover bordered striped responsive size=\"sm\">\n              <thead>\n                <tr>\n                  <th>#</th>\n                  <th>Avatar</th>\n                  <th>Player</th>\n                  <th>Role</th>\n                  <th>Win</th>\n                  <th>Lost</th>\n                  <th>\n                    Win rate <small>(%)</small>\n                  </th>\n                  <th>Status</th>\n                </tr>\n              </thead>\n              <tbody>{renderUser()}</tbody>\n            </Table>\n            <Row>\n              <Col col=\"6\" sm=\"4\" md=\"3\" xl=\"2\" className=\"mb-3 mb-xl-0\">\n                <Button\n                  block\n                  color=\"success\"\n                  disabled={handleTotalSelected() !== 10}\n                  onClick={handleSplitTeam}\n                >\n                  Random team\n                </Button>\n              </Col>\n            </Row>\n          </CardBody>\n        </Card>\n      </Col>\n    </Row>\n  );\n};\n\nexport default Random;\n"]},"metadata":{},"sourceType":"module"}