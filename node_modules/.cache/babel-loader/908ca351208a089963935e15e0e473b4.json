{"ast":null,"code":"import _toConsumableArray from\"C:\\\\Users\\\\Admin\\\\Desktop\\\\persol\\\\persol-lqmb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"C:\\\\Users\\\\Admin\\\\Desktop\\\\persol\\\\persol-lqmb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _regeneratorRuntime from\"C:\\\\Users\\\\Admin\\\\Desktop\\\\persol\\\\persol-lqmb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _slicedToArray from\"C:\\\\Users\\\\Admin\\\\Desktop\\\\persol\\\\persol-lqmb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import{Card,CardBody,CardHeader,Col,FormGroup,Input,Label,Row,Button,CardImg,Badge}from\"reactstrap\";import firebase from\"./../../config\";var base64Matcher=new RegExp(\"^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=|[A-Za-z0-9+/]{4})$\");var Profile=function Profile(_ref){var changeStatusProgress=_ref.changeStatusProgress,changeState=_ref.changeState;var ref=firebase.database();var _useState=useState(JSON.parse(localStorage.getItem(\"account\")||\"{}\")),_useState2=_slicedToArray(_useState,2),account=_useState2[0],setAccount=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),keyAccount=_useState4[0],setKeyAccount=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),isSave=_useState6[0],setSave=_useState6[1];useEffect(function(){changeStatusProgress(true);ref.ref(\"users\").orderByChild(\"username\").equalTo(account.username).on(\"value\",function(snapshot){if(snapshot.val()!==null){var _Object$values=Object.values(snapshot.val()),_Object$values2=_slicedToArray(_Object$values,1),acc=_Object$values2[0];setAccount(acc);setKeyAccount(Object.keys(snapshot.val()));}changeStatusProgress(false);});},[]);useEffect(function(){setSave(false);},[account]);var updateProfile=function updateProfile(){return _regeneratorRuntime.async(function updateProfile$(_context){while(1){switch(_context.prev=_context.next){case 0:changeStatusProgress(true);ref.ref().child(\"/users/\"+keyAccount).update(account,function(){setSave(true);changeState(account);changeStatusProgress(false);});case 2:case\"end\":return _context.stop();}}});};var renderPointLane=function renderPointLane(lane){if(!account.role)return;var p=account.role.findIndex(function(i){return i.toLowerCase()===lane.toLowerCase();});if(p!==-1)return 5-p;};return React.createElement(Row,null,React.createElement(Col,{xs:\"12\",sm:\"12\"},React.createElement(Card,null,React.createElement(CardHeader,null,React.createElement(\"strong\",null,\"Profile\"),React.createElement(\"small\",null,\" Form\")),React.createElement(CardBody,null,React.createElement(FormGroup,null,React.createElement(Label,{htmlFor:\"company\"},\"Username\"),React.createElement(Input,{type:\"text\",readOnly:true,value:account.username})),React.createElement(FormGroup,null,React.createElement(Label,{htmlFor:\"Ingame\"},\"Ingame\"),React.createElement(Input,{type:\"text\",id:\"Ingame\",placeholder:\"PS.abcxyz\",value:account.ingame,onChange:function onChange(_ref2){var value=_ref2.target.value;return setAccount(function(prev){return _objectSpread({},prev,{ingame:value});});}})),React.createElement(FormGroup,{row:true},React.createElement(Col,{md:\"12\"},React.createElement(Label,null,\"Role\")),React.createElement(Col,{md:\"12\"},React.createElement(FormGroup,{check:true,className:\"checkbox\"},React.createElement(Input,{className:\"form-check-input\",type:\"checkbox\",id:\"Top\",checked:account.role&&account.role.some(function(i){return i===\"top\";}),onChange:function onChange(_ref3){var checked=_ref3.target.checked;return setAccount(function(prev){return checked?account.role&&account.role.length?_objectSpread({},prev,{role:[].concat(_toConsumableArray(account.role),[\"top\"])}):_objectSpread({},prev,{role:[\"top\"]}):_objectSpread({},prev,{role:_toConsumableArray(account.role).filter(function(i){return i!==\"top\";})});});}}),React.createElement(Label,{check:true,className:\"form-check-label\",htmlFor:\"Top\"},\"Top \",React.createElement(Badge,{color:\"success\"},renderPointLane(\"Top\")))),React.createElement(FormGroup,{check:true,className:\"checkbox\"},React.createElement(Input,{className:\"form-check-input\",type:\"checkbox\",id:\"Jungle\",checked:account.role&&account.role.some(function(i){return i===\"jungle\";}),onChange:function onChange(_ref4){var checked=_ref4.target.checked;return setAccount(function(prev){return checked?account.role&&account.role.length?_objectSpread({},prev,{role:[].concat(_toConsumableArray(account.role),[\"jungle\"])}):_objectSpread({},prev,{role:[\"jungle\"]}):_objectSpread({},prev,{role:_toConsumableArray(account.role).filter(function(i){return i!==\"jungle\";})});});}}),React.createElement(Label,{check:true,className:\"form-check-label\",htmlFor:\"Jungle\"},\"Jungle \",React.createElement(Badge,{color:\"success\"},renderPointLane(\"Jungle\")))),React.createElement(FormGroup,{check:true,className:\"checkbox\"},React.createElement(Input,{className:\"form-check-input\",type:\"checkbox\",id:\"Mid\",checked:account.role&&account.role.some(function(i){return i===\"mid\";}),onChange:function onChange(_ref5){var checked=_ref5.target.checked;return setAccount(function(prev){return checked?account.role&&account.role.length?_objectSpread({},prev,{role:[].concat(_toConsumableArray(account.role),[\"mid\"])}):_objectSpread({},prev,{role:[\"mid\"]}):_objectSpread({},prev,{role:_toConsumableArray(account.role).filter(function(i){return i!==\"mid\";})});});}}),React.createElement(Label,{check:true,className:\"form-check-label\",htmlFor:\"Mid\"},\"Mid \",React.createElement(Badge,{color:\"success\"},renderPointLane(\"Mid\")))),React.createElement(FormGroup,{check:true,className:\"checkbox\"},React.createElement(Input,{className:\"form-check-input\",type:\"checkbox\",id:\"Ad\",checked:account.role&&account.role.some(function(i){return i===\"ad\";}),onChange:function onChange(_ref6){var checked=_ref6.target.checked;return setAccount(function(prev){return checked?account.role&&account.role.length?_objectSpread({},prev,{role:[].concat(_toConsumableArray(account.role),[\"ad\"])}):_objectSpread({},prev,{role:[\"ad\"]}):_objectSpread({},prev,{role:_toConsumableArray(account.role).filter(function(i){return i!==\"ad\";})});});}}),React.createElement(Label,{check:true,className:\"form-check-label\",htmlFor:\"Ad\"},\"Ad \",React.createElement(Badge,{color:\"success\"},renderPointLane(\"Ad\")))),React.createElement(FormGroup,{check:true,className:\"checkbox\"},React.createElement(Input,{className:\"form-check-input\",type:\"checkbox\",id:\"Support\",checked:account.role&&account.role.some(function(i){return i===\"support\";}),onChange:function onChange(_ref7){var checked=_ref7.target.checked;return setAccount(function(prev){return checked?account.role&&account.role.length?_objectSpread({},prev,{role:[].concat(_toConsumableArray(account.role),[\"support\"])}):_objectSpread({},prev,{role:[\"support\"]}):_objectSpread({},prev,{role:_toConsumableArray(account.role).filter(function(i){return i!==\"support\";})});});}}),React.createElement(Label,{check:true,className:\"form-check-label\",htmlFor:\"Support\"},\"Support \",React.createElement(Badge,{color:\"success\"},renderPointLane(\"Support\")))))),React.createElement(FormGroup,{row:true},React.createElement(Col,{md:\"12\"},React.createElement(Label,{htmlFor:\"select\"},\"Rank\")),React.createElement(Col,{xs:\"12\",md:\"12\"},React.createElement(Input,{type:\"select\",name:\"select\",id:\"select\",value:account.rank,onChange:function onChange(_ref8){var value=_ref8.target.value;return setAccount(function(prev){return _objectSpread({},prev,{rank:value});});}},React.createElement(\"option\",{value:\"\"},\"Please select\"),React.createElement(\"option\",{value:\"Bronze\"},\"Bronze\"),React.createElement(\"option\",{value:\"Silver\"},\"Silver\"),React.createElement(\"option\",{value:\"Gold\"},\"Gold\"),React.createElement(\"option\",{value:\"Platinum\"},\"Platinum\"),React.createElement(\"option\",{value:\"Diamond\"},\"Diamond\"),React.createElement(\"option\",{value:\"Veteran\"},\"Veteran\"),React.createElement(\"option\",{value:\"Master\"},\"Master\"),React.createElement(\"option\",{value:\"Challenger\"},\"Challenger\")))),React.createElement(FormGroup,null,React.createElement(Label,{htmlFor:\"Avatar\"},\"Avatar \"),React.createElement(\"small\",null,\"(Url)\"),React.createElement(Input,{type:\"text\",id:\"Avatar\",placeholder:\"https://pornhub.com/avatar/MariaOzawa\",value:account.avatar,onChange:function onChange(_ref9){var value=_ref9.target.value;return setAccount(function(prev){return _objectSpread({},prev,{avatar:value});});}}),account.avatar&&React.createElement(React.Fragment,null,React.createElement(\"br\",null),React.createElement(Label,{htmlFor:\"Avatar\"},\"Preview \"),React.createElement(\"br\",null),React.createElement(CardImg,{src:account.avatar,alt:\"avatar\",style:{width:\"200px\",border:\"5px solid rgba(0,0,0, .4)\"}}))),React.createElement(Row,null,React.createElement(Col,{col:\"6\",sm:\"4\",md:\"2\",className:\"mb-3 mb-xl-0\"},React.createElement(Button,{block:true,color:isSave?\"success\":\"primary\",disabled:isSave,onClick:updateProfile},isSave?\"Success âœ“\":\"Save\")))))));};export default Profile;","map":{"version":3,"sources":["C:/Users/Admin/Desktop/persol/persol-lqmb/src/components/Profile/index.js"],"names":["React","useState","useEffect","Card","CardBody","CardHeader","Col","FormGroup","Input","Label","Row","Button","CardImg","Badge","firebase","base64Matcher","RegExp","Profile","changeStatusProgress","changeState","ref","database","JSON","parse","localStorage","getItem","account","setAccount","keyAccount","setKeyAccount","isSave","setSave","orderByChild","equalTo","username","on","snapshot","val","Object","values","acc","keys","updateProfile","child","update","renderPointLane","lane","role","p","findIndex","i","toLowerCase","ingame","value","target","prev","some","checked","length","filter","rank","avatar","width","border"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  Col,\r\n  FormGroup,\r\n  Input,\r\n  Label,\r\n  Row,\r\n  Button,\r\n  CardImg,\r\n  Badge\r\n} from \"reactstrap\";\r\nimport firebase from \"./../../config\";\r\n\r\nconst base64Matcher = new RegExp(\"^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=|[A-Za-z0-9+/]{4})$\");\r\n\r\nconst Profile = ({ changeStatusProgress, changeState }) => {\r\n  const ref = firebase.database();\r\n  const [account, setAccount] = useState(\r\n    JSON.parse(localStorage.getItem(\"account\") || \"{}\")\r\n  );\r\n  const [keyAccount, setKeyAccount] = useState(\"\");\r\n  const [isSave, setSave] = useState(false);\r\n\r\n  useEffect(() => {\r\n    changeStatusProgress(true);\r\n    ref\r\n      .ref(\"users\")\r\n      .orderByChild(\"username\")\r\n      .equalTo(account.username)\r\n      .on(\"value\", snapshot => {\r\n        if (snapshot.val() !== null) {\r\n          const [acc] = Object.values(snapshot.val());\r\n          setAccount(acc);\r\n          setKeyAccount(Object.keys(snapshot.val()));\r\n        }\r\n        changeStatusProgress(false);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setSave(false);\r\n  }, [account]);\r\n\r\n  const updateProfile = async () => {\r\n    changeStatusProgress(true);\r\n    ref\r\n      .ref()\r\n      .child(\"/users/\" + keyAccount)\r\n      .update(account, () => {\r\n        setSave(true);\r\n        changeState(account);\r\n        changeStatusProgress(false);\r\n      });\r\n  };\r\n\r\n  const renderPointLane = (lane) => {\r\n    if(!account.role) return;\r\n    const p = account.role.findIndex(i => i.toLowerCase() === lane.toLowerCase())\r\n    if(p !== -1) return 5 - p\r\n  }\r\n\r\n  return (\r\n    <Row>\r\n      <Col xs=\"12\" sm=\"12\">\r\n        <Card>\r\n          <CardHeader>\r\n            <strong>Profile</strong>\r\n            <small> Form</small>\r\n          </CardHeader>\r\n          <CardBody>\r\n            <FormGroup>\r\n              <Label htmlFor=\"company\">Username</Label>\r\n              <Input type=\"text\" readOnly={true} value={account.username} />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label htmlFor=\"Ingame\">Ingame</Label>\r\n              <Input\r\n                type=\"text\"\r\n                id=\"Ingame\"\r\n                placeholder=\"PS.abcxyz\"\r\n                value={account.ingame}\r\n                onChange={({ target: { value } }) =>\r\n                  setAccount(prev => ({\r\n                    ...prev,\r\n                    ingame: value\r\n                  }))\r\n                }\r\n              />\r\n            </FormGroup>\r\n            <FormGroup row>\r\n              <Col md=\"12\">\r\n                <Label>Role</Label>\r\n              </Col>\r\n              <Col md=\"12\">\r\n                <FormGroup check className=\"checkbox\">\r\n                  <Input\r\n                    className=\"form-check-input\"\r\n                    type=\"checkbox\"\r\n                    id=\"Top\"\r\n                    checked={\r\n                      account.role && account.role.some(i => i === \"top\")\r\n                    }\r\n                    onChange={({ target: { checked } }) =>\r\n                      setAccount(prev =>\r\n                        checked\r\n                          ? account.role && account.role.length\r\n                            ? ({ ...prev, role: [...account.role, \"top\"] })\r\n                            : ({ ...prev, role: [\"top\"] })\r\n                          : ({\r\n                              ...prev,\r\n                              role: [...account.role].filter(i => i !== \"top\")\r\n                            })\r\n                      )\r\n                    }\r\n                  />\r\n                  <Label check className=\"form-check-label\" htmlFor=\"Top\">\r\n                    Top <Badge color=\"success\">{renderPointLane(\"Top\")}</Badge>\r\n                  </Label>\r\n                </FormGroup>\r\n                <FormGroup check className=\"checkbox\">\r\n                  <Input\r\n                    className=\"form-check-input\"\r\n                    type=\"checkbox\"\r\n                    id=\"Jungle\"\r\n                    checked={\r\n                      account.role && account.role.some(i => i === \"jungle\")\r\n                    }\r\n                    onChange={({ target: { checked } }) =>\r\n                    setAccount(prev =>\r\n                        checked\r\n                          ? account.role && account.role.length\r\n                            ? ({ ...prev, role: [...account.role, \"jungle\"] })\r\n                            : ({ ...prev, role: [\"jungle\"] })\r\n                          : ({\r\n                              ...prev,\r\n                              role: [...account.role].filter(i => i !== \"jungle\")\r\n                            })\r\n                      )\r\n                    }\r\n                  />\r\n                  <Label check className=\"form-check-label\" htmlFor=\"Jungle\">\r\n                    Jungle <Badge color=\"success\">{renderPointLane(\"Jungle\")}</Badge>\r\n                  </Label>\r\n                </FormGroup>\r\n                <FormGroup check className=\"checkbox\">\r\n                  <Input\r\n                    className=\"form-check-input\"\r\n                    type=\"checkbox\"\r\n                    id=\"Mid\"\r\n                    checked={\r\n                      account.role && account.role.some(i => i === \"mid\")\r\n                    }\r\n                    onChange={({ target: { checked } }) =>\r\n                    setAccount(prev =>\r\n                        checked\r\n                          ? account.role && account.role.length\r\n                            ? ({ ...prev, role: [...account.role, \"mid\"] })\r\n                            : ({ ...prev, role: [\"mid\"] })\r\n                          : ({\r\n                              ...prev,\r\n                              role: [...account.role].filter(i => i !== \"mid\")\r\n                            })\r\n                      )\r\n                    }\r\n                  />\r\n                  <Label check className=\"form-check-label\" htmlFor=\"Mid\">\r\n                    Mid <Badge color=\"success\">{renderPointLane(\"Mid\")}</Badge>\r\n                  </Label>\r\n                </FormGroup>\r\n                <FormGroup check className=\"checkbox\">\r\n                  <Input\r\n                    className=\"form-check-input\"\r\n                    type=\"checkbox\"\r\n                    id=\"Ad\"\r\n                    checked={account.role && account.role.some(i => i === \"ad\")}\r\n                    onChange={({ target: { checked } }) =>\r\n                    setAccount(prev =>\r\n                        checked\r\n                          ? account.role && account.role.length\r\n                            ? ({ ...prev, role: [...account.role, \"ad\"] })\r\n                            : ({ ...prev, role: [\"ad\"] })\r\n                          : ({\r\n                              ...prev,\r\n                              role: [...account.role].filter(i => i !== \"ad\")\r\n                            })\r\n                      )\r\n                    }\r\n                  />\r\n                  <Label check className=\"form-check-label\" htmlFor=\"Ad\">\r\n                    Ad <Badge color=\"success\">{renderPointLane(\"Ad\")}</Badge>\r\n                  </Label>\r\n                </FormGroup>\r\n                <FormGroup check className=\"checkbox\">\r\n                  <Input\r\n                    className=\"form-check-input\"\r\n                    type=\"checkbox\"\r\n                    id=\"Support\"\r\n                    checked={\r\n                      account.role && account.role.some(i => i === \"support\")\r\n                    }\r\n                    onChange={({ target: { checked } }) =>\r\n                        setAccount(prev =>\r\n                            checked\r\n                            ? account.role && account.role.length\r\n                                ? ({ ...prev, role: [...account.role, \"support\"] })\r\n                                : ({ ...prev, role: [\"support\"] })\r\n                            : ({\r\n                                ...prev,\r\n                                role: [...account.role].filter(i => i !== \"support\")\r\n                                })\r\n                        )\r\n                    }\r\n                  />\r\n                  <Label check className=\"form-check-label\" htmlFor=\"Support\">\r\n                    Support <Badge color=\"success\">{renderPointLane(\"Support\")}</Badge>\r\n                  </Label>\r\n                </FormGroup>\r\n              </Col>\r\n            </FormGroup>\r\n\r\n            <FormGroup row>\r\n              <Col md=\"12\">\r\n                <Label htmlFor=\"select\">Rank</Label>\r\n              </Col>\r\n              <Col xs=\"12\" md=\"12\">\r\n                <Input\r\n                  type=\"select\"\r\n                  name=\"select\"\r\n                  id=\"select\"\r\n                  value={account.rank}\r\n                  onChange={({ target: { value } }) =>\r\n                    setAccount(prev => ({ ...prev, rank: value }))\r\n                  }\r\n                >\r\n                  <option value=\"\">Please select</option>\r\n                  <option value=\"Bronze\">Bronze</option>\r\n                  <option value=\"Silver\">Silver</option>\r\n                  <option value=\"Gold\">Gold</option>\r\n                  <option value=\"Platinum\">Platinum</option>\r\n                  <option value=\"Diamond\">Diamond</option>\r\n                  <option value=\"Veteran\">Veteran</option>\r\n                  <option value=\"Master\">Master</option>\r\n                  <option value=\"Challenger\">Challenger</option>\r\n                </Input>\r\n              </Col>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label htmlFor=\"Avatar\">Avatar </Label>\r\n              <small>(Url)</small>\r\n              <Input\r\n                type=\"text\"\r\n                id=\"Avatar\"\r\n                placeholder=\"https://pornhub.com/avatar/MariaOzawa\"\r\n                value={account.avatar}\r\n                onChange={({ target: { value } }) =>\r\n                  setAccount(prev => ({\r\n                    ...prev,\r\n                    avatar: value\r\n                  }))\r\n                }\r\n              />\r\n              {account.avatar && (\r\n                <>\r\n                  <br />\r\n                  <Label htmlFor=\"Avatar\">Preview </Label>\r\n                  <br />\r\n                  <CardImg\r\n                    src={account.avatar}\r\n                    alt=\"avatar\"\r\n                    style={{\r\n                      width: \"200px\",\r\n                      border: \"5px solid rgba(0,0,0, .4)\"\r\n                    }}\r\n                  />\r\n                </>\r\n              )}\r\n            </FormGroup>\r\n            <Row>\r\n              <Col col=\"6\" sm=\"4\" md=\"2\" className=\"mb-3 mb-xl-0\">\r\n                <Button\r\n                  block\r\n                  color={isSave ? \"success\" : \"primary\"}\r\n                  disabled={isSave}\r\n                  onClick={updateProfile}\r\n                >\r\n                  {isSave ? \"Success âœ“\" : \"Save\"}\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n          </CardBody>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n"]},"metadata":{},"sourceType":"module"}