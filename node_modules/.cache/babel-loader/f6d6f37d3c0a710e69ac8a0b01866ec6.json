{"ast":null,"code":"import _defineProperty from\"C:\\\\Users\\\\Admin\\\\Desktop\\\\persol\\\\persol-lqmb\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _objectSpread from\"C:\\\\Users\\\\Admin\\\\Desktop\\\\persol\\\\persol-lqmb\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _toConsumableArray from\"C:\\\\Users\\\\Admin\\\\Desktop\\\\persol\\\\persol-lqmb\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"C:\\\\Users\\\\Admin\\\\Desktop\\\\persol\\\\persol-lqmb\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{Card,CardBody,CardFooter,CardTitle,Col,Progress,Row,FormGroup,Label,Input,CardHeader}from'reactstrap';import{Line}from'react-chartjs-2';var myAccount=JSON.parse(localStorage.getItem('account')||'{}');export default(function(_ref){var account=_ref.account,historyMatchs=_ref.historyMatchs;myAccount=account.find(function(e){return e.username===myAccount.username;});var _useState=useState(myAccount.ingame),_useState2=_slicedToArray(_useState,2),name=_useState2[0],setName=_useState2[1];var chooseAccount=account.find(function(e){return e.ingame===name;});var matchsForName=_toConsumableArray(historyMatchs).filter(function(i){return i.blueTeam.some(function(e){return e.search(name)!==-1;})||i.redTeam.some(function(e){return e.search(name)!==-1;});});var checkBlueTeamWinGame=function checkBlueTeamWinGame(win,team){return team.some(function(e){return e.search(name)!==-1;})&&win==='blueTeam';};var checkRedTeamWinGame=function checkRedTeamWinGame(win,team){return team.some(function(e){return e.search(name)!==-1;})&&win==='redTeam';};var statisticForGame=_toConsumableArray(matchsForName).reduce(function(acc,cur){acc=!!acc[cur.dateMatch]?_objectSpread({},acc,_defineProperty({},cur.dateMatch,checkBlueTeamWinGame(cur.win,cur.blueTeam)||checkRedTeamWinGame(cur.win,cur.redTeam)?_objectSpread({},acc[cur.dateMatch],{win:acc[cur.dateMatch].win+1}):_objectSpread({},acc[cur.dateMatch],{lose:acc[cur.dateMatch].lose+1}))):_objectSpread({},acc,_defineProperty({},cur.dateMatch,checkBlueTeamWinGame(cur.win,cur.blueTeam)||checkRedTeamWinGame(cur.win,cur.redTeam)?{lose:0,win:1}:{win:0,lose:1}));var tmp=acc.winSequenceTmp;if(checkBlueTeamWinGame(cur.win,cur.blueTeam)||checkRedTeamWinGame(cur.win,cur.redTeam)){tmp+=1;}else{tmp=0;}acc=tmp>acc.winSequence?_objectSpread({},acc,{winSequence:tmp,winSequenceTmp:tmp}):_objectSpread({},acc,{winSequenceTmp:tmp});return acc;},{winSequence:0,winSequenceTmp:0});var data={labels:_toConsumableArray(Object.keys(statisticForGame)).splice(2,Object.keys(statisticForGame).length-1),datasets:[{label:'Win match',fill:false,lineTension:0.1,backgroundColor:'#4dbd74 ',borderColor:'#4dbd74 ',borderCapStyle:'butt',borderDash:[],borderDashOffset:0.0,borderJoinStyle:'miter',pointBorderColor:'#4dbd74 ',pointBackgroundColor:'#fff',pointBorderWidth:1,pointHoverRadius:5,pointHoverBackgroundColor:'#4dbd74 ',pointHoverBorderColor:'#4dbd74 ',pointHoverBorderWidth:2,pointRadius:1,pointHitRadius:10,data:Object.values(statisticForGame).splice(2,Object.keys(statisticForGame).length-1).map(function(i){return i.win;})},{label:'Losing match',fill:false,lineTension:0.1,backgroundColor:'#FF3030',borderColor:'#FF3030',borderCapStyle:'butt',borderDash:[],borderDashOffset:0.0,borderJoinStyle:'miter',pointBorderColor:'#FF3030',pointBackgroundColor:'#fff',pointBorderWidth:1,pointHoverRadius:5,pointHoverBackgroundColor:'#FF3030',pointHoverBorderColor:'#FF3030',pointHoverBorderWidth:2,pointRadius:1,pointHitRadius:10,data:Object.values(statisticForGame).splice(2,Object.keys(statisticForGame).length-1).map(function(i){return i.lose;})}]};return React.createElement(Row,null,React.createElement(Col,null,React.createElement(Card,null,React.createElement(CardHeader,null,React.createElement(\"i\",{className:\"fa fa-align-justify\"}),\" Statistic Chart\"),React.createElement(CardBody,null,React.createElement(Row,{style:{marginBottom:20}},React.createElement(Col,{sm:\"5\"},React.createElement(CardTitle,{className:\"mb-0\"},\"Match history chart\"),React.createElement(\"div\",{className:\"small text-muted\"},\"Persol Gaming 2020\"))),React.createElement(Row,null,React.createElement(Col,{xs:12},React.createElement(FormGroup,{row:true},React.createElement(Col,{xs:\"12\",md:\"12\"},React.createElement(Label,{htmlFor:\"select\"},\"choose the player\")),React.createElement(Col,{xs:\"12\",md:\"4\"},React.createElement(Input,{type:\"select\",value:name,name:\"select\",id:\"select\",onChange:function onChange(e){return setName(e.target.value);}},account.map(function(acc){return React.createElement(\"option\",{value:acc.ingame,key:acc.ingame},acc.ingame);})))))),React.createElement(\"div\",{className:\"chart-wrapper\"},React.createElement(Line,{data:data}))),React.createElement(CardFooter,null,React.createElement(Row,{className:\"text-center\"},React.createElement(Col,{sm:12,md:true,className:\"mb-sm-2 mb-0\"},React.createElement(\"div\",{className:\"text-muted\"},\"Win match\"),React.createElement(\"strong\",null,chooseAccount.win,\" \",React.createElement(\"small\",null,\"(\",~~(chooseAccount.win/(chooseAccount.win+chooseAccount.lose)*100),\"%)\")),React.createElement(Progress,{className:\"progress-xs mt-2\",color:\"success\",value:~~(chooseAccount.win/(chooseAccount.win+chooseAccount.lose)*100)})),React.createElement(Col,{sm:12,md:true,className:\"mb-sm-2 mb-0 d-md-down-none\"},React.createElement(\"div\",{className:\"text-muted\"},\"Losing match\"),React.createElement(\"strong\",null,chooseAccount.lose,\" \",React.createElement(\"small\",null,\"(\",~~(chooseAccount.lose/(chooseAccount.win+chooseAccount.lose)*100)+1,\"%)\")),React.createElement(Progress,{className:\"progress-xs mt-2\",color:\"danger\",value:~~(chooseAccount.lose/(chooseAccount.win+chooseAccount.lose)*100)+1})),React.createElement(Col,{sm:12,md:true,className:\"mb-sm-2 mb-0\"},React.createElement(\"div\",{className:\"text-muted\"},\"Total matchs:\"),React.createElement(\"strong\",null,chooseAccount.lose+chooseAccount.win),React.createElement(Progress,{className:\"progress-xs mt-2\",color:\"info\",value:chooseAccount.lose+chooseAccount.win})),React.createElement(Col,{sm:12,md:true,className:\"mb-sm-2 mb-0\"},React.createElement(\"div\",{className:\"text-muted\"},\"Total matchs(%): \"),React.createElement(\"strong\",null,~~((parseInt(chooseAccount.lose)+parseInt(chooseAccount.win))/parseInt(historyMatchs.length)*100),\"%\"),React.createElement(Progress,{className:\"progress-xs mt-2\",color:\"primary\",value:~~((parseInt(chooseAccount.lose)+parseInt(chooseAccount.win))/parseInt(historyMatchs.length)*100)})),React.createElement(Col,{sm:12,md:true,className:\"mb-sm-2 mb-0 d-md-down-none\"},React.createElement(\"div\",{className:\"text-muted\"},\"Longest winning streak\"),React.createElement(\"strong\",null,statisticForGame.winSequence),React.createElement(Progress,{className:\"progress-xs mt-2\",color:\"warning\",value:\"100\"})))))));});","map":{"version":3,"sources":["C:/Users/Admin/Desktop/persol/persol-lqmb/src/components/Dashboard/components/W4.js"],"names":["React","useState","Card","CardBody","CardFooter","CardTitle","Col","Progress","Row","FormGroup","Label","Input","CardHeader","Line","myAccount","JSON","parse","localStorage","getItem","account","historyMatchs","find","e","username","ingame","name","setName","chooseAccount","matchsForName","filter","i","blueTeam","some","search","redTeam","checkBlueTeamWinGame","win","team","checkRedTeamWinGame","statisticForGame","reduce","acc","cur","dateMatch","lose","tmp","winSequenceTmp","winSequence","data","labels","Object","keys","splice","length","datasets","label","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","values","map","marginBottom","target","value","parseInt"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport {\r\n    Card,\r\n    CardBody,\r\n    CardFooter,\r\n    CardTitle,\r\n    Col,\r\n    Progress,\r\n    Row,\r\n    FormGroup,\r\n    Label,\r\n    Input,\r\n    CardHeader\r\n} from 'reactstrap';\r\nimport { Line } from 'react-chartjs-2';\r\n\r\nlet myAccount = JSON.parse(localStorage.getItem('account') || '{}');\r\n\r\nexport default ({ account, historyMatchs }) => {\r\n    myAccount = account.find(e => e.username === myAccount.username)\r\n    \r\n    const [name, setName] = useState(myAccount.ingame);\r\n    const chooseAccount = account.find(e => e.ingame === name)\r\n\r\n    const matchsForName = [...historyMatchs].filter(i => i.blueTeam.some(e => { return e.search(name) !== -1 }) || i.redTeam.some(e => { return e.search(name) !== -1 }))\r\n    const checkBlueTeamWinGame = (win, team) => team.some(e => { return e.search(name) !== -1 }) && win === 'blueTeam'\r\n    const checkRedTeamWinGame = (win, team) => team.some(e => { return e.search(name) !== -1 }) && win === 'redTeam'\r\n    const statisticForGame = [...matchsForName].reduce((acc, cur) => {\r\n        acc = !!acc[cur.dateMatch] ?\r\n            {\r\n                ...acc, [cur.dateMatch]:\r\n                    checkBlueTeamWinGame(cur.win, cur.blueTeam) || checkRedTeamWinGame(cur.win, cur.redTeam)\r\n                        ? { ...acc[cur.dateMatch], win: acc[cur.dateMatch].win + 1 }\r\n                        : { ...acc[cur.dateMatch], lose: acc[cur.dateMatch].lose + 1 }\r\n            }\r\n            : {\r\n                ...acc, [cur.dateMatch]:\r\n                    checkBlueTeamWinGame(cur.win, cur.blueTeam) || checkRedTeamWinGame(cur.win, cur.redTeam)\r\n                        ? { lose: 0, win: 1 }\r\n                        : { win: 0, lose: 1 }\r\n            }\r\n        let tmp = acc.winSequenceTmp\r\n        if(checkBlueTeamWinGame(cur.win, cur.blueTeam) || checkRedTeamWinGame(cur.win, cur.redTeam)) {\r\n            tmp += 1\r\n        } else {\r\n            tmp = 0\r\n        }\r\n        acc = tmp > acc.winSequence ? {...acc, winSequence: tmp, winSequenceTmp: tmp} : {...acc, winSequenceTmp: tmp}\r\n        return acc\r\n    }, {winSequence: 0, winSequenceTmp: 0})\r\n\r\n\r\n    const data = {\r\n        labels: [...Object.keys(statisticForGame)].splice(2, Object.keys(statisticForGame).length - 1),\r\n        datasets: [\r\n            {\r\n                label: 'Win match',\r\n                fill: false,\r\n                lineTension: 0.1,\r\n                backgroundColor: '#4dbd74 ',\r\n                borderColor: '#4dbd74 ',\r\n                borderCapStyle: 'butt',\r\n                borderDash: [],\r\n                borderDashOffset: 0.0,\r\n                borderJoinStyle: 'miter',\r\n                pointBorderColor: '#4dbd74 ',\r\n                pointBackgroundColor: '#fff',\r\n                pointBorderWidth: 1,\r\n                pointHoverRadius: 5,\r\n                pointHoverBackgroundColor: '#4dbd74 ',\r\n                pointHoverBorderColor: '#4dbd74 ',\r\n                pointHoverBorderWidth: 2,\r\n                pointRadius: 1,\r\n                pointHitRadius: 10,\r\n                data: Object.values(statisticForGame).splice(2, Object.keys(statisticForGame).length - 1).map(i => i.win)\r\n            },\r\n            {\r\n                label: 'Losing match',\r\n                fill: false,\r\n                lineTension: 0.1,\r\n                backgroundColor: '#FF3030',\r\n                borderColor: '#FF3030',\r\n                borderCapStyle: 'butt',\r\n                borderDash: [],\r\n                borderDashOffset: 0.0,\r\n                borderJoinStyle: 'miter',\r\n                pointBorderColor: '#FF3030',\r\n                pointBackgroundColor: '#fff',\r\n                pointBorderWidth: 1,\r\n                pointHoverRadius: 5,\r\n                pointHoverBackgroundColor: '#FF3030',\r\n                pointHoverBorderColor: '#FF3030',\r\n                pointHoverBorderWidth: 2,\r\n                pointRadius: 1,\r\n                pointHitRadius: 10,\r\n                data: Object.values(statisticForGame).splice(2, Object.keys(statisticForGame).length - 1).map(i => i.lose)\r\n            }\r\n        ]\r\n    };\r\n\r\n    return <Row>\r\n        <Col>\r\n            <Card>\r\n            <CardHeader>\r\n                <i className=\"fa fa-align-justify\"></i> Statistic Chart\r\n            </CardHeader>\r\n                <CardBody>\r\n                    <Row style={{ marginBottom: 20 }}>\r\n                        <Col sm=\"5\">\r\n                            <CardTitle className=\"mb-0\">Match history chart</CardTitle>\r\n                            <div className=\"small text-muted\">Persol Gaming 2020</div>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col xs={12}>\r\n                            <FormGroup row>\r\n                                <Col xs=\"12\" md=\"12\">\r\n                                    <Label htmlFor=\"select\">choose the player</Label>\r\n                                </Col>\r\n                                <Col xs=\"12\" md=\"4\">\r\n                                    <Input type=\"select\" value={name} name=\"select\" id=\"select\" onChange={e => setName(e.target.value)}>\r\n                                        {\r\n                                            account.map(acc => {\r\n                                                return <option value={acc.ingame} key={acc.ingame}>{acc.ingame}</option>\r\n                                            })\r\n                                        }\r\n                                    </Input>\r\n                                </Col>\r\n                            </FormGroup>\r\n                        </Col>\r\n                    </Row>\r\n                    <div className=\"chart-wrapper\" >\r\n                        <Line data={data} />\r\n                    </div>\r\n                </CardBody>\r\n                <CardFooter>\r\n                    <Row className=\"text-center\">\r\n                        <Col sm={12} md className=\"mb-sm-2 mb-0\">\r\n                            <div className=\"text-muted\">Win match</div>\r\n                            <strong>{chooseAccount.win} <small>({~~(chooseAccount.win / (chooseAccount.win + chooseAccount.lose) * 100)}%)</small></strong>\r\n                            <Progress className=\"progress-xs mt-2\" color=\"success\" value={~~(chooseAccount.win / (chooseAccount.win + chooseAccount.lose) * 100)} />\r\n                        </Col>\r\n                        <Col sm={12} md className=\"mb-sm-2 mb-0 d-md-down-none\">\r\n                            <div className=\"text-muted\">Losing match</div>\r\n                            <strong>{chooseAccount.lose} <small>({~~(chooseAccount.lose / (chooseAccount.win + chooseAccount.lose) * 100) + 1}%)</small></strong>\r\n                            <Progress className=\"progress-xs mt-2\" color=\"danger\" value={~~(chooseAccount.lose / (chooseAccount.win + chooseAccount.lose) * 100) + 1} />\r\n                        </Col>\r\n                        <Col sm={12} md className=\"mb-sm-2 mb-0\">\r\n                            <div className=\"text-muted\">Total matchs:</div>\r\n                            <strong>{chooseAccount.lose + chooseAccount.win}</strong>\r\n                            <Progress className=\"progress-xs mt-2\" color=\"info\" value={chooseAccount.lose + chooseAccount.win} />\r\n                        </Col>\r\n                        <Col sm={12} md className=\"mb-sm-2 mb-0\">\r\n                            <div className=\"text-muted\">Total matchs(%): </div>\r\n                            <strong>{~~((parseInt(chooseAccount.lose) + parseInt(chooseAccount.win)) / parseInt(historyMatchs.length) * 100)}%</strong>\r\n                            <Progress className=\"progress-xs mt-2\" color=\"primary\" value={~~((parseInt(chooseAccount.lose) + parseInt(chooseAccount.win)) / parseInt(historyMatchs.length) * 100)} />\r\n                        </Col>\r\n                        <Col sm={12} md className=\"mb-sm-2 mb-0 d-md-down-none\">\r\n                            <div className=\"text-muted\">Longest winning streak</div>\r\n                            <strong>{statisticForGame.winSequence}</strong>\r\n                            <Progress className=\"progress-xs mt-2\" color=\"warning\" value=\"100\" />\r\n                        </Col>\r\n                    </Row>\r\n                </CardFooter>\r\n            </Card>\r\n        </Col>\r\n    </Row>\r\n}"]},"metadata":{},"sourceType":"module"}