{"ast":null,"code":"'use strict';\n\nvar $WeakMap = typeof WeakMap === 'function' && WeakMap.prototype ? WeakMap : null;\nvar $WeakSet = typeof WeakSet === 'function' && WeakSet.prototype ? WeakSet : null;\nvar exported;\n\nif (!$WeakMap) {\n  // eslint-disable-next-line no-unused-vars\n  exported = function isWeakMap(x) {\n    // `WeakMap` is not present in this environment.\n    return false;\n  };\n}\n\nvar $mapHas = $WeakMap ? $WeakMap.prototype.has : null;\nvar $setHas = $WeakSet ? $WeakSet.prototype.has : null;\n\nif (!exported && !$mapHas) {\n  // eslint-disable-next-line no-unused-vars\n  exported = function isWeakMap(x) {\n    // `WeakMap` does not have a `has` method\n    return false;\n  };\n}\n\nmodule.exports = exported || function isWeakMap(x) {\n  if (!x || typeof x !== 'object') {\n    return false;\n  }\n\n  try {\n    $mapHas.call(x, $mapHas);\n\n    if ($setHas) {\n      try {\n        $setHas.call(x, $setHas);\n      } catch (e) {\n        return true;\n      }\n    }\n\n    return x instanceof $WeakMap; // core-js workaround, pre-v3\n  } catch (e) {}\n\n  return false;\n};","map":null,"metadata":{},"sourceType":"script"}