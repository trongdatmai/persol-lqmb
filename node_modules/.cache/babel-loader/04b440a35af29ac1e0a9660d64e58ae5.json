{"ast":null,"code":"import _defineProperty from \"/Users/maidat/Desktop/team-lq/persol-lqmb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/maidat/Desktop/team-lq/persol-lqmb/src/components/Random/TableTeams.js\";\nimport React from \"react\";\nimport { Badge, Card, CardBody, CardHeader, Col, Row, Table } from \"reactstrap\";\nvar width = {\n  width: \"33%\"\n};\n\nvar TableTeams = function TableTeams(_ref) {\n  var teams = _ref.teams;\n  var blueTeam = teams[0].map(function (i) {\n    var t = i.split(\" - \");\n    return _defineProperty({}, t[1], t[0]);\n  });\n  var redTeam = teams[1].map(function (i) {\n    var t = i.split(\" - \");\n    return _defineProperty({}, t[1], t[0]);\n  });\n\n  var handlePos = function handlePos(i) {\n    switch (i) {\n      case 0:\n        return \"top\";\n\n      case 1:\n        return \"jungle\";\n\n      case 2:\n        return \"mid\";\n\n      case 3:\n        return \"ad\";\n\n      case 4:\n        return \"support\";\n\n      default:\n        return;\n    }\n  };\n\n  console.log(blueTeam, redTeam);\n  return React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(Col, {\n    xs: \"12\",\n    style: {\n      marginTop: 35\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(CardHeader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fa fa-align-justify\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), \" Ba\\x1Dttle board\"), React.createElement(CardBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(Table, {\n    responsive: true,\n    size: \"sm\",\n    style: {\n      textAlign: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    style: width,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"Blue Team\"), React.createElement(\"th\", {\n    style: width,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"vs\"), React.createElement(\"th\", {\n    style: width,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"Read Team\"))), React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, [,,,,].map(function (i, index) {\n    React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      style: width,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, blueTeam[handlePos(index)]), React.createElement(\"td\", {\n      style: width,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, handlePos(index)), React.createElement(\"td\", {\n      style: width,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, redTeam[handlePos(index)]));\n  })))))));\n};\n\nexport default TableTeams;","map":{"version":3,"sources":["/Users/maidat/Desktop/team-lq/persol-lqmb/src/components/Random/TableTeams.js"],"names":["React","Badge","Card","CardBody","CardHeader","Col","Row","Table","width","TableTeams","teams","blueTeam","map","i","t","split","redTeam","handlePos","console","log","marginTop","textAlign","index"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Badge, Card, CardBody, CardHeader, Col, Row, Table } from \"reactstrap\";\n\nconst width = { width: \"33%\" };\n\nconst TableTeams = ({ teams }) => {\n  let blueTeam = teams[0].map(i => {\n    const t = i.split(\" - \");\n    return { [t[1]]: t[0] };\n  });\n  let redTeam = teams[1].map(i => {\n    const t = i.split(\" - \");\n    return { [t[1]]: t[0] };\n  });\n\n  const handlePos = i => {\n    switch (i) {\n      case 0:\n        return \"top\";\n      case 1:\n        return \"jungle\";\n      case 2:\n        return \"mid\";\n      case 3:\n        return \"ad\";\n      case 4:\n        return \"support\";\n      default:\n        return;\n    }\n  };\n  console.log(blueTeam, redTeam);\n  return (\n    <Row>\n      <Col xs=\"12\" style={{ marginTop: 35 }}>\n        <Card>\n          <CardHeader>\n            <i className=\"fa fa-align-justify\"></i> Ba\u001dttle board\n          </CardHeader>\n          <CardBody>\n            <Table responsive size=\"sm\" style={{ textAlign: \"center\" }}>\n              <thead>\n                <tr>\n                  <th style={width}>Blue Team</th>\n                  <th style={width}>vs</th>\n                  <th style={width}>Read Team</th>\n                </tr>\n              </thead>\n              <tbody>\n                {[, , , ,].map((i, index) => {\n                  <tr>\n                    <td style={width}>{blueTeam[handlePos(index)]}</td>\n                    <td style={width}>{handlePos(index)}</td>\n                    <td style={width}>{redTeam[handlePos(index)]}</td>\n                  </tr>;\n                })}\n              </tbody>\n            </Table>\n          </CardBody>\n        </Card>\n      </Col>\n    </Row>\n  );\n};\n\nexport default TableTeams;\n"]},"metadata":{},"sourceType":"module"}