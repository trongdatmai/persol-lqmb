{"ast":null,"code":"import _defineProperty from\"/Users/maidat/Desktop/untitled folder/persol-lqmb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _toConsumableArray from\"/Users/maidat/Desktop/untitled folder/persol-lqmb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"/Users/maidat/Desktop/untitled folder/persol-lqmb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/maidat/Desktop/untitled folder/persol-lqmb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect,useRef}from\"react\";import firebase from\"./../../config\";import{Card,CardBody,CardHeader,Col,Row,Table,CardImg,Badge,Button}from\"reactstrap\";import{AppSwitch}from\"@coreui/react\";import ChartTeams from\"./ChartTeams\";import TableTeams from\"./TableTeams\";import OldMatch from\"./OldMatch\";import moment from\"moment\";var scrollToRef=function scrollToRef(ref){return ref.current.scrollIntoView({behavior:\"smooth\",block:\"start\"});};var Random=function Random(_ref){var changeStatusProgress=_ref.changeStatusProgress;var myRef=useRef(null);var ref=firebase.database();var _useState=useState([]),_useState2=_slicedToArray(_useState,2),users=_useState2[0],setUsers=_useState2[1];var _useState3=useState({}),_useState4=_slicedToArray(_useState3,2),teams=_useState4[0],setTeams=_useState4[1];var _useState5=useState({}),_useState6=_slicedToArray(_useState5,2),oldMatch=_useState6[0],setOldMatch=_useState6[1];var _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),randomPlayerNotInclude=_useState8[0],setRandomPlayerNotInclude=_useState8[1];var _useState9=useState([]),_useState10=_slicedToArray(_useState9,2),lastRandomNotPlay=_useState10[0],setLastRandomNotPlay=_useState10[1];var handleRandomPlayer=function handleRandomPlayer(){setUsers(function(prev){return prev.map(function(i){return _objectSpread({},i,{checked:false});});});var arrayUsers=_toConsumableArray(lastRandomNotPlay.map(function(i){return i.ingame;}));var tempUsers=_toConsumableArray(users).filter(function(i){return!arrayUsers.includes(i.ingame);});var length=arrayUsers.length;for(var i=0;i<10-length;i++){var index=~~(Math.random()*tempUsers.length);arrayUsers=[].concat(_toConsumableArray(arrayUsers),[tempUsers[index]&&tempUsers[index].ingame]);tempUsers.splice(index,1);}setUsers(function(prev){return prev.map(function(i){return arrayUsers.includes(i.ingame)?_objectSpread({},i,{checked:true}):i;});});setTeams({});setRandomPlayerNotInclude(tempUsers);};useEffect(function(){changeStatusProgress(true);ref.ref(\"users\").orderByValue().on(\"value\",function(snap){changeStatusProgress(false);setUsers(Object.values(snap.val()).map(function(user){return _objectSpread({},user,{checked:false});}));});ref.ref(\"historyRandom\").orderByValue().limitToLast(1).on(\"value\",function(snap){changeStatusProgress(false);if(snap.val()!==null&&!Object.values(snap.val())[0].complete){setOldMatch(Object.values(snap.val())[0]);}});ref.ref(\"historyRandomNotPlay\").orderByValue().limitToLast(1).on(\"value\",function(snap){if(snap.val()){setLastRandomNotPlay(Object.values(snap.val())[0]);}});},[]);var statisticPlayer=function statisticPlayer(player){return users.find(function(user){return user.ingame===player;});};useEffect(function(){scrollToRef(myRef);},[teams]);var lastInfoTeam=function lastInfoTeam(){var _ref2;var t1=teams[0]&&teams[0].map(function(i){var player=i.split(\" - \")[0];var addStatistic=i+\" - \"+statisticPlayer(player).win+\" - \"+statisticPlayer(player).lose+\" - \"+statisticPlayer(player).avatar;return addStatistic;});var t2=teams[1]&&teams[1].map(function(i){var player=i.split(\" - \")[0];var addStatistic=i+\" - \"+statisticPlayer(player).win+\" - \"+statisticPlayer(player).lose+\" -  \"+statisticPlayer(player).avatar;return addStatistic;});return _ref2={},_defineProperty(_ref2,0,t1),_defineProperty(_ref2,1,t2),_ref2;};var handleSplitTeam=function handleSplitTeam(){var teams=users.filter(function(i){return i.checked;});var names=teams.map(function(i){return i.ingame;});var details=teams.reduce(function(acc,cur){return _objectSpread({},acc,_defineProperty({},cur.ingame,cur.role));},{});var random=function random(){return~~(Math.random()*5);};var isFull=function isFull(team){return team.length===5;};var renderLane=function renderLane(player,team){try{var rLane=details[player][random()];if(!rLane||team.some(function(i){return i.includes(rLane);})){return renderLane(player,team);}return\"\".concat(player,\" - \").concat(rLane);}catch(err){return handleSplitTeam();}};var splitTeam=names.reduce(function(acc,cur){if(isFull(acc[0])||isFull(acc[1])){isFull(acc[0])?acc[1].push(renderLane(cur,acc[1])):acc[0].push(renderLane(cur,acc[1]));}else{var r=random()%2;acc[r].push(renderLane(cur,acc[r]));}return acc;},{\"0\":[],\"1\":[]});if(splitTeam[0].filter(Boolean).length===5&&splitTeam[1].filter(Boolean).length===5){setTeams(splitTeam);}};var renderRole=function renderRole(r){switch(r){case\"top\":return React.createElement(Badge,{style:{background:\"#0099FF\",marginRight:10,color:\"white\"}},r);case\"jungle\":return React.createElement(Badge,{style:{background:\"#3366CC\",marginRight:10,color:\"white\"}},r);case\"mid\":return React.createElement(Badge,{style:{background:\"#FF9900\",marginRight:10,color:\"white\"}},r);case\"ad\":return React.createElement(Badge,{style:{background:\"#f25e5e\",marginRight:10,color:\"white\"}},r);case\"support\":return React.createElement(Badge,{style:{background:\"#f2a766\",marginRight:10,color:\"white\"}},r);default:return r;}};var renderWinRate=function renderWinRate(r){if(r<=25){return React.createElement(Badge,{style:{background:\"#f25e5e\",marginRight:10,color:\"white\"}},r,React.createElement(\"small\",null,\"%\"));}else if(r<=50){return React.createElement(Badge,{color:\"warning\"},r,React.createElement(\"small\",null,\"%\"));}else if(r<=75){return React.createElement(Badge,{color:\"primary\"},r,React.createElement(\"small\",null,\"%\"));}else if(r<=100){return React.createElement(Badge,{color:\"success\"},r,React.createElement(\"small\",null,\"%\"));}};var renderUser=function renderUser(){return users.map(function(user,index){return React.createElement(\"tr\",{key:user.username},React.createElement(\"td\",null,React.createElement(Badge,{style:{background:\"#660099\",color:\"white\"}},index+1)),React.createElement(\"td\",null,user.avatar&&React.createElement(CardImg,{style:{width:\"30px\"},src:user.avatar,alt:\"avatar\"})),React.createElement(\"td\",null,React.createElement(Badge,{style:{background:\"#660099\",color:\"white\"}},user.ingame)),React.createElement(\"td\",null,user.role&&user.role.map(function(r){return React.createElement(\"span\",{key:user.username+r},renderRole(r));})),React.createElement(\"td\",null,React.createElement(Badge,{color:\"success\"},user.win)),React.createElement(\"td\",null,React.createElement(Badge,{color:\"danger\"},user.lose)),React.createElement(\"td\",null,renderWinRate(~~(user.win/(user.win+user.lose)*100||0))),React.createElement(\"td\",null,React.createElement(AppSwitch,{className:\"mx-1\",color:\"success\",checked:user.checked,disabled:handleTotalSelected()===10&&!user.checked||!user.role||!user.role.length,onChange:function onChange(_ref3){var checked=_ref3.target.checked;setUsers(function(prev){return prev.map(function(p){if(p.username===user.username){p.checked=checked;}return p;});});}})));});};var handleTotalSelected=function handleTotalSelected(){return users.filter(function(i){return i.checked;}).length;};var handleSaveTeamRandom=function handleSaveTeamRandom(){changeStatusProgress(true);var statistic={blueTeam:teams[0],redTeam:teams[1],dateMatch:moment(new Date()).format(\"YYYY-MM-DD\"),complete:false,authorCreate:JSON.parse(localStorage.getItem(\"account\")).username,authorUpdate:\"\"};ref.ref(\"historyRandom\").push(statistic,function(snap){changeStatusProgress(false);});ref.ref(\"historyRandomNotPlay\").push(randomPlayerNotInclude);setOldMatch(statistic);};if(oldMatch.complete===false)return React.createElement(OldMatch,{oldMatch:oldMatch,changeStatusProgress:changeStatusProgress});return React.createElement(Row,null,React.createElement(Col,null,React.createElement(Card,null,React.createElement(CardHeader,null,React.createElement(\"i\",{className:\"fa fa-align-justify\"}),\" Users table\"),React.createElement(CardBody,null,React.createElement(\"h4\",null,\"Player selected\",\" \",React.createElement(Badge,{color:handleTotalSelected()===10?\"success\":\"secondary\"},handleTotalSelected())),handleTotalSelected()!==10&&React.createElement(\"small\",null,\"Choose 10 players from the board\")||React.createElement(\"small\",null,\"Picked enough\"),React.createElement(Table,{hover:true,bordered:true,striped:true,responsive:true,size:\"sm\"},React.createElement(\"thead\",null,React.createElement(\"tr\",null,React.createElement(\"th\",null,\"#\"),React.createElement(\"th\",null,\"Avatar\"),React.createElement(\"th\",null,\"Player\"),React.createElement(\"th\",null,\"Role\"),React.createElement(\"th\",null,\"Win\"),React.createElement(\"th\",null,\"Lost\"),React.createElement(\"th\",null,\"Win rate \",React.createElement(\"small\",null,\"(%)\")),React.createElement(\"th\",null,\"Status\"))),React.createElement(\"tbody\",null,renderUser())),React.createElement(Row,null,React.createElement(Col,{col:\"6\",sm:\"4\",md:\"3\",xl:\"2\",className:\"mb-3 mb-xl-0\"},React.createElement(Button,{block:true,color:\"success\",onClick:handleRandomPlayer,fullWidth:true},\"Random players\")),React.createElement(Col,{col:\"6\",sm:\"4\",md:\"3\",xl:\"2\",className:\"mb-3 mb-xl-0\"},React.createElement(Button,{block:true,color:\"success\",disabled:handleTotalSelected()!==10,onClick:handleSplitTeam,fullWidth:true},\"Random team\"))),React.createElement(\"div\",{ref:myRef},teams&&JSON.stringify(teams)!==\"{}\"&&React.createElement(React.Fragment,null,React.createElement(TableTeams,{teams:lastInfoTeam()}),React.createElement(ChartTeams,{teams:lastInfoTeam()}),React.createElement(Row,null,React.createElement(Col,{col:\"6\",sm:\"4\",md:\"3\",xl:\"2\",className:\"mb-3 mb-xl-0\"},React.createElement(Button,{block:true,color:\"success\",onClick:handleSaveTeamRandom},\"Save Team\")))))))));};export default Random;","map":{"version":3,"sources":["/Users/maidat/Desktop/untitled folder/persol-lqmb/src/components/Random/index.js"],"names":["React","useState","useEffect","useRef","firebase","Card","CardBody","CardHeader","Col","Row","Table","CardImg","Badge","Button","AppSwitch","ChartTeams","TableTeams","OldMatch","moment","scrollToRef","ref","current","scrollIntoView","behavior","block","Random","changeStatusProgress","myRef","database","users","setUsers","teams","setTeams","oldMatch","setOldMatch","randomPlayerNotInclude","setRandomPlayerNotInclude","lastRandomNotPlay","setLastRandomNotPlay","handleRandomPlayer","prev","map","i","checked","arrayUsers","ingame","tempUsers","filter","includes","length","index","Math","random","splice","orderByValue","on","snap","Object","values","val","user","limitToLast","complete","statisticPlayer","player","find","lastInfoTeam","t1","split","addStatistic","win","lose","avatar","t2","handleSplitTeam","names","details","reduce","acc","cur","role","isFull","team","renderLane","rLane","some","err","splitTeam","push","r","Boolean","renderRole","background","marginRight","color","renderWinRate","renderUser","username","width","handleTotalSelected","target","p","handleSaveTeamRandom","statistic","blueTeam","redTeam","dateMatch","Date","format","authorCreate","JSON","parse","localStorage","getItem","authorUpdate","stringify"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport firebase from \"./../../config\";\nimport {\n  Card,\n  CardBody,\n  CardHeader,\n  Col,\n  Row,\n  Table,\n  CardImg,\n  Badge,\n  Button\n} from \"reactstrap\";\nimport { AppSwitch } from \"@coreui/react\";\nimport ChartTeams from \"./ChartTeams\";\nimport TableTeams from \"./TableTeams\";\nimport OldMatch from \"./OldMatch\";\nimport moment from \"moment\";\n\nconst scrollToRef = ref =>\n  ref.current.scrollIntoView({ behavior: \"smooth\", block: \"start\" });\n\nconst Random = ({ changeStatusProgress }) => {\n  const myRef = useRef(null);\n  const ref = firebase.database();\n  const [users, setUsers] = useState([]);\n  const [teams, setTeams] = useState({});\n  const [oldMatch, setOldMatch] = useState({});\n  const [randomPlayerNotInclude, setRandomPlayerNotInclude] = useState([]);\n  const [lastRandomNotPlay, setLastRandomNotPlay] = useState([]);\n\n  const handleRandomPlayer = () => {\n    setUsers(prev => prev.map(i => ({ ...i, checked: false })));\n    let arrayUsers = [...lastRandomNotPlay.map(i => i.ingame)];\n    let tempUsers = [...users].filter(i => !arrayUsers.includes(i.ingame));\n    let length = arrayUsers.length;\n    for (let i = 0; i < 10 - length; i++) {\n      let index = ~~(Math.random() * tempUsers.length);\n      arrayUsers = [...arrayUsers, tempUsers[index] && tempUsers[index].ingame];\n      tempUsers.splice(index, 1);\n    }\n\n    setUsers(prev =>\n      prev.map(i =>\n        arrayUsers.includes(i.ingame) ? { ...i, checked: true } : i\n      )\n    );\n    setTeams({});\n    setRandomPlayerNotInclude(tempUsers);\n  };\n\n  useEffect(() => {\n    changeStatusProgress(true);\n    ref\n      .ref(\"users\")\n      .orderByValue()\n      .on(\"value\", snap => {\n        changeStatusProgress(false);\n        setUsers(\n          Object.values(snap.val()).map(user => ({ ...user, checked: false }))\n        );\n      });\n\n    ref\n      .ref(\"historyRandom\")\n      .orderByValue()\n      .limitToLast(1)\n      .on(\"value\", snap => {\n        changeStatusProgress(false);\n        if (snap.val() !== null && !Object.values(snap.val())[0].complete) {\n          setOldMatch(Object.values(snap.val())[0]);\n        }\n      });\n\n    ref\n      .ref(\"historyRandomNotPlay\")\n      .orderByValue()\n      .limitToLast(1)\n      .on(\"value\", snap => {\n        if (snap.val()) {\n          setLastRandomNotPlay(Object.values(snap.val())[0]);\n        }\n      });\n  }, []);\n\n  const statisticPlayer = player => users.find(user => user.ingame === player);\n\n  useEffect(() => {\n    scrollToRef(myRef);\n  }, [teams]);\n\n  const lastInfoTeam = () => {\n    const t1 =\n      teams[0] &&\n      teams[0].map(i => {\n        const player = i.split(\" - \")[0];\n        const addStatistic =\n          i +\n          \" - \" +\n          statisticPlayer(player).win +\n          \" - \" +\n          statisticPlayer(player).lose +\n          \" - \" +\n          statisticPlayer(player).avatar;\n        return addStatistic;\n      });\n    const t2 =\n      teams[1] &&\n      teams[1].map(i => {\n        const player = i.split(\" - \")[0];\n        const addStatistic =\n          i +\n          \" - \" +\n          statisticPlayer(player).win +\n          \" - \" +\n          statisticPlayer(player).lose +\n          \" -  \" +\n          statisticPlayer(player).avatar;\n        return addStatistic;\n      });\n    return { [0]: t1, [1]: t2 };\n  };\n\n  const handleSplitTeam = () => {\n    const teams = users.filter(i => i.checked);\n    const names = teams.map(i => i.ingame);\n    const details = teams.reduce(\n      (acc, cur) => ({ ...acc, [cur.ingame]: cur.role }),\n      {}\n    );\n\n    const random = () => ~~(Math.random() * 5);\n\n    const isFull = team => team.length === 5;\n\n    const renderLane = (player, team) => {\n      try {\n        const rLane = details[player][random()];\n        if (!rLane || team.some(i => i.includes(rLane))) {\n          return renderLane(player, team);\n        }\n        return `${player} - ${rLane}`;\n      } catch (err) {\n        return handleSplitTeam();\n      }\n    };\n\n    const splitTeam = names.reduce(\n      (acc, cur) => {\n        if (isFull(acc[0]) || isFull(acc[1])) {\n          isFull(acc[0])\n            ? acc[1].push(renderLane(cur, acc[1]))\n            : acc[0].push(renderLane(cur, acc[1]));\n        } else {\n          const r = random() % 2;\n          acc[r].push(renderLane(cur, acc[r]));\n        }\n        return acc;\n      },\n      { \"0\": [], \"1\": [] }\n    );\n\n    if (\n      splitTeam[0].filter(Boolean).length === 5 &&\n      splitTeam[1].filter(Boolean).length === 5\n    ) {\n      setTeams(splitTeam);\n    }\n  };\n\n  const renderRole = r => {\n    switch (r) {\n      case \"top\":\n        return (\n          <Badge\n            style={{ background: \"#0099FF\", marginRight: 10, color: \"white\" }}\n          >\n            {r}\n          </Badge>\n        );\n      case \"jungle\":\n        return (\n          <Badge\n            style={{ background: \"#3366CC\", marginRight: 10, color: \"white\" }}\n          >\n            {r}\n          </Badge>\n        );\n      case \"mid\":\n        return (\n          <Badge\n            style={{ background: \"#FF9900\", marginRight: 10, color: \"white\" }}\n          >\n            {r}\n          </Badge>\n        );\n      case \"ad\":\n        return (\n          <Badge\n            style={{ background: \"#f25e5e\", marginRight: 10, color: \"white\" }}\n          >\n            {r}\n          </Badge>\n        );\n      case \"support\":\n        return (\n          <Badge\n            style={{ background: \"#f2a766\", marginRight: 10, color: \"white\" }}\n          >\n            {r}\n          </Badge>\n        );\n      default:\n        return r;\n    }\n  };\n  const renderWinRate = r => {\n    if (r <= 25) {\n      return (\n        <Badge\n          style={{ background: \"#f25e5e\", marginRight: 10, color: \"white\" }}\n        >\n          {r}\n          <small>%</small>\n        </Badge>\n      );\n    } else if (r <= 50) {\n      return (\n        <Badge color=\"warning\">\n          {r}\n          <small>%</small>\n        </Badge>\n      );\n    } else if (r <= 75) {\n      return (\n        <Badge color=\"primary\">\n          {r}\n          <small>%</small>\n        </Badge>\n      );\n    } else if (r <= 100) {\n      return (\n        <Badge color=\"success\">\n          {r}\n          <small>%</small>\n        </Badge>\n      );\n    }\n  };\n\n  const renderUser = () => {\n    return users.map((user, index) => {\n      return (\n        <tr key={user.username}>\n          <td>\n            <Badge style={{ background: \"#660099\", color: \"white\" }}>\n              {index + 1}\n            </Badge>\n          </td>\n          <td>\n            {user.avatar && (\n              <CardImg\n                style={{ width: \"30px\" }}\n                src={user.avatar}\n                alt=\"avatar\"\n              />\n            )}\n          </td>\n          <td>\n            <Badge style={{ background: \"#660099\", color: \"white\" }}>\n              {user.ingame}\n            </Badge>\n          </td>\n          <td>\n            {user.role &&\n              user.role.map(r => (\n                <span key={user.username + r}>{renderRole(r)}</span>\n              ))}\n          </td>\n          <td>\n            <Badge color=\"success\">{user.win}</Badge>\n          </td>\n          <td>\n            <Badge color=\"danger\">{user.lose}</Badge>\n          </td>\n          <td>\n            {renderWinRate(~~((user.win / (user.win + user.lose)) * 100 || 0))}\n          </td>\n          <td>\n            <AppSwitch\n              className={\"mx-1\"}\n              color={\"success\"}\n              checked={user.checked}\n              disabled={\n                (handleTotalSelected() === 10 && !user.checked) ||\n                !user.role ||\n                !user.role.length\n              }\n              onChange={({ target: { checked } }) => {\n                setUsers(prev =>\n                  prev.map(p => {\n                    if (p.username === user.username) {\n                      p.checked = checked;\n                    }\n                    return p;\n                  })\n                );\n              }}\n            />\n          </td>\n        </tr>\n      );\n    });\n  };\n\n  const handleTotalSelected = () => {\n    return users.filter(i => i.checked).length;\n  };\n\n  const handleSaveTeamRandom = () => {\n    changeStatusProgress(true);\n    const statistic = {\n      blueTeam: teams[0],\n      redTeam: teams[1],\n      dateMatch: moment(new Date()).format(\"YYYY-MM-DD\"),\n      complete: false,\n      authorCreate: JSON.parse(localStorage.getItem(\"account\")).username,\n      authorUpdate: \"\"\n    };\n\n    ref.ref(\"historyRandom\").push(statistic, snap => {\n      changeStatusProgress(false);\n    });\n    ref.ref(\"historyRandomNotPlay\").push(randomPlayerNotInclude);\n    setOldMatch(statistic);\n  };\n\n  if (oldMatch.complete === false)\n    return (\n      <OldMatch\n        oldMatch={oldMatch}\n        changeStatusProgress={changeStatusProgress}\n      />\n    );\n\n  return (\n    <Row>\n      <Col>\n        <Card>\n          <CardHeader>\n            <i className=\"fa fa-align-justify\"></i> Users table\n          </CardHeader>\n          <CardBody>\n            <h4>\n              Player selected{\" \"}\n              <Badge\n                color={handleTotalSelected() === 10 ? \"success\" : \"secondary\"}\n              >\n                {handleTotalSelected()}\n              </Badge>\n            </h4>\n            {(handleTotalSelected() !== 10 && (\n              <small>Choose 10 players from the board</small>\n            )) || <small>Picked enough</small>}\n            <Table hover bordered striped responsive size=\"sm\">\n              <thead>\n                <tr>\n                  <th>#</th>\n                  <th>Avatar</th>\n                  <th>Player</th>\n                  <th>Role</th>\n                  <th>Win</th>\n                  <th>Lost</th>\n                  <th>\n                    Win rate <small>(%)</small>\n                  </th>\n                  <th>Status</th>\n                </tr>\n              </thead>\n              <tbody>{renderUser()}</tbody>\n            </Table>\n            <Row>\n              <Col col=\"6\" sm=\"4\" md=\"3\" xl=\"2\" className=\"mb-3 mb-xl-0\">\n                <Button\n                  block\n                  color=\"success\"\n                  onClick={handleRandomPlayer}\n                  fullWidth\n                >\n                  Random players\n                </Button>\n              </Col>\n              <Col col=\"6\" sm=\"4\" md=\"3\" xl=\"2\" className=\"mb-3 mb-xl-0\">\n                <Button\n                  block\n                  color=\"success\"\n                  disabled={handleTotalSelected() !== 10}\n                  onClick={handleSplitTeam}\n                  fullWidth\n                >\n                  Random team\n                </Button>\n              </Col>\n            </Row>\n            <div ref={myRef}>\n              {teams && JSON.stringify(teams) !== \"{}\" && (\n                <>\n                  <TableTeams teams={lastInfoTeam()} />\n                  <ChartTeams teams={lastInfoTeam()} />\n                  <Row>\n                    <Col col=\"6\" sm=\"4\" md=\"3\" xl=\"2\" className=\"mb-3 mb-xl-0\">\n                      <Button\n                        block\n                        color=\"success\"\n                        onClick={handleSaveTeamRandom}\n                      >\n                        Save Team\n                      </Button>\n                    </Col>\n                  </Row>\n                </>\n              )}\n            </div>\n          </CardBody>\n        </Card>\n      </Col>\n    </Row>\n  );\n};\n\nexport default Random;\n"]},"metadata":{},"sourceType":"module"}