{"ast":null,"code":"(function (l) {\n  function m(b) {\n    b = void 0 === b ? \"utf-8\" : b;\n    if (\"utf-8\" !== b) throw new RangeError(\"Failed to construct 'TextEncoder': The encoding label provided ('\" + b + \"') is invalid.\");\n  }\n\n  function k(b, a) {\n    b = void 0 === b ? \"utf-8\" : b;\n    a = void 0 === a ? {\n      fatal: !1\n    } : a;\n    if (\"utf-8\" !== b) throw new RangeError(\"Failed to construct 'TextDecoder': The encoding label provided ('\" + b + \"') is invalid.\");\n    if (a.fatal) throw Error(\"Failed to construct 'TextDecoder': the 'fatal' option is unsupported.\");\n  }\n\n  if (l.TextEncoder && l.TextDecoder) return !1;\n  Object.defineProperty(m.prototype, \"encoding\", {\n    value: \"utf-8\"\n  });\n\n  m.prototype.encode = function (b, a) {\n    a = void 0 === a ? {\n      stream: !1\n    } : a;\n    if (a.stream) throw Error(\"Failed to encode: the 'stream' option is unsupported.\");\n    a = 0;\n\n    for (var h = b.length, f = 0, c = Math.max(32, h + (h >> 1) + 7), e = new Uint8Array(c >> 3 << 3); a < h;) {\n      var d = b.charCodeAt(a++);\n\n      if (55296 <= d && 56319 >= d) {\n        if (a < h) {\n          var g = b.charCodeAt(a);\n          56320 === (g & 64512) && (++a, d = ((d & 1023) << 10) + (g & 1023) + 65536);\n        }\n\n        if (55296 <= d && 56319 >= d) continue;\n      }\n\n      f + 4 > e.length && (c += 8, c *= 1 + a / b.length * 2, c = c >> 3 << 3, g = new Uint8Array(c), g.set(e), e = g);\n      if (0 === (d & 4294967168)) e[f++] = d;else {\n        if (0 === (d & 4294965248)) e[f++] = d >> 6 & 31 | 192;else if (0 === (d & 4294901760)) e[f++] = d >> 12 & 15 | 224, e[f++] = d >> 6 & 63 | 128;else if (0 === (d & 4292870144)) e[f++] = d >> 18 & 7 | 240, e[f++] = d >> 12 & 63 | 128, e[f++] = d >> 6 & 63 | 128;else continue;\n        e[f++] = d & 63 | 128;\n      }\n    }\n\n    return e.slice(0, f);\n  };\n\n  Object.defineProperty(k.prototype, \"encoding\", {\n    value: \"utf-8\"\n  });\n  Object.defineProperty(k.prototype, \"fatal\", {\n    value: !1\n  });\n  Object.defineProperty(k.prototype, \"ignoreBOM\", {\n    value: !1\n  });\n\n  k.prototype.decode = function (b, a) {\n    a = void 0 === a ? {\n      stream: !1\n    } : a;\n    if (a.stream) throw Error(\"Failed to decode: the 'stream' option is unsupported.\");\n    b = new Uint8Array(b);\n    a = 0;\n\n    for (var h = b.length, f = []; a < h;) {\n      var c = b[a++];\n      if (0 === c) break;\n      if (0 === (c & 128)) f.push(c);else if (192 === (c & 224)) {\n        var e = b[a++] & 63;\n        f.push((c & 31) << 6 | e);\n      } else if (224 === (c & 240)) {\n        e = b[a++] & 63;\n        var d = b[a++] & 63;\n        f.push((c & 31) << 12 | e << 6 | d);\n      } else if (240 === (c & 248)) {\n        e = b[a++] & 63;\n        d = b[a++] & 63;\n        var g = b[a++] & 63;\n        c = (c & 7) << 18 | e << 12 | d << 6 | g;\n        65535 < c && (c -= 65536, f.push(c >>> 10 & 1023 | 55296), c = 56320 | c & 1023);\n        f.push(c);\n      }\n    }\n\n    return String.fromCharCode.apply(null, f);\n  };\n\n  l.TextEncoder = m;\n  l.TextDecoder = k;\n})(\"undefined\" !== typeof window ? window : \"undefined\" !== typeof global ? global : this);","map":null,"metadata":{},"sourceType":"script"}