{"ast":null,"code":"import _defineProperty from \"/Users/maidat/Desktop/team-lq/persol-lqmb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/maidat/Desktop/team-lq/persol-lqmb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/maidat/Desktop/team-lq/persol-lqmb/src/components/Random/TableTeams.js\";\nimport React from \"react\";\nimport { Badge, Card, CardBody, CardHeader, Col, Row, Table } from \"reactstrap\";\nvar width = {\n  width: \"33%\"\n};\n\nvar TableTeams = function TableTeams(_ref) {\n  var teams = _ref.teams;\n  console.log(teams);\n  var blueTeam, redTeam;\n  teams[0].map(function (i) {\n    var t = i.split(\" - \");\n    blueTeam = _objectSpread({}, blueTeam, _defineProperty({}, t[1], \"\".concat(t[0], \" - \").concat(t[2], \" - \").concat(t[3])));\n    return i;\n  });\n  teams[1].map(function (i) {\n    var t = i.split(\" - \");\n    redTeam = _objectSpread({}, redTeam, _defineProperty({}, t[1], \"\".concat(t[0], \" - \").concat(t[2], \" - \").concat(t[3])));\n    return i;\n  });\n\n  var handlePos = function handlePos(i) {\n    switch (i) {\n      case 0:\n        return \"top\";\n\n      case 1:\n        return \"jungle\";\n\n      case 2:\n        return \"mid\";\n\n      case 3:\n        return \"ad\";\n\n      case 4:\n        return \"support\";\n\n      default:\n        return;\n    }\n  };\n\n  var renderPlayer = function renderPlayer(player) {\n    var spl = player.split(\" - \");\n    return React.createElement(React.Fragment, null, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, spl[0]), React.createElement(\"span\", {\n      style: {\n        marginLeft: 25\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(Badge, {\n      color: \"success\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, spl[1])), React.createElement(\"span\", {\n      style: {\n        marginLeft: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(Badge, {\n      color: \"danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, spl[2])), React.createElement(\"span\", {\n      style: {\n        marginLeft: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(Badge, {\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, spl[1] / (spl[1] + spl[2]) * 100 || 0, \" \", React.createElement(\"small\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"%\"))));\n  };\n\n  return React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(Col, {\n    xs: \"12\",\n    style: {\n      marginTop: 35\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(CardHeader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fa fa-align-justify\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }), \" Ba\\x1Dttle board\"), React.createElement(CardBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(Table, {\n    responsive: true,\n    size: \"sm\",\n    style: {\n      textAlign: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    style: width,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"Blue Team\"), React.createElement(\"th\", {\n    style: _objectSpread({}, width, {\n      fontSize: 24\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"\\uD83D\\uDC51\"), React.createElement(\"th\", {\n    style: width,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"Read Team\"))), React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, [0, 1, 2, 3, 4].map(function (i) {\n    return React.createElement(\"tr\", {\n      key: blueTeam[handlePos(i)] + redTeam[handlePos(i)],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      style: width,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, renderPlayer(blueTeam[handlePos(i)])), React.createElement(\"td\", {\n      style: width,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, handlePos(i).charAt(0).toUpperCase() + handlePos(i).slice(1)), React.createElement(\"td\", {\n      style: width,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, renderPlayer(redTeam[handlePos(i)])));\n  })))))));\n};\n\nexport default TableTeams;","map":{"version":3,"sources":["/Users/maidat/Desktop/team-lq/persol-lqmb/src/components/Random/TableTeams.js"],"names":["React","Badge","Card","CardBody","CardHeader","Col","Row","Table","width","TableTeams","teams","console","log","blueTeam","redTeam","map","i","t","split","handlePos","renderPlayer","player","spl","marginLeft","marginTop","textAlign","fontSize","charAt","toUpperCase","slice"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Badge, Card, CardBody, CardHeader, Col, Row, Table } from \"reactstrap\";\n\nconst width = { width: \"33%\" };\n\nconst TableTeams = ({ teams }) => {\n  console.log(teams);\n  let blueTeam, redTeam;\n  teams[0].map(i => {\n    const t = i.split(\" - \");\n    blueTeam = { ...blueTeam, [t[1]]: `${t[0]} - ${t[2]} - ${t[3]}` };\n    return i;\n  });\n  teams[1].map(i => {\n    const t = i.split(\" - \");\n    redTeam = { ...redTeam, [t[1]]: `${t[0]} - ${t[2]} - ${t[3]}` };\n    return i;\n  });\n\n  const handlePos = i => {\n    switch (i) {\n      case 0:\n        return \"top\";\n      case 1:\n        return \"jungle\";\n      case 2:\n        return \"mid\";\n      case 3:\n        return \"ad\";\n      case 4:\n        return \"support\";\n      default:\n        return;\n    }\n  };\n\n  const renderPlayer = player => {\n    const spl = player.split(\" - \");\n\n    return (\n      <>\n        <span>{spl[0]}</span>\n        <span style={{marginLeft: 25}}><Badge color=\"success\">{spl[1]}</Badge></span>\n        <span style={{marginLeft: 10}}><Badge color=\"danger\">{spl[2]}</Badge></span>\n        <span style={{marginLeft: 10}}><Badge color=\"primary\">{spl[1] / (spl[1] + spl[2]) *  100 || 0} <small>%</small></Badge></span>\n      </>\n    );\n  };\n\n  return (\n    <Row>\n      <Col xs=\"12\" style={{ marginTop: 35 }}>\n        <Card>\n          <CardHeader>\n            <i className=\"fa fa-align-justify\"></i> Ba\u001dttle board\n          </CardHeader>\n          <CardBody>\n            <Table responsive size=\"sm\" style={{ textAlign: \"center\" }}>\n              <thead>\n                <tr>\n                  <th style={width}>Blue Team</th>\n                  <th style={{ ...width, fontSize: 24 }}>👑</th>\n                  <th style={width}>Read Team</th>\n                </tr>\n              </thead>\n              <tbody>\n                {[0, 1, 2, 3, 4].map(i => {\n                  return (\n                    <tr key={blueTeam[handlePos(i)] + redTeam[handlePos(i)]}>\n                      <td style={width}>\n                        {renderPlayer(blueTeam[handlePos(i)])}\n                      </td>\n                      <td style={width}>\n                        {handlePos(i)\n                          .charAt(0)\n                          .toUpperCase() + handlePos(i).slice(1)}\n                      </td>\n                      <td style={width}>{renderPlayer(redTeam[handlePos(i)])}</td>\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </Table>\n          </CardBody>\n        </Card>\n      </Col>\n    </Row>\n  );\n};\n\nexport default TableTeams;\n"]},"metadata":{},"sourceType":"module"}