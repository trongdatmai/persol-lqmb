{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\Admin\\\\Desktop\\\\persol\\\\persol-lqmb\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"C:\\\\Users\\\\Admin\\\\Desktop\\\\persol\\\\persol-lqmb\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"C:\\\\Users\\\\Admin\\\\Desktop\\\\persol\\\\persol-lqmb\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"C:\\\\Users\\\\Admin\\\\Desktop\\\\persol\\\\persol-lqmb\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\persol\\\\persol-lqmb\\\\src\\\\components\\\\Dashboard\\\\components\\\\W4.js\";\nimport React, { useState } from 'react';\nimport { Card, CardBody, CardFooter, CardTitle, Col, Progress, Row, FormGroup, Label, Input } from 'reactstrap';\nimport { Line } from 'react-chartjs-2';\nvar myAccount = JSON.parse(localStorage.getItem('account') || '{}');\nexport default (function (_ref) {\n  var account = _ref.account,\n      historyMatchs = _ref.historyMatchs;\n  myAccount = account.find(function (e) {\n    return e.username === myAccount.username;\n  });\n\n  var _useState = useState(myAccount.ingame),\n      _useState2 = _slicedToArray(_useState, 2),\n      name = _useState2[0],\n      setName = _useState2[1];\n\n  var chooseAccount = account.find(function (e) {\n    return e.ingame === name;\n  });\n\n  var matchsForName = _toConsumableArray(historyMatchs).filter(function (i) {\n    return i.blueTeam.some(function (e) {\n      return e.search(name) !== -1;\n    }) || i.redTeam.some(function (e) {\n      return e.search(name) !== -1;\n    });\n  });\n\n  var dateForGame = _toConsumableArray(new Set(matchsForName.map(function (i) {\n    return i.dateMatch;\n  })));\n\n  var checkBlueTeamWinGame = function checkBlueTeamWinGame(win, team) {\n    return team.some(function (e) {\n      return e.search(name) !== -1;\n    }) && win === 'blueTeam';\n  };\n\n  var checkRedTeamWinGame = function checkRedTeamWinGame(win, team) {\n    return team.some(function (e) {\n      return e.search(name) !== -1;\n    }) && win === 'redTeam';\n  };\n\n  var statisticForGame = _toConsumableArray(matchsForName).reduce(function (acc, cur) {\n    console.log(checkBlueTeamWinGame(cur.win, cur.blueTeam) || checkRedTeamWinGame(cur.win, cur.redTeam), acc[cur.dateMatch]);\n    acc = !!acc[cur.dateMatch] ? _objectSpread({}, acc, _defineProperty({}, cur.dateMatch, checkBlueTeamWinGame(cur.win, cur.blueTeam) || checkRedTeamWinGame(cur.win, cur.redTeam) ? _objectSpread({}, acc[cur.dateMatch], {\n      win: acc[cur.dateMatch].win + 1\n    }) : _objectSpread({}, acc[cur.dateMatch], {\n      lose: acc[cur.dateMatch].lose + 1\n    }))) : _objectSpread({}, acc, _defineProperty({}, cur.dateMatch, checkBlueTeamWinGame(cur.win, cur.blueTeam) || checkRedTeamWinGame(cur.win, cur.redTeam) ? {\n      lose: 0,\n      win: 1\n    } : {\n      win: 0,\n      lose: 1\n    }));\n    var tmp = acc.winSequenceTmp;\n\n    if (checkBlueTeamWinGame(cur.win, cur.blueTeam) || checkRedTeamWinGame(cur.win, cur.redTeam)) {\n      tmp += 1;\n    } else {\n      tmp = 0;\n    }\n\n    acc = tmp > acc.winSequence ? _objectSpread({}, acc, {\n      winSequence: tmp,\n      winSequenceTmp: tmp\n    }) : _objectSpread({}, acc, {\n      winSequenceTmp: tmp\n    });\n    return acc;\n  }, {\n    winSequence: 0,\n    winSequenceTmp: 0\n  });\n\n  var data = {\n    labels: dateForGame,\n    datasets: [{\n      label: 'Win match',\n      fill: false,\n      lineTension: 0.1,\n      backgroundColor: '#4dbd74 ',\n      borderColor: '#4dbd74 ',\n      borderCapStyle: 'butt',\n      borderDash: [],\n      borderDashOffset: 0.0,\n      borderJoinStyle: 'miter',\n      pointBorderColor: '#4dbd74 ',\n      pointBackgroundColor: '#fff',\n      pointBorderWidth: 1,\n      pointHoverRadius: 5,\n      pointHoverBackgroundColor: '#4dbd74 ',\n      pointHoverBorderColor: '#4dbd74 ',\n      pointHoverBorderWidth: 2,\n      pointRadius: 1,\n      pointHitRadius: 10,\n      data: Object.values(statisticForGame).map(function (i) {\n        return i.win;\n      })\n    }, {\n      label: 'Losing match',\n      fill: false,\n      lineTension: 0.1,\n      backgroundColor: '#FF3030',\n      borderColor: '#FF3030',\n      borderCapStyle: 'butt',\n      borderDash: [],\n      borderDashOffset: 0.0,\n      borderJoinStyle: 'miter',\n      pointBorderColor: '#FF3030',\n      pointBackgroundColor: '#fff',\n      pointBorderWidth: 1,\n      pointHoverRadius: 5,\n      pointHoverBackgroundColor: '#FF3030',\n      pointHoverBorderColor: '#FF3030',\n      pointHoverBorderWidth: 2,\n      pointRadius: 1,\n      pointHitRadius: 10,\n      data: Object.values(statisticForGame).map(function (i) {\n        return i.lose;\n      })\n    }]\n  };\n  console.log(statisticForGame, historyMatchs);\n  return React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(Col, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(CardBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, React.createElement(Row, {\n    style: {\n      marginBottom: 20\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(Col, {\n    sm: \"5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, React.createElement(CardTitle, {\n    className: \"mb-0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, \"Match history chart\"), React.createElement(\"div\", {\n    className: \"small text-muted\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, \"Persol Gaming 2020\"))), React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, React.createElement(Col, {\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    row: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, React.createElement(Col, {\n    xs: \"12\",\n    md: \"12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, React.createElement(Label, {\n    htmlFor: \"select\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, \"choose the player\")), React.createElement(Col, {\n    xs: \"12\",\n    md: \"4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, React.createElement(Input, {\n    type: \"select\",\n    value: name,\n    name: \"select\",\n    id: \"select\",\n    onChange: function onChange(e) {\n      return setName(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, account.map(function (acc) {\n    return React.createElement(\"option\", {\n      value: acc.ingame,\n      key: acc.ingame,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, acc.ingame);\n  })))))), React.createElement(\"div\", {\n    className: \"chart-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, React.createElement(Line, {\n    data: data,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }))), React.createElement(CardFooter, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, React.createElement(Row, {\n    className: \"text-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, React.createElement(Col, {\n    sm: 12,\n    md: true,\n    className: \"mb-sm-2 mb-0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"text-muted\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, \"Win match\"), React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, chooseAccount.win, \" \", React.createElement(\"small\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, \"(\", ~~(chooseAccount.win / (chooseAccount.win + chooseAccount.lose) * 100), \"%)\")), React.createElement(Progress, {\n    className: \"progress-xs mt-2\",\n    color: \"success\",\n    value: ~~(chooseAccount.win / (chooseAccount.win + chooseAccount.lose) * 100),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  })), React.createElement(Col, {\n    sm: 12,\n    md: true,\n    className: \"mb-sm-2 mb-0 d-md-down-none\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"text-muted\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, \"Losing match\"), React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, chooseAccount.lose, \" \", React.createElement(\"small\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, \"(\", ~~(chooseAccount.lose / (chooseAccount.win + chooseAccount.lose) * 100) + 1, \"%)\")), React.createElement(Progress, {\n    className: \"progress-xs mt-2\",\n    color: \"info\",\n    value: ~~(chooseAccount.lose / (chooseAccount.win + chooseAccount.lose) * 100) + 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  })), React.createElement(Col, {\n    sm: 12,\n    md: true,\n    className: \"mb-sm-2 mb-0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"text-muted\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, \"Total matchs:\"), React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, chooseAccount.lose + chooseAccount.win), React.createElement(Progress, {\n    className: \"progress-xs mt-2\",\n    color: \"danger\",\n    value: chooseAccount.lose + chooseAccount.win,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  })), React.createElement(Col, {\n    sm: 12,\n    md: true,\n    className: \"mb-sm-2 mb-0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"text-muted\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, \"Total matchs(%): \"), React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, ~~((parseInt(chooseAccount.lose) + parseInt(chooseAccount.win)) / parseInt(historyMatchs.length) * 100), \"%\"), React.createElement(Progress, {\n    className: \"progress-xs mt-2\",\n    color: \"primary\",\n    value: ~~((parseInt(chooseAccount.lose) + parseInt(chooseAccount.win)) / parseInt(historyMatchs.length) * 100),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  })), React.createElement(Col, {\n    sm: 12,\n    md: true,\n    className: \"mb-sm-2 mb-0 d-md-down-none\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"text-muted\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, \"Longest winning streak\"), React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, statisticForGame.winSequence), React.createElement(Progress, {\n    className: \"progress-xs mt-2\",\n    color: \"warning\",\n    value: statisticForGame.winSequence,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  })))))));\n});","map":{"version":3,"sources":["C:/Users/Admin/Desktop/persol/persol-lqmb/src/components/Dashboard/components/W4.js"],"names":["React","useState","Card","CardBody","CardFooter","CardTitle","Col","Progress","Row","FormGroup","Label","Input","Line","myAccount","JSON","parse","localStorage","getItem","account","historyMatchs","find","e","username","ingame","name","setName","chooseAccount","matchsForName","filter","i","blueTeam","some","search","redTeam","dateForGame","Set","map","dateMatch","checkBlueTeamWinGame","win","team","checkRedTeamWinGame","statisticForGame","reduce","acc","cur","console","log","lose","tmp","winSequenceTmp","winSequence","data","labels","datasets","label","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","Object","values","marginBottom","target","value","parseInt","length"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport {\r\n    Card,\r\n    CardBody,\r\n    CardFooter,\r\n    CardTitle,\r\n    Col,\r\n    Progress,\r\n    Row,\r\n    FormGroup,\r\n    Label,\r\n    Input,\r\n} from 'reactstrap';\r\nimport { Line } from 'react-chartjs-2';\r\n\r\nlet myAccount = JSON.parse(localStorage.getItem('account') || '{}');\r\n\r\nexport default ({ account, historyMatchs }) => {\r\n    myAccount = account.find(e => e.username === myAccount.username)\r\n    \r\n    const [name, setName] = useState(myAccount.ingame);\r\n    const chooseAccount = account.find(e => e.ingame === name)\r\n\r\n    const matchsForName = [...historyMatchs].filter(i => i.blueTeam.some(e => { return e.search(name) !== -1 }) || i.redTeam.some(e => { return e.search(name) !== -1 }))\r\n    const dateForGame = [...new Set(matchsForName.map(i => i.dateMatch))]\r\n    const checkBlueTeamWinGame = (win, team) => team.some(e => { return e.search(name) !== -1 }) && win === 'blueTeam'\r\n    const checkRedTeamWinGame = (win, team) => team.some(e => { return e.search(name) !== -1 }) && win === 'redTeam'\r\n    const statisticForGame = [...matchsForName].reduce((acc, cur) => {\r\n        console.log(checkBlueTeamWinGame(cur.win, cur.blueTeam) || checkRedTeamWinGame(cur.win, cur.redTeam), acc[cur.dateMatch])\r\n        acc = !!acc[cur.dateMatch] ?\r\n            {\r\n                ...acc, [cur.dateMatch]:\r\n                    checkBlueTeamWinGame(cur.win, cur.blueTeam) || checkRedTeamWinGame(cur.win, cur.redTeam)\r\n                        ? { ...acc[cur.dateMatch], win: acc[cur.dateMatch].win + 1 }\r\n                        : { ...acc[cur.dateMatch], lose: acc[cur.dateMatch].lose + 1 }\r\n            }\r\n            : {\r\n                ...acc, [cur.dateMatch]:\r\n                    checkBlueTeamWinGame(cur.win, cur.blueTeam) || checkRedTeamWinGame(cur.win, cur.redTeam)\r\n                        ? { lose: 0, win: 1 }\r\n                        : { win: 0, lose: 1 }\r\n            }\r\n        let tmp = acc.winSequenceTmp\r\n        if(checkBlueTeamWinGame(cur.win, cur.blueTeam) || checkRedTeamWinGame(cur.win, cur.redTeam)) {\r\n            tmp += 1\r\n        } else {\r\n            tmp = 0\r\n        }\r\n        acc = tmp > acc.winSequence ? {...acc, winSequence: tmp, winSequenceTmp: tmp} : {...acc, winSequenceTmp: tmp}\r\n        return acc\r\n    }, {winSequence: 0, winSequenceTmp: 0})\r\n\r\n\r\n    const data = {\r\n        labels: dateForGame,\r\n        datasets: [\r\n            {\r\n                label: 'Win match',\r\n                fill: false,\r\n                lineTension: 0.1,\r\n                backgroundColor: '#4dbd74 ',\r\n                borderColor: '#4dbd74 ',\r\n                borderCapStyle: 'butt',\r\n                borderDash: [],\r\n                borderDashOffset: 0.0,\r\n                borderJoinStyle: 'miter',\r\n                pointBorderColor: '#4dbd74 ',\r\n                pointBackgroundColor: '#fff',\r\n                pointBorderWidth: 1,\r\n                pointHoverRadius: 5,\r\n                pointHoverBackgroundColor: '#4dbd74 ',\r\n                pointHoverBorderColor: '#4dbd74 ',\r\n                pointHoverBorderWidth: 2,\r\n                pointRadius: 1,\r\n                pointHitRadius: 10,\r\n                data: Object.values(statisticForGame).map(i => i.win)\r\n            },\r\n            {\r\n                label: 'Losing match',\r\n                fill: false,\r\n                lineTension: 0.1,\r\n                backgroundColor: '#FF3030',\r\n                borderColor: '#FF3030',\r\n                borderCapStyle: 'butt',\r\n                borderDash: [],\r\n                borderDashOffset: 0.0,\r\n                borderJoinStyle: 'miter',\r\n                pointBorderColor: '#FF3030',\r\n                pointBackgroundColor: '#fff',\r\n                pointBorderWidth: 1,\r\n                pointHoverRadius: 5,\r\n                pointHoverBackgroundColor: '#FF3030',\r\n                pointHoverBorderColor: '#FF3030',\r\n                pointHoverBorderWidth: 2,\r\n                pointRadius: 1,\r\n                pointHitRadius: 10,\r\n                data: Object.values(statisticForGame).map(i => i.lose)\r\n            }\r\n        ]\r\n    };\r\nconsole.log(statisticForGame, historyMatchs)\r\n    return <Row>\r\n        <Col>\r\n            <Card>\r\n                <CardBody>\r\n                    <Row style={{ marginBottom: 20 }}>\r\n                        <Col sm=\"5\">\r\n                            <CardTitle className=\"mb-0\">Match history chart</CardTitle>\r\n                            <div className=\"small text-muted\">Persol Gaming 2020</div>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col xs={12}>\r\n                            <FormGroup row>\r\n                                <Col xs=\"12\" md=\"12\">\r\n                                    <Label htmlFor=\"select\">choose the player</Label>\r\n                                </Col>\r\n                                <Col xs=\"12\" md=\"4\">\r\n                                    <Input type=\"select\" value={name} name=\"select\" id=\"select\" onChange={e => setName(e.target.value)}>\r\n                                        {\r\n                                            account.map(acc => {\r\n                                                return <option value={acc.ingame} key={acc.ingame}>{acc.ingame}</option>\r\n                                            })\r\n                                        }\r\n                                    </Input>\r\n                                </Col>\r\n                            </FormGroup>\r\n                        </Col>\r\n                    </Row>\r\n                    <div className=\"chart-wrapper\" >\r\n                        <Line data={data} />\r\n                    </div>\r\n                </CardBody>\r\n                <CardFooter>\r\n                    <Row className=\"text-center\">\r\n                        <Col sm={12} md className=\"mb-sm-2 mb-0\">\r\n                            <div className=\"text-muted\">Win match</div>\r\n                            <strong>{chooseAccount.win} <small>({~~(chooseAccount.win / (chooseAccount.win + chooseAccount.lose) * 100)}%)</small></strong>\r\n                            <Progress className=\"progress-xs mt-2\" color=\"success\" value={~~(chooseAccount.win / (chooseAccount.win + chooseAccount.lose) * 100)} />\r\n                        </Col>\r\n                        <Col sm={12} md className=\"mb-sm-2 mb-0 d-md-down-none\">\r\n                            <div className=\"text-muted\">Losing match</div>\r\n                            <strong>{chooseAccount.lose} <small>({~~(chooseAccount.lose / (chooseAccount.win + chooseAccount.lose) * 100) + 1}%)</small></strong>\r\n                            <Progress className=\"progress-xs mt-2\" color=\"info\" value={~~(chooseAccount.lose / (chooseAccount.win + chooseAccount.lose) * 100) + 1} />\r\n                        </Col>\r\n                        <Col sm={12} md className=\"mb-sm-2 mb-0\">\r\n                            <div className=\"text-muted\">Total matchs:</div>\r\n                            <strong>{chooseAccount.lose + chooseAccount.win}</strong>\r\n                            <Progress className=\"progress-xs mt-2\" color=\"danger\" value={chooseAccount.lose + chooseAccount.win} />\r\n                        </Col>\r\n                        <Col sm={12} md className=\"mb-sm-2 mb-0\">\r\n                            <div className=\"text-muted\">Total matchs(%): </div>\r\n                            <strong>{~~((parseInt(chooseAccount.lose) + parseInt(chooseAccount.win)) / parseInt(historyMatchs.length) * 100)}%</strong>\r\n                            <Progress className=\"progress-xs mt-2\" color=\"primary\" value={~~((parseInt(chooseAccount.lose) + parseInt(chooseAccount.win)) / parseInt(historyMatchs.length) * 100)} />\r\n                        </Col>\r\n                        <Col sm={12} md className=\"mb-sm-2 mb-0 d-md-down-none\">\r\n                            <div className=\"text-muted\">Longest winning streak</div>\r\n                            <strong>{statisticForGame.winSequence}</strong>\r\n                            <Progress className=\"progress-xs mt-2\" color=\"warning\" value={statisticForGame.winSequence} />\r\n                        </Col>\r\n                    </Row>\r\n                </CardFooter>\r\n            </Card>\r\n        </Col>\r\n    </Row>\r\n}"]},"metadata":{},"sourceType":"module"}