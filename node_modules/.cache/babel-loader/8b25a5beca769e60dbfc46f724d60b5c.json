{"ast":null,"code":"import _objectSpread from \"/Users/maidat/Desktop/team-lq/persol-lqmb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/maidat/Desktop/team-lq/persol-lqmb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/maidat/Desktop/team-lq/persol-lqmb/src/components/Random/index.js\";\nimport React, { useState, useEffect } from \"react\";\nimport firebase from \"./../../config\";\nimport { Badge, Card, CardBody, CardHeader, Col, Pagination, PaginationItem, PaginationLink, Row, Table, CardImg } from \"reactstrap\";\nimport { AppSwitch } from \"@coreui/react\";\n\nvar Random = function Random(_ref) {\n  var changeStatusProgress = _ref.changeStatusProgress;\n  var ref = firebase.database();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      users = _useState2[0],\n      setUsers = _useState2[1];\n\n  useEffect(function () {\n    changeStatusProgress(true);\n    ref.ref(\"users\").orderByValue().on(\"value\", function (snap) {\n      changeStatusProgress(false);\n      setUsers(Object.values(snap.val()).map(function (user) {\n        return _objectSpread({}, user, {\n          checked: false\n        });\n      }));\n    });\n  }, []);\n  console.log(users);\n\n  var renderUser = function renderUser() {\n    return users.map(function (user, index) {\n      return React.createElement(\"tr\", {\n        key: user.username,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, index + 1), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, user.avatar && React.createElement(CardImg, {\n        style: {\n          width: \"30px\"\n        },\n        src: user.avatar,\n        alt: \"avatar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      })), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, user.ingame), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, user.role.map(function (r) {\n        return React.createElement(\"span\", {\n          key: user.username + r,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }, r, \", \");\n      })), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"small\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \"NA\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(\"small\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \"NA\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"small\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"NA\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(AppSwitch, {\n        className: \"mx-1\",\n        color: \"success\",\n        checked: user.checked,\n        onChange: function onChange(_ref2) {\n          var checked = _ref2.target.checked;\n          setUsers(function (prev) {\n            return prev.map(function (p) {\n              if (p.username === user.username) {\n                p.checked = checked;\n              }\n\n              return p;\n            });\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      })));\n    });\n  };\n\n  return React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(Col, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(CardHeader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fa fa-align-justify\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }), \" Users table\"), React.createElement(CardBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(Table, {\n    hover: true,\n    bordered: true,\n    striped: true,\n    responsive: true,\n    size: \"sm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, \"#\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, \"Avatar\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, \"Ingame\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, \"Role\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, \"Win\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, \"Lost\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, \"Win rate \", React.createElement(\"small\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, \"(%)\")), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, \"Status\"))), React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, renderUser()))))));\n};\n\nexport default Random;","map":{"version":3,"sources":["/Users/maidat/Desktop/team-lq/persol-lqmb/src/components/Random/index.js"],"names":["React","useState","useEffect","firebase","Badge","Card","CardBody","CardHeader","Col","Pagination","PaginationItem","PaginationLink","Row","Table","CardImg","AppSwitch","Random","changeStatusProgress","ref","database","users","setUsers","orderByValue","on","snap","Object","values","val","map","user","checked","console","log","renderUser","index","username","avatar","width","ingame","role","r","target","prev","p"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport firebase from \"./../../config\";\nimport {\n  Badge,\n  Card,\n  CardBody,\n  CardHeader,\n  Col,\n  Pagination,\n  PaginationItem,\n  PaginationLink,\n  Row,\n  Table,\n  CardImg\n} from \"reactstrap\";\nimport { AppSwitch } from \"@coreui/react\";\n\nconst Random = ({ changeStatusProgress }) => {\n  const ref = firebase.database();\n  const [users, setUsers] = useState([]);\n\n  useEffect(() => {\n    changeStatusProgress(true);\n    ref\n      .ref(\"users\")\n      .orderByValue()\n      .on(\"value\", snap => {\n        changeStatusProgress(false);\n        setUsers(\n          Object.values(snap.val()).map(user => ({ ...user, checked: false }))\n        );\n      });\n  }, []);\n  console.log(users);\n  const renderUser = () => {\n    return users.map((user, index) => {\n      return (\n        <tr key={user.username}>\n          <td>{index + 1}</td>\n          <td>\n            {user.avatar && (\n              <CardImg\n                style={{ width: \"30px\" }}\n                src={user.avatar}\n                alt=\"avatar\"\n              />\n            )}\n          </td>\n          <td>{user.ingame}</td>\n          <td>\n            {user.role.map(r => (\n              <span key={user.username + r}>{r}, </span>\n            ))}\n          </td>\n          <td>\n            <small>NA</small>\n          </td>\n          <td>\n            <small>NA</small>\n          </td>\n          <td>\n            <small>NA</small>\n          </td>\n          <td>\n            <AppSwitch\n              className={\"mx-1\"}\n              color={\"success\"}\n              checked={user.checked}\n              onChange={({ target: { checked } }) => {\n                setUsers(prev =>\n                  prev.map(p => {\n                    if (p.username === user.username) {\n                      p.checked = checked;\n                    }\n                    return p;\n                  })\n                );\n              }}\n            />\n          </td>\n        </tr>\n      );\n    });\n  };\n  return (\n    <Row>\n      <Col>\n        <Card>\n          <CardHeader>\n            <i className=\"fa fa-align-justify\"></i> Users table\n          </CardHeader>\n          <CardBody>\n            <Table hover bordered striped responsive size=\"sm\">\n              <thead>\n                <tr>\n                  <th>#</th>\n                  <th>Avatar</th>\n                  <th>Ingame</th>\n                  <th>Role</th>\n                  <th>Win</th>\n                  <th>Lost</th>\n                  <th>\n                    Win rate <small>(%)</small>\n                  </th>\n                  <th>Status</th>\n                </tr>\n              </thead>\n              <tbody>{renderUser()}</tbody>\n            </Table>\n          </CardBody>\n        </Card>\n      </Col>\n    </Row>\n  );\n};\n\nexport default Random;\n"]},"metadata":{},"sourceType":"module"}