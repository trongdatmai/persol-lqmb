{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\Admin\\\\Desktop\\\\persol\\\\persol-lqmb\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"C:\\\\Users\\\\Admin\\\\Desktop\\\\persol\\\\persol-lqmb\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"C:\\\\Users\\\\Admin\\\\Desktop\\\\persol\\\\persol-lqmb\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"C:\\\\Users\\\\Admin\\\\Desktop\\\\persol\\\\persol-lqmb\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\persol\\\\persol-lqmb\\\\src\\\\components\\\\Dashboard\\\\components\\\\W3.js\";\nimport React, { useState } from 'react';\nimport { Card, CardBody, CardHeader, Col, Row, FormGroup, Label, Input, Progress } from 'reactstrap';\nvar myAccount = JSON.parse(localStorage.getItem('account') || '{}');\nexport default (function (_ref) {\n  var account = _ref.account,\n      statisticWLPlayers = _ref.statisticWLPlayers;\n  myAccount = account.find(function (e) {\n    return e.username === myAccount.username;\n  });\n\n  var _useState = useState(myAccount.ingame),\n      _useState2 = _slicedToArray(_useState, 2),\n      name = _useState2[0],\n      setName = _useState2[1];\n\n  var statisticChooseName = statisticWLPlayers[name];\n\n  var totalMatchs = function totalMatchs() {\n    if (!account.length || !name) return;\n\n    var player = _toConsumableArray(account).filter(function (e) {\n      return e.ingame === name;\n    })[0];\n\n    return player.win + player.lose;\n  };\n\n  var renderStatistic = function renderStatistic() {\n    if (!name) return;\n    var rs = {};\n    var w = statisticChooseName.win;\n    var l = statisticChooseName.lose;\n\n    for (var i in w) {\n      rs = _objectSpread({}, rs, _defineProperty({}, i, {\n        win: w[i],\n        lose: 0\n      }));\n    }\n\n    for (var _i in l) {\n      rs = _objectSpread({}, rs, _defineProperty({}, _i, _objectSpread({\n        win: 0\n      }, rs[_i], {\n        lose: l[_i]\n      })));\n    }\n\n    return rs;\n  };\n\n  var sortStatisticWin = Object.values(renderStatistic()).reduce(function (acc, cur, index) {\n    return cur.win >= acc.w ? acc = {\n      w: cur.win,\n      i: index\n    } : acc;\n  }, {\n    w: 0,\n    i: 0\n  });\n  var sortStatisticLose = Object.values(renderStatistic()).reduce(function (acc, cur, index) {\n    return cur.lose >= acc.l ? acc = {\n      l: cur.lose,\n      i: index\n    } : acc;\n  }, {\n    l: 0,\n    i: 0\n  });\n  console.log(sortStatisticWin, sortStatisticLose);\n  return React.createElement(\"div\", {\n    className: \"animated fadeIn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(Col, {\n    xs: \"12\",\n    lg: \"12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(CardHeader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fa fa-align-justify\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), \" Statistic Players\"), React.createElement(CardBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(Col, {\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    row: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(Col, {\n    xs: \"12\",\n    md: \"12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(Label, {\n    htmlFor: \"select\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"choose the player\")), React.createElement(Col, {\n    xs: \"12\",\n    md: \"4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(Input, {\n    type: \"select\",\n    value: name,\n    name: \"select\",\n    id: \"select\",\n    onChange: function onChange(e) {\n      return setName(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"Please choose\"), account.map(function (acc) {\n    return React.createElement(\"option\", {\n      value: acc.ingame,\n      key: acc.ingame,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, acc.ingame);\n  })))))), name !== '' && React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(Col, {\n    xs: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \" Matchs: \", totalMatchs()), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \" Win: \", myAccount.win), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \" Lose: \", myAccount.lose)), React.createElement(Col, {\n    xs: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"\\u0110\\u1ED3ng \\u0111\\u1ED9i ki\\u1EC7t xu\\u1EA5t: \", sortStatisticWin)), React.createElement(Col, {\n    xs: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \"\\u0110\\u1ED3ng \\u0111\\u1ED9i \\u0111\\u1ED9i \\u0111\\u1ED3ng:\")), name !== '' && Object.keys(renderStatistic()).map(function (s, index) {\n    return React.createElement(Row, {\n      key: s,\n      style: {\n        marginBottom: 15\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(Col, {\n      xs: \"12\",\n      md: \"3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, s), React.createElement(Col, {\n      xs: \"12\",\n      md: \"9\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(Progress, {\n      animated: true,\n      color: \"success\",\n      value: Object.values(renderStatistic())[index].win / totalMatchs() * 100,\n      style: {\n        height: 10,\n        marginBottom: 7\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, Object.values(renderStatistic())[index].win), React.createElement(Progress, {\n      animated: true,\n      color: \"danger\",\n      value: Object.values(renderStatistic())[index].lose / totalMatchs() * 100,\n      style: {\n        height: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, Object.values(renderStatistic())[index].lose)));\n  }))))));\n});","map":{"version":3,"sources":["C:/Users/Admin/Desktop/persol/persol-lqmb/src/components/Dashboard/components/W3.js"],"names":["React","useState","Card","CardBody","CardHeader","Col","Row","FormGroup","Label","Input","Progress","myAccount","JSON","parse","localStorage","getItem","account","statisticWLPlayers","find","e","username","ingame","name","setName","statisticChooseName","totalMatchs","length","player","filter","win","lose","renderStatistic","rs","w","l","i","sortStatisticWin","Object","values","reduce","acc","cur","index","sortStatisticLose","console","log","target","value","map","keys","s","marginBottom","height"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport { Card, CardBody, CardHeader, Col, Row, FormGroup, Label, Input, Progress } from 'reactstrap';\r\n\r\nlet myAccount = JSON.parse(localStorage.getItem('account') || '{}');\r\n\r\nexport default ({ account, statisticWLPlayers }) => {\r\n  myAccount = account.find(e => e.username === myAccount.username)\r\n  const [name, setName] = useState(myAccount.ingame);\r\n  const statisticChooseName = statisticWLPlayers[name]\r\n\r\n  const totalMatchs = () => {\r\n    if (!account.length || !name) return;\r\n    const player = [...account].filter(e => e.ingame === name)[0]\r\n    return player.win + player.lose\r\n  }\r\n  const renderStatistic = () => {\r\n    if (!name) return;\r\n    let rs = {}\r\n    const w = statisticChooseName.win\r\n    const l = statisticChooseName.lose\r\n    for (let i in w) {\r\n      rs = { ...rs, [i]: { win: w[i], lose: 0 } }\r\n    }\r\n    for (let i in l) {\r\n      rs = { ...rs, [i]: { win: 0, ...rs[i], lose: l[i] } }\r\n    }\r\n    return rs\r\n  }\r\n const sortStatisticWin = Object.values(renderStatistic()).reduce((acc, cur, index) => cur.win >= acc.w ? acc = { w: cur.win, i: index} : acc, { w: 0, i: 0})\r\n const sortStatisticLose = Object.values(renderStatistic()).reduce((acc, cur, index) => cur.lose >= acc.l ? acc = { l: cur.lose, i: index} : acc, { l: 0, i: 0})\r\n\r\n  console.log(sortStatisticWin, sortStatisticLose)\r\n  return <div className=\"animated fadeIn\">\r\n    <Row>\r\n      <Col xs=\"12\" lg=\"12\">\r\n        <Card>\r\n          <CardHeader>\r\n            <i className=\"fa fa-align-justify\"></i> Statistic Players\r\n          </CardHeader>\r\n          <CardBody>\r\n            <Row>\r\n              <Col xs={12}>\r\n                <FormGroup row>\r\n                  <Col xs=\"12\" md=\"12\">\r\n                    <Label htmlFor=\"select\">choose the player</Label>\r\n                  </Col>\r\n                  <Col xs=\"12\" md=\"4\">\r\n                    <Input type=\"select\" value={name} name=\"select\" id=\"select\" onChange={e => setName(e.target.value)}>\r\n                      <option value=\"0\">Please choose</option>\r\n                      {\r\n                        account.map(acc => {\r\n                          return <option value={acc.ingame} key={acc.ingame}>{acc.ingame}</option>\r\n                        })\r\n                      }\r\n                    </Input>\r\n                  </Col>\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n            \r\n            {\r\n              name !== '' && <Row>\r\n                <Col xs={4}>\r\n                 <p> Matchs: {totalMatchs()}</p>\r\n                 <p> Win: {myAccount.win}</p>\r\n                 <p> Lose: {myAccount.lose}</p>\r\n                </Col>\r\n                <Col xs={4}>\r\n                <p>Đồng đội kiệt xuất: {sortStatisticWin}</p>\r\n                </Col>\r\n                <Col xs={4}>\r\n                Đồng đội đội đồng: \r\n                </Col>\r\n              </Row>\r\n            }\r\n\r\n            {\r\n              name !== '' && Object.keys(renderStatistic()).map((s, index) => {\r\n                return <Row key={s} style={{ marginBottom: 15 }} >\r\n                  <Col xs=\"12\" md=\"3\">\r\n                    {s}\r\n                  </Col>\r\n                  <Col xs=\"12\" md=\"9\">\r\n                    <Progress animated color=\"success\" value={(Object.values(renderStatistic())[index].win / totalMatchs()) * 100} style={{ height: 10, marginBottom: 7 }} >{Object.values(renderStatistic())[index].win}</Progress>\r\n                    <Progress animated color=\"danger\" value={(Object.values(renderStatistic())[index].lose / totalMatchs()) * 100} style={{ height: 10 }}>{Object.values(renderStatistic())[index].lose}</Progress>\r\n                  </Col>\r\n                </Row>\r\n              })\r\n            }\r\n          </CardBody>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n  </div>\r\n}"]},"metadata":{},"sourceType":"module"}