{"ast":null,"code":"\"use strict\";\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nvar _possibleConstructorReturn = require(\"/Users/maidat/Desktop/team-lq/persol-lqmb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/Users/maidat/Desktop/team-lq/persol-lqmb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/Users/maidat/Desktop/team-lq/persol-lqmb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _classCallCheck = require(\"/Users/maidat/Desktop/team-lq/persol-lqmb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/maidat/Desktop/team-lq/persol-lqmb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar tls_1 = require(\"tls\");\n\nvar call_credentials_1 = require(\"./call-credentials\");\n\nvar tls_helpers_1 = require(\"./tls-helpers\"); // tslint:disable-next-line:no-any\n\n\nfunction verifyIsBufferOrNull(obj, friendlyName) {\n  if (obj && !(obj instanceof Buffer)) {\n    throw new TypeError(\"\".concat(friendlyName, \", if provided, must be a Buffer.\"));\n  }\n}\n\nfunction bufferOrNullEqual(buf1, buf2) {\n  if (buf1 === null && buf2 === null) {\n    return true;\n  } else {\n    return buf1 !== null && buf2 !== null && buf1.equals(buf2);\n  }\n}\n/**\n * A class that contains credentials for communicating over a channel, as well\n * as a set of per-call credentials, which are applied to every method call made\n * over a channel initialized with an instance of this class.\n */\n\n\nvar ChannelCredentials =\n/*#__PURE__*/\nfunction () {\n  function ChannelCredentials(callCredentials) {\n    _classCallCheck(this, ChannelCredentials);\n\n    this.callCredentials = callCredentials || call_credentials_1.CallCredentials.createEmpty();\n  }\n  /**\n   * Gets the set of per-call credentials associated with this instance.\n   */\n\n\n  _createClass(ChannelCredentials, [{\n    key: \"_getCallCredentials\",\n    value: function _getCallCredentials() {\n      return this.callCredentials;\n    }\n    /**\n     * Return a new ChannelCredentials instance with a given set of credentials.\n     * The resulting instance can be used to construct a Channel that communicates\n     * over TLS.\n     * @param rootCerts The root certificate data.\n     * @param privateKey The client certificate private key, if available.\n     * @param certChain The client certificate key chain, if available.\n     */\n\n  }], [{\n    key: \"createSsl\",\n    value: function createSsl(rootCerts, privateKey, certChain, verifyOptions) {\n      verifyIsBufferOrNull(rootCerts, 'Root certificate');\n      verifyIsBufferOrNull(privateKey, 'Private key');\n      verifyIsBufferOrNull(certChain, 'Certificate chain');\n\n      if (privateKey && !certChain) {\n        throw new Error('Private key must be given with accompanying certificate chain');\n      }\n\n      if (!privateKey && certChain) {\n        throw new Error('Certificate chain must be given with accompanying private key');\n      }\n\n      return new SecureChannelCredentialsImpl(rootCerts || tls_helpers_1.getDefaultRootsData(), privateKey || null, certChain || null, verifyOptions || {});\n    }\n    /**\n     * Return a new ChannelCredentials instance with no credentials.\n     */\n\n  }, {\n    key: \"createInsecure\",\n    value: function createInsecure() {\n      return new InsecureChannelCredentialsImpl();\n    }\n  }]);\n\n  return ChannelCredentials;\n}();\n\nexports.ChannelCredentials = ChannelCredentials;\n\nvar InsecureChannelCredentialsImpl =\n/*#__PURE__*/\nfunction (_ChannelCredentials) {\n  _inherits(InsecureChannelCredentialsImpl, _ChannelCredentials);\n\n  function InsecureChannelCredentialsImpl(callCredentials) {\n    _classCallCheck(this, InsecureChannelCredentialsImpl);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(InsecureChannelCredentialsImpl).call(this, callCredentials));\n  }\n\n  _createClass(InsecureChannelCredentialsImpl, [{\n    key: \"compose\",\n    value: function compose(callCredentials) {\n      throw new Error('Cannot compose insecure credentials');\n    }\n  }, {\n    key: \"_getConnectionOptions\",\n    value: function _getConnectionOptions() {\n      return null;\n    }\n  }, {\n    key: \"_isSecure\",\n    value: function _isSecure() {\n      return false;\n    }\n  }, {\n    key: \"_equals\",\n    value: function _equals(other) {\n      return other instanceof InsecureChannelCredentialsImpl;\n    }\n  }]);\n\n  return InsecureChannelCredentialsImpl;\n}(ChannelCredentials);\n\nvar SecureChannelCredentialsImpl =\n/*#__PURE__*/\nfunction (_ChannelCredentials2) {\n  _inherits(SecureChannelCredentialsImpl, _ChannelCredentials2);\n\n  function SecureChannelCredentialsImpl(rootCerts, privateKey, certChain, verifyOptions) {\n    var _this;\n\n    _classCallCheck(this, SecureChannelCredentialsImpl);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SecureChannelCredentialsImpl).call(this));\n    _this.rootCerts = rootCerts;\n    _this.privateKey = privateKey;\n    _this.certChain = certChain;\n    _this.verifyOptions = verifyOptions;\n    var secureContext = tls_1.createSecureContext({\n      ca: rootCerts || undefined,\n      key: privateKey || undefined,\n      cert: certChain || undefined,\n      ciphers: tls_helpers_1.CIPHER_SUITES\n    });\n    _this.connectionOptions = {\n      secureContext: secureContext\n    };\n\n    if (verifyOptions && verifyOptions.checkServerIdentity) {\n      _this.connectionOptions.checkServerIdentity = function (host, cert) {\n        return verifyOptions.checkServerIdentity(host, {\n          raw: cert.raw\n        });\n      };\n    }\n\n    return _this;\n  }\n\n  _createClass(SecureChannelCredentialsImpl, [{\n    key: \"compose\",\n    value: function compose(callCredentials) {\n      var combinedCallCredentials = this.callCredentials.compose(callCredentials);\n      return new ComposedChannelCredentialsImpl(this, combinedCallCredentials);\n    }\n  }, {\n    key: \"_getConnectionOptions\",\n    value: function _getConnectionOptions() {\n      return this.connectionOptions;\n    }\n  }, {\n    key: \"_isSecure\",\n    value: function _isSecure() {\n      return true;\n    }\n  }, {\n    key: \"_equals\",\n    value: function _equals(other) {\n      if (this === other) {\n        return true;\n      }\n\n      if (other instanceof SecureChannelCredentialsImpl) {\n        if (!bufferOrNullEqual(this.rootCerts, other.rootCerts)) {\n          return false;\n        }\n\n        if (!bufferOrNullEqual(this.privateKey, other.privateKey)) {\n          return false;\n        }\n\n        if (!bufferOrNullEqual(this.certChain, other.certChain)) {\n          return false;\n        }\n\n        return this.verifyOptions.checkServerIdentity === other.verifyOptions.checkServerIdentity;\n      } else {\n        return false;\n      }\n    }\n  }]);\n\n  return SecureChannelCredentialsImpl;\n}(ChannelCredentials);\n\nvar ComposedChannelCredentialsImpl =\n/*#__PURE__*/\nfunction (_ChannelCredentials3) {\n  _inherits(ComposedChannelCredentialsImpl, _ChannelCredentials3);\n\n  function ComposedChannelCredentialsImpl(channelCredentials, callCreds) {\n    var _this2;\n\n    _classCallCheck(this, ComposedChannelCredentialsImpl);\n\n    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(ComposedChannelCredentialsImpl).call(this, callCreds));\n    _this2.channelCredentials = channelCredentials;\n    return _this2;\n  }\n\n  _createClass(ComposedChannelCredentialsImpl, [{\n    key: \"compose\",\n    value: function compose(callCredentials) {\n      var combinedCallCredentials = this.callCredentials.compose(callCredentials);\n      return new ComposedChannelCredentialsImpl(this.channelCredentials, combinedCallCredentials);\n    }\n  }, {\n    key: \"_getConnectionOptions\",\n    value: function _getConnectionOptions() {\n      return this.channelCredentials._getConnectionOptions();\n    }\n  }, {\n    key: \"_isSecure\",\n    value: function _isSecure() {\n      return true;\n    }\n  }, {\n    key: \"_equals\",\n    value: function _equals(other) {\n      if (this === other) {\n        return true;\n      }\n\n      if (other instanceof ComposedChannelCredentialsImpl) {\n        return this.channelCredentials._equals(other.channelCredentials) && this.callCredentials._equals(other.callCredentials);\n      } else {\n        return false;\n      }\n    }\n  }]);\n\n  return ComposedChannelCredentialsImpl;\n}(ChannelCredentials);","map":null,"metadata":{},"sourceType":"script"}