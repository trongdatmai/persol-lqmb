{"ast":null,"code":"import _regeneratorRuntime from \"/Users/maidat/Desktop/team-lq/persol-lqmb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _objectSpread from \"/Users/maidat/Desktop/team-lq/persol-lqmb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"/Users/maidat/Desktop/team-lq/persol-lqmb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/Users/maidat/Desktop/team-lq/persol-lqmb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/maidat/Desktop/team-lq/persol-lqmb/src/components/Random/OldMatch.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Card, CardBody, CardHeader, Col, Row, ListGroupItem, ListGroup, FormGroup, Label, Input, Button } from \"reactstrap\";\nimport moment from \"moment\";\nimport firebase from \"./../../config\";\nimport { useHistory } from \"react-router-dom\";\n\nvar OldMatch = function OldMatch(_ref) {\n  var oldMatch = _ref.oldMatch,\n      changeStatusProgress = _ref.changeStatusProgress,\n      reset = _ref.reset;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      matchs = _useState2[0],\n      setMatchs = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      err = _useState4[0],\n      setErr = _useState4[1];\n\n  var ref = firebase.database();\n  var history = useHistory();\n  useEffect(function () {\n    var tmp = false;\n\n    for (var i = 0; i < matchs.length; i++) {\n      for (var j in matchs[i]) {\n        if (matchs[i][j] === \"\") {\n          tmp = true;\n          break;\n        }\n      }\n\n      if (tmp) break;\n    }\n\n    !!matchs.length ? setErr(tmp) : setErr(true);\n  }, [matchs]);\n\n  var handleRenderMatch = function handleRenderMatch(_ref2) {\n    var value = _ref2.target.value;\n    var statisticMatch = [];\n\n    for (var i = 0; i < value; i++) {\n      statisticMatch = [].concat(_toConsumableArray(statisticMatch), [{\n        mvpWin: \"\",\n        mvpLose: \"\",\n        blueKill: \"\",\n        redKill: \"\",\n        win: \"\"\n      }]);\n    }\n\n    setMatchs(statisticMatch);\n  };\n\n  var renderTeamPlayer = function renderTeamPlayer(nameTeam) {\n    if (nameTeam === \"blueTeam\") {\n      return {\n        win: oldMatch.blueTeam,\n        lose: oldMatch.redTeam\n      };\n    }\n\n    if (nameTeam === \"redTeam\") {\n      return {\n        win: oldMatch.redTeam,\n        lose: oldMatch.blueTeam\n      };\n    }\n  };\n\n  var handleTeamWinStatics = function handleTeamWinStatics(value, match) {\n    setMatchs(function (prev) {\n      var newMatch = prev;\n      newMatch[match] = _objectSpread({}, newMatch[match], {}, value);\n      return JSON.parse(JSON.stringify(newMatch));\n    });\n  };\n\n  var handleSaveHistory = function handleSaveHistory() {\n    return _regeneratorRuntime.async(function handleSaveHistory$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            matchs.map(function (match) {\n              // ref.ref(\"historyMatch\").push({\n              //   ...match,\n              //   blueTeam: oldMatch.blueTeam,\n              //   redTeam: oldMatch.redTeam,\n              //   dateMatch: oldMatch.dateMatch,\n              //   authorCreate: JSON.parse(localStorage.getItem(\"account\")).username,\n              //   authorUpdate: \"\"\n              // });\n              var teamWin = oldMatch[match.win].map(function (i) {\n                return i.split(\" - \")[0];\n              });\n              var teamLose = oldMatch[match.win === \"blueTeam\" ? \"redTeam\" : \"blueaTeam\"].map(function (i) {\n                return i.split(\" - \")[0];\n              });\n              ref.ref(\"users\").once(\"value\", function (snap) {\n                // if (snap.val() !== null) {\n                //   console.log(snap.val())\n                // }\n                var tmp = JSON.parse(JSON.stringify(snap.val()));\n                Object.values(snap.val()).forEach(function (i, index) {\n                  console.log(i); // let j = snap.val()[i];\n\n                  if (teamWin.includes(i.ingame)) {\n                    i = _objectSpread({}, i, {\n                      win: parseInt(i.win) + 1\n                    });\n                  }\n\n                  if (teamLose.includes(i.ingame)) {\n                    i = _objectSpread({}, i, {\n                      lose: parseInt(i.lose) + 1\n                    });\n                  }\n\n                  var key = Object.keys(snap.val())[index];\n                  tmp[key] = JSON.parse(JSON.stringify(i)); // console.log(snap.val()[key], key)\n                });\n                console.log(tmp);\n              });\n            }); // ref\n            //   .ref(\"historyRandom\")\n            //   .orderByValue()\n            //   .limitToLast(1)\n            //   .on(\"value\", snap => {\n            //     changeStatusProgress(false);\n            //     if (snap.val() !== null) {\n            //       ref\n            //         .ref()\n            //         .child(\"/historyRandom/\" + Object.keys(snap.val())[0])\n            //         .update({\n            //           ...oldMatch,\n            //           complete: true\n            //         });\n            //     }\n            //   });\n            // window.location.reload();\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    });\n  };\n\n  return React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, React.createElement(Col, {\n    xs: \"12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, React.createElement(CardHeader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fa fa-align-justify\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }), \" Random match results on\", \" \", oldMatch.dateMatch), React.createElement(CardBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, React.createElement(Col, {\n    xs: 12,\n    sm: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, React.createElement(CardHeader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, \"Blue Team\")), React.createElement(CardBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, React.createElement(ListGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, oldMatch.blueTeam.map(function (i) {\n    return React.createElement(ListGroupItem, {\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, \" \", i, \" \");\n  }))))), React.createElement(Col, {\n    xs: 12,\n    sm: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, React.createElement(CardHeader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, \"Red Team\")), React.createElement(CardBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, React.createElement(ListGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, oldMatch.redTeam.map(function (i) {\n    return React.createElement(ListGroupItem, {\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, \" \", i, \" \");\n  }))))), React.createElement(Col, {\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }, React.createElement(Label, {\n    htmlFor: \"NOM\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }, \"Number of match:\"), React.createElement(Input, {\n    type: \"text\",\n    id: \"NOM\",\n    placeholder: \"0\",\n    onChange: handleRenderMatch,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }))), React.createElement(Col, {\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182\n    },\n    __self: this\n  }, !!matchs.length && matchs.map(function (m, index) {\n    return React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, React.createElement(CardHeader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, \"Match \", index + 1, \":\")), React.createElement(CardBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      row: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: \"3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, React.createElement(Label, {\n      htmlFor: \"select\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, \"Team win:\")), React.createElement(Col, {\n      xs: \"12\",\n      md: \"9\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, React.createElement(Input, {\n      type: \"select\",\n      name: \"select\",\n      id: \"select\",\n      onChange: function onChange(_ref3) {\n        var value = _ref3.target.value;\n        return handleTeamWinStatics({\n          win: value\n        }, index);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, \"Please select\"), React.createElement(\"option\", {\n      value: \"blueTeam\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, \"Blue Team\"), React.createElement(\"option\", {\n      value: \"redTeam\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, \"Red Team\")))), !!m.win && React.createElement(React.Fragment, null, React.createElement(FormGroup, {\n      row: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: \"3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, React.createElement(Label, {\n      htmlFor: \"select\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, \"MVP team win:\")), React.createElement(Col, {\n      xs: \"12\",\n      md: \"9\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, React.createElement(Input, {\n      type: \"select\",\n      name: \"select\",\n      id: \"select\",\n      onChange: function onChange(_ref4) {\n        var value = _ref4.target.value;\n        return handleTeamWinStatics({\n          mvpWin: value\n        }, index);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, \"Please select\"), renderTeamPlayer(m.win).win.map(function (i) {\n      return React.createElement(\"option\", {\n        value: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }, i);\n    })))), React.createElement(FormGroup, {\n      row: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: \"3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }, React.createElement(Label, {\n      htmlFor: \"select\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }, \"MVP team lose:\")), React.createElement(Col, {\n      xs: \"12\",\n      md: \"9\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }, React.createElement(Input, {\n      type: \"select\",\n      name: \"select\",\n      id: \"select\",\n      onChange: function onChange(_ref5) {\n        var value = _ref5.target.value;\n        return handleTeamWinStatics({\n          mvpLose: value\n        }, index);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }, \"Please select\"), renderTeamPlayer(m.win).lose.map(function (i) {\n      return React.createElement(\"option\", {\n        value: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      }, i);\n    })))), React.createElement(FormGroup, {\n      row: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: \"3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    }, React.createElement(Label, {\n      htmlFor: \"select\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }, \"Blue kill:\")), React.createElement(Col, {\n      xs: \"12\",\n      md: \"9\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }, React.createElement(Input, {\n      type: \"text\",\n      name: \"select\",\n      id: \"select\",\n      placeholder: \"0\",\n      onChange: function onChange(_ref6) {\n        var value = _ref6.target.value;\n        return handleTeamWinStatics({\n          blueKill: value\n        }, index);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }))), React.createElement(FormGroup, {\n      row: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: \"3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277\n      },\n      __self: this\n    }, React.createElement(Label, {\n      htmlFor: \"select\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    }, \"Red kill:\")), React.createElement(Col, {\n      xs: \"12\",\n      md: \"9\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280\n      },\n      __self: this\n    }, React.createElement(Input, {\n      type: \"text\",\n      name: \"select\",\n      id: \"select\",\n      placeholder: \"0\",\n      onChange: function onChange(_ref7) {\n        var value = _ref7.target.value;\n        return handleTeamWinStatics({\n          redKill: value\n        }, index);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281\n      },\n      __self: this\n    }))))));\n  }))), React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302\n    },\n    __self: this\n  }, React.createElement(Col, {\n    col: \"6\",\n    sm: \"4\",\n    md: \"3\",\n    xl: \"2\",\n    className: \"mb-3 mb-xl-0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303\n    },\n    __self: this\n  }, React.createElement(Button, {\n    block: true,\n    color: \"success\",\n    onClick: handleSaveHistory,\n    disabled: err,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304\n    },\n    __self: this\n  }, \"Save\")))))));\n};\n\nexport default OldMatch;","map":{"version":3,"sources":["/Users/maidat/Desktop/team-lq/persol-lqmb/src/components/Random/OldMatch.js"],"names":["React","useState","useEffect","Card","CardBody","CardHeader","Col","Row","ListGroupItem","ListGroup","FormGroup","Label","Input","Button","moment","firebase","useHistory","OldMatch","oldMatch","changeStatusProgress","reset","matchs","setMatchs","err","setErr","ref","database","history","tmp","i","length","j","handleRenderMatch","value","target","statisticMatch","mvpWin","mvpLose","blueKill","redKill","win","renderTeamPlayer","nameTeam","blueTeam","lose","redTeam","handleTeamWinStatics","match","prev","newMatch","JSON","parse","stringify","handleSaveHistory","map","teamWin","split","teamLose","once","snap","val","Object","values","forEach","index","console","log","includes","ingame","parseInt","key","keys","dateMatch","m"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  Card,\n  CardBody,\n  CardHeader,\n  Col,\n  Row,\n  ListGroupItem,\n  ListGroup,\n  FormGroup,\n  Label,\n  Input,\n  Button\n} from \"reactstrap\";\nimport moment from \"moment\";\nimport firebase from \"./../../config\";\nimport { useHistory } from \"react-router-dom\";\n\nconst OldMatch = ({ oldMatch, changeStatusProgress, reset }) => {\n  const [matchs, setMatchs] = useState([]);\n  const [err, setErr] = useState(true);\n  const ref = firebase.database();\n  const history = useHistory();\n\n  useEffect(() => {\n    let tmp = false;\n    for (let i = 0; i < matchs.length; i++) {\n      for (let j in matchs[i]) {\n        if (matchs[i][j] === \"\") {\n          tmp = true;\n          break;\n        }\n      }\n      if (tmp) break;\n    }\n    !!matchs.length ? setErr(tmp) : setErr(true);\n  }, [matchs]);\n\n  const handleRenderMatch = ({ target: { value } }) => {\n    let statisticMatch = [];\n    for (let i = 0; i < value; i++) {\n      statisticMatch = [\n        ...statisticMatch,\n        {\n          mvpWin: \"\",\n          mvpLose: \"\",\n          blueKill: \"\",\n          redKill: \"\",\n          win: \"\"\n        }\n      ];\n    }\n    setMatchs(statisticMatch);\n  };\n\n  const renderTeamPlayer = nameTeam => {\n    if (nameTeam === \"blueTeam\") {\n      return { win: oldMatch.blueTeam, lose: oldMatch.redTeam };\n    }\n    if (nameTeam === \"redTeam\") {\n      return { win: oldMatch.redTeam, lose: oldMatch.blueTeam };\n    }\n  };\n\n  const handleTeamWinStatics = (value, match) => {\n    setMatchs(prev => {\n      let newMatch = prev;\n      newMatch[match] = { ...newMatch[match], ...value };\n      return JSON.parse(JSON.stringify(newMatch));\n    });\n  };\n\n  const handleSaveHistory = async () => {\n    matchs.map(match => {\n      // ref.ref(\"historyMatch\").push({\n      //   ...match,\n      //   blueTeam: oldMatch.blueTeam,\n      //   redTeam: oldMatch.redTeam,\n      //   dateMatch: oldMatch.dateMatch,\n      //   authorCreate: JSON.parse(localStorage.getItem(\"account\")).username,\n      //   authorUpdate: \"\"\n      // });\n\n      const teamWin = oldMatch[match.win].map(i => i.split(\" - \")[0]);\n      const teamLose = oldMatch[\n        match.win === \"blueTeam\" ? \"redTeam\" : \"blueaTeam\"\n      ].map(i => i.split(\" - \")[0]);\n\n      ref\n        .ref(\"users\")\n        .once(\"value\", snap => {\n          // if (snap.val() !== null) {\n          //   console.log(snap.val())\n          // }\n          const tmp = JSON.parse(JSON.stringify(snap.val()))\n          Object.values(snap.val()).forEach((i, index) => {\n            console.log(i)\n            // let j = snap.val()[i];\n            if(teamWin.includes(i.ingame)) {\n              i = {...i, win: parseInt(i.win) + 1}\n            }\n            if(teamLose.includes(i.ingame)) {\n              i = {...i, lose: parseInt(i.lose) + 1}\n            }\n            const key = Object.keys(snap.val())[index];\n            tmp[key] = JSON.parse(JSON.stringify(i))\n            // console.log(snap.val()[key], key)\n          });\n          console.log(tmp)\n        });\n    });\n\n    // ref\n    //   .ref(\"historyRandom\")\n    //   .orderByValue()\n    //   .limitToLast(1)\n    //   .on(\"value\", snap => {\n    //     changeStatusProgress(false);\n    //     if (snap.val() !== null) {\n    //       ref\n    //         .ref()\n    //         .child(\"/historyRandom/\" + Object.keys(snap.val())[0])\n    //         .update({\n    //           ...oldMatch,\n    //           complete: true\n    //         });\n    //     }\n    //   });\n\n    // window.location.reload();\n  };\n\n  return (\n    <Row>\n      <Col xs=\"12\">\n        <Card>\n          <CardHeader>\n            <i className=\"fa fa-align-justify\"></i> Random match results on{\" \"}\n            {oldMatch.dateMatch}\n          </CardHeader>\n          <CardBody>\n            <Row>\n              <Col xs={12} sm={6}>\n                <Card>\n                  <CardHeader>\n                    <strong>Blue Team</strong>\n                  </CardHeader>\n                  <CardBody>\n                    <ListGroup>\n                      {oldMatch.blueTeam.map(i => {\n                        return <ListGroupItem key={i}> {i} </ListGroupItem>;\n                      })}\n                    </ListGroup>\n                  </CardBody>\n                </Card>\n              </Col>\n              <Col xs={12} sm={6}>\n                <Card>\n                  <CardHeader>\n                    <strong>Red Team</strong>\n                  </CardHeader>\n                  <CardBody>\n                    <ListGroup>\n                      {oldMatch.redTeam.map(i => {\n                        return <ListGroupItem key={i}> {i} </ListGroupItem>;\n                      })}\n                    </ListGroup>\n                  </CardBody>\n                </Card>\n              </Col>\n              <Col xs={12}>\n                <FormGroup>\n                  <Label htmlFor=\"NOM\">Number of match:</Label>\n                  <Input\n                    type=\"text\"\n                    id=\"NOM\"\n                    placeholder=\"0\"\n                    onChange={handleRenderMatch}\n                  />\n                </FormGroup>\n              </Col>\n              <Col xs={12}>\n                {!!matchs.length &&\n                  matchs.map((m, index) => (\n                    <Card>\n                      <CardHeader>\n                        <strong>Match {index + 1}:</strong>\n                      </CardHeader>\n                      <CardBody>\n                        <FormGroup row>\n                          <Col md=\"3\">\n                            <Label htmlFor=\"select\">Team win:</Label>\n                          </Col>\n                          <Col xs=\"12\" md=\"9\">\n                            <Input\n                              type=\"select\"\n                              name=\"select\"\n                              id=\"select\"\n                              onChange={({ target: { value } }) =>\n                                handleTeamWinStatics({ win: value }, index)\n                              }\n                            >\n                              <option value=\"\">Please select</option>\n                              <option value=\"blueTeam\">Blue Team</option>\n                              <option value=\"redTeam\">Red Team</option>\n                            </Input>\n                          </Col>\n                        </FormGroup>\n                        {!!m.win && (\n                          <>\n                            <FormGroup row>\n                              <Col md=\"3\">\n                                <Label htmlFor=\"select\">MVP team win:</Label>\n                              </Col>\n                              <Col xs=\"12\" md=\"9\">\n                                <Input\n                                  type=\"select\"\n                                  name=\"select\"\n                                  id=\"select\"\n                                  onChange={({ target: { value } }) =>\n                                    handleTeamWinStatics(\n                                      { mvpWin: value },\n                                      index\n                                    )\n                                  }\n                                >\n                                  <option value=\"\">Please select</option>\n                                  {renderTeamPlayer(m.win).win.map(i => (\n                                    <option value={i}>{i}</option>\n                                  ))}\n                                </Input>\n                              </Col>\n                            </FormGroup>\n                            <FormGroup row>\n                              <Col md=\"3\">\n                                <Label htmlFor=\"select\">MVP team lose:</Label>\n                              </Col>\n                              <Col xs=\"12\" md=\"9\">\n                                <Input\n                                  type=\"select\"\n                                  name=\"select\"\n                                  id=\"select\"\n                                  onChange={({ target: { value } }) =>\n                                    handleTeamWinStatics(\n                                      { mvpLose: value },\n                                      index\n                                    )\n                                  }\n                                >\n                                  <option value=\"\">Please select</option>\n                                  {renderTeamPlayer(m.win).lose.map(i => (\n                                    <option value={i}>{i}</option>\n                                  ))}\n                                </Input>\n                              </Col>\n                            </FormGroup>\n                            <FormGroup row>\n                              <Col md=\"3\">\n                                <Label htmlFor=\"select\">Blue kill:</Label>\n                              </Col>\n                              <Col xs=\"12\" md=\"9\">\n                                <Input\n                                  type=\"text\"\n                                  name=\"select\"\n                                  id=\"select\"\n                                  placeholder=\"0\"\n                                  onChange={({ target: { value } }) =>\n                                    handleTeamWinStatics(\n                                      { blueKill: value },\n                                      index\n                                    )\n                                  }\n                                />\n                              </Col>\n                            </FormGroup>\n                            <FormGroup row>\n                              <Col md=\"3\">\n                                <Label htmlFor=\"select\">Red kill:</Label>\n                              </Col>\n                              <Col xs=\"12\" md=\"9\">\n                                <Input\n                                  type=\"text\"\n                                  name=\"select\"\n                                  id=\"select\"\n                                  placeholder=\"0\"\n                                  onChange={({ target: { value } }) =>\n                                    handleTeamWinStatics(\n                                      { redKill: value },\n                                      index\n                                    )\n                                  }\n                                />\n                              </Col>\n                            </FormGroup>\n                          </>\n                        )}\n                      </CardBody>\n                    </Card>\n                  ))}\n              </Col>\n            </Row>\n            <Row>\n              <Col col=\"6\" sm=\"4\" md=\"3\" xl=\"2\" className=\"mb-3 mb-xl-0\">\n                <Button\n                  block\n                  color=\"success\"\n                  onClick={handleSaveHistory}\n                  disabled={err}\n                >\n                  Save\n                </Button>\n              </Col>\n            </Row>\n          </CardBody>\n        </Card>\n      </Col>\n    </Row>\n  );\n};\n\nexport default OldMatch;\n"]},"metadata":{},"sourceType":"module"}