{"ast":null,"code":"\"use strict\";\n/*\n * Copyright 2019, Google LLC\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nvar _classCallCheck = require(\"/Users/maidat/Desktop/team-lq/persol-lqmb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/maidat/Desktop/team-lq/persol-lqmb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar normalApiCaller_1 = require(\"../normalCalls/normalApiCaller\");\n\nvar bundleApiCaller_1 = require(\"./bundleApiCaller\");\n\nvar bundleExecutor_1 = require(\"./bundleExecutor\");\n/**\n * A descriptor for calls that can be bundled into one call.\n */\n\n\nvar BundleDescriptor =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Describes the structure of bundled call.\n   *\n   * requestDiscriminatorFields may include '.' as a separator, which is used to\n   * indicate object traversal. This allows fields in nested objects to be used\n   * to determine what request to bundle.\n   *\n   * @property {String} bundledField\n   * @property {String} requestDiscriminatorFields\n   * @property {String} subresponseField\n   * @property {Function} byteLengthFunction\n   *\n   * @param {String} bundledField - the repeated field in the request message\n   *   that will have its elements aggregated by bundling.\n   * @param {String} requestDiscriminatorFields - a list of fields in the\n   *   target request message class that are used to detemrine which request\n   *   messages should be bundled together.\n   * @param {String} subresponseField - an optional field, when present it\n   *   indicates the field in the response message that should be used to\n   *   demultiplex the response into multiple response messages.\n   * @param {Function} byteLengthFunction - a function to obtain the byte\n   *   length to be consumed for the bundled field messages. Because Node.JS\n   *   protobuf.js/gRPC uses builtin Objects for the user-visible data and\n   *   internally they are encoded/decoded in protobuf manner, this function\n   *   is actually necessary to calculate the byte length.\n   * @constructor\n   */\n  function BundleDescriptor(bundledField, requestDiscriminatorFields, subresponseField, byteLengthFunction) {\n    _classCallCheck(this, BundleDescriptor);\n\n    if (!byteLengthFunction && typeof subresponseField === 'function') {\n      byteLengthFunction = subresponseField;\n      subresponseField = null;\n    }\n\n    this.bundledField = bundledField;\n    this.requestDiscriminatorFields = requestDiscriminatorFields;\n    this.subresponseField = subresponseField;\n    this.byteLengthFunction = byteLengthFunction;\n  }\n\n  _createClass(BundleDescriptor, [{\n    key: \"getApiCaller\",\n    value: function getApiCaller(settings) {\n      if (settings.isBundling === false) {\n        return new normalApiCaller_1.NormalApiCaller();\n      }\n\n      return new bundleApiCaller_1.BundleApiCaller(new bundleExecutor_1.BundleExecutor(settings.bundleOptions, this));\n    }\n  }]);\n\n  return BundleDescriptor;\n}();\n\nexports.BundleDescriptor = BundleDescriptor;","map":null,"metadata":{},"sourceType":"script"}