{"ast":null,"code":"\"use strict\";\n/*!\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar http_1 = require(\"http\");\n\nvar https_1 = require(\"https\");\n\nvar pool = new Map();\n/**\n * Returns a custom request Agent if one is found, otherwise returns undefined\n * which will result in the global http(s) Agent being used.\n * @private\n * @param {string} uri The request uri\n * @param {object} reqOpts The request options\n * @returns {Agent|undefined}\n */\n\nfunction getAgent(uri, reqOpts) {\n  var isHttp = uri.startsWith('http://');\n  var proxy = reqOpts.proxy || process.env.HTTP_PROXY || process.env.http_proxy || process.env.HTTPS_PROXY || process.env.https_proxy;\n\n  if (proxy) {\n    // tslint:disable-next-line variable-name\n    var Agent = isHttp ? require('http-proxy-agent') : require('https-proxy-agent');\n    return new Agent(proxy);\n  }\n\n  var key = isHttp ? 'http' : 'https';\n\n  if (reqOpts.forever) {\n    key += ':forever';\n\n    if (!pool.has(key)) {\n      // tslint:disable-next-line variable-name\n      var Agent = isHttp ? http_1.Agent : https_1.Agent;\n      pool.set(key, new Agent({\n        keepAlive: true\n      }));\n    }\n  }\n\n  return pool.get(key);\n}\n\nexports.getAgent = getAgent;","map":null,"metadata":{},"sourceType":"script"}