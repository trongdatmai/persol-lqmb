{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\Admin\\\\Desktop\\\\persol\\\\persol-lqmb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"C:\\\\Users\\\\Admin\\\\Desktop\\\\persol\\\\persol-lqmb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"C:\\\\Users\\\\Admin\\\\Desktop\\\\persol\\\\persol-lqmb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"C:\\\\Users\\\\Admin\\\\Desktop\\\\persol\\\\persol-lqmb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\persol\\\\persol-lqmb\\\\src\\\\components\\\\Random\\\\index.js\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport firebase from \"./../../config\";\nimport { Card, CardBody, CardHeader, Col, Row, Table, CardImg, Badge, Button } from \"reactstrap\";\nimport { AppSwitch } from \"@coreui/react\";\nimport ChartTeams from \"./ChartTeams\";\nimport TableTeams from \"./TableTeams\";\nimport OldMatch from \"./OldMatch\";\nimport moment from \"moment\";\n\nvar scrollToRef = function scrollToRef(ref) {\n  return ref.current.scrollIntoView({\n    behavior: \"smooth\",\n    block: \"start\"\n  });\n};\n\nvar Random = function Random(_ref) {\n  var changeStatusProgress = _ref.changeStatusProgress;\n  var myRef = useRef(null);\n  var ref = firebase.database();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      users = _useState2[0],\n      setUsers = _useState2[1];\n\n  var _useState3 = useState({}),\n      _useState4 = _slicedToArray(_useState3, 2),\n      teams = _useState4[0],\n      setTeams = _useState4[1];\n\n  var _useState5 = useState({}),\n      _useState6 = _slicedToArray(_useState5, 2),\n      oldMatch = _useState6[0],\n      setOldMatch = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      randomPlayerNotInclude = _useState8[0],\n      setRandomPlayerNotInclude = _useState8[1];\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      lastRandomNotPlay = _useState10[0],\n      setLastRandomNotPlay = _useState10[1];\n\n  var handleRandomPlayer = function handleRandomPlayer() {\n    setUsers(function (prev) {\n      return prev.map(function (i) {\n        return _objectSpread({}, i, {\n          checked: false\n        });\n      });\n    });\n\n    var arrayUsers = _toConsumableArray(lastRandomNotPlay.map(function (i) {\n      return i.ingame;\n    }));\n\n    var tempUsers = _toConsumableArray(users).filter(function (i) {\n      return !arrayUsers.includes(i.ingame);\n    });\n\n    var length = arrayUsers.length;\n\n    for (var i = 0; i < 10 - length; i++) {\n      var index = ~~(Math.random() * tempUsers.length);\n      arrayUsers = [].concat(_toConsumableArray(arrayUsers), [tempUsers[index] && tempUsers[index].ingame]);\n      tempUsers.splice(index, 1);\n    }\n\n    setUsers(function (prev) {\n      return prev.map(function (i) {\n        return arrayUsers.includes(i.ingame) ? _objectSpread({}, i, {\n          checked: true\n        }) : i;\n      });\n    });\n    setTeams({});\n    setRandomPlayerNotInclude(tempUsers);\n  };\n\n  useEffect(function () {\n    changeStatusProgress(true);\n    ref.ref(\"users\").orderByValue().on(\"value\", function (snap) {\n      changeStatusProgress(false);\n      setUsers(Object.values(snap.val()).map(function (user) {\n        return _objectSpread({}, user, {\n          checked: false\n        });\n      }));\n    });\n    ref.ref(\"historyRandom\").orderByValue().limitToLast(1).on(\"value\", function (snap) {\n      changeStatusProgress(false);\n\n      if (snap.val() !== null && !Object.values(snap.val())[0].complete) {\n        setOldMatch(Object.values(snap.val())[0]);\n      }\n    });\n    ref.ref(\"historyRandomNotPlay\").orderByValue().limitToLast(1).on(\"value\", function (snap) {\n      if (snap.val()) {\n        setLastRandomNotPlay(Object.values(snap.val())[0]);\n      }\n    });\n  }, []);\n\n  var statisticPlayer = function statisticPlayer(player) {\n    return users.find(function (user) {\n      return user.ingame === player;\n    });\n  };\n\n  useEffect(function () {\n    scrollToRef(myRef);\n  }, [teams]);\n\n  var lastInfoTeam = function lastInfoTeam() {\n    var _ref2;\n\n    var t1 = teams[0] && teams[0].map(function (i) {\n      var player = i.split(\" - \")[0];\n      var addStatistic = i + \" - \" + statisticPlayer(player).win + \" - \" + statisticPlayer(player).lose + \" - \" + statisticPlayer(player).avatar;\n      return addStatistic;\n    });\n    var t2 = teams[1] && teams[1].map(function (i) {\n      var player = i.split(\" - \")[0];\n      var addStatistic = i + \" - \" + statisticPlayer(player).win + \" - \" + statisticPlayer(player).lose + \" -  \" + statisticPlayer(player).avatar;\n      return addStatistic;\n    });\n    return _ref2 = {}, _defineProperty(_ref2, 0, t1), _defineProperty(_ref2, 1, t2), _ref2;\n  };\n\n  var handleSplitTeam = function handleSplitTeam() {\n    var teams = users.filter(function (i) {\n      return i.checked;\n    });\n    var tmpTeams = [];\n\n    for (var i = 0; i < 10; i++) {\n      var randomFollowLength = ~~(Math.random() * teams.length);\n      tmpTeams = [].concat(_toConsumableArray(tmpTeams), [teams[randomFollowLength]]);\n      teams.splice(randomFollowLength, 1);\n    }\n\n    teams = tmpTeams;\n    var names = teams.map(function (i) {\n      return i.ingame;\n    });\n    var details = teams.reduce(function (acc, cur) {\n      return _objectSpread({}, acc, _defineProperty({}, cur.ingame, cur.role));\n    }, {});\n\n    var random = function random() {\n      return ~~(Math.random() * 5);\n    };\n\n    var isFull = function isFull(team) {\n      return team.length === 5;\n    };\n\n    var renderLane = function renderLane(player, team) {\n      try {\n        var r = random();\n        var rLane = details[player][r];\n\n        if (!rLane || team.some(function (i) {\n          return i.includes(rLane);\n        })) {\n          return renderLane(player, team);\n        }\n\n        return \"\".concat(player, \" - \").concat(rLane, \" - \").concat(5 - r);\n      } catch (err) {\n        return handleSplitTeam();\n      }\n    };\n\n    var splitTeam = names.reduce(function (acc, cur) {\n      if (isFull(acc[0]) || isFull(acc[1])) {\n        isFull(acc[0]) ? acc[1].push(renderLane(cur, acc[1])) : acc[0].push(renderLane(cur, acc[1]));\n      } else {\n        var r = random() % 2;\n        acc[r].push(renderLane(cur, acc[r]));\n      }\n\n      return acc;\n    }, {\n      \"0\": [],\n      \"1\": []\n    });\n\n    if (splitTeam[0].filter(Boolean).length === 5 && splitTeam[1].filter(Boolean).length === 5) {\n      var point1 = splitTeam[0].reduce(function (acc, cur) {\n        var split = cur.split(' - ');\n        var name = split[0];\n        var pLane = split[2];\n        var u = users.find(function (u) {\n          return u.ingame === name;\n        });\n        acc += u.coefficient * pLane; // * ~~(u.win/(u.win +u.lose) * 100)\n\n        return acc;\n      }, 0);\n      var point2 = splitTeam[1].reduce(function (acc, cur) {\n        var split = cur.split(' - ');\n        var name = split[0];\n        var pLane = split[2];\n        var u = users.find(function (u) {\n          return u.ingame === name;\n        });\n        acc += u.coefficient * pLane; // * ~~(u.win/(u.win +u.lose) * 100)\n\n        return acc;\n      }, 0);\n\n      if (Math.abs(point1 - point2) < 1) {\n        console.log(Math.abs(point1 - point2));\n        console.log(splitTeam);\n        setTeams(splitTeam);\n      } else {\n        return handleSplitTeam();\n      }\n    }\n  };\n\n  var renderRole = function renderRole(r) {\n    switch (r) {\n      case \"top\":\n        return React.createElement(Badge, {\n          style: {\n            background: \"#0099FF\",\n            marginRight: 10,\n            color: \"white\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 204\n          },\n          __self: this\n        }, r);\n\n      case \"jungle\":\n        return React.createElement(Badge, {\n          style: {\n            background: \"#3366CC\",\n            marginRight: 10,\n            color: \"white\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 212\n          },\n          __self: this\n        }, r);\n\n      case \"mid\":\n        return React.createElement(Badge, {\n          style: {\n            background: \"#FF9900\",\n            marginRight: 10,\n            color: \"white\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 220\n          },\n          __self: this\n        }, r);\n\n      case \"ad\":\n        return React.createElement(Badge, {\n          style: {\n            background: \"#f25e5e\",\n            marginRight: 10,\n            color: \"white\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 228\n          },\n          __self: this\n        }, r);\n\n      case \"support\":\n        return React.createElement(Badge, {\n          style: {\n            background: \"#f2a766\",\n            marginRight: 10,\n            color: \"white\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 236\n          },\n          __self: this\n        }, r);\n\n      default:\n        return r;\n    }\n  };\n\n  var renderWinRate = function renderWinRate(r) {\n    if (r <= 25) {\n      return React.createElement(Badge, {\n        style: {\n          background: \"#f25e5e\",\n          marginRight: 10,\n          color: \"white\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }, r, React.createElement(\"small\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253\n        },\n        __self: this\n      }, \"%\"));\n    } else if (r <= 50) {\n      return React.createElement(Badge, {\n        color: \"warning\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258\n        },\n        __self: this\n      }, r, React.createElement(\"small\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      }, \"%\"));\n    } else if (r <= 75) {\n      return React.createElement(Badge, {\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        },\n        __self: this\n      }, r, React.createElement(\"small\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267\n        },\n        __self: this\n      }, \"%\"));\n    } else if (r <= 100) {\n      return React.createElement(Badge, {\n        color: \"success\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272\n        },\n        __self: this\n      }, r, React.createElement(\"small\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274\n        },\n        __self: this\n      }, \"%\"));\n    }\n  };\n\n  var renderUser = function renderUser() {\n    return users.map(function (user, index) {\n      return React.createElement(\"tr\", {\n        key: user.username,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284\n        },\n        __self: this\n      }, React.createElement(Badge, {\n        style: {\n          background: \"#660099\",\n          color: \"white\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285\n        },\n        __self: this\n      }, index + 1)), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289\n        },\n        __self: this\n      }, user.avatar && React.createElement(CardImg, {\n        style: {\n          width: \"30px\"\n        },\n        src: user.avatar,\n        alt: \"avatar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291\n        },\n        __self: this\n      })), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298\n        },\n        __self: this\n      }, React.createElement(Badge, {\n        style: {\n          background: \"#660099\",\n          color: \"white\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299\n        },\n        __self: this\n      }, user.ingame)), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303\n        },\n        __self: this\n      }, user.role && user.role.map(function (r) {\n        return React.createElement(\"span\", {\n          key: user.username + r,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 306\n          },\n          __self: this\n        }, renderRole(r));\n      })), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309\n        },\n        __self: this\n      }, React.createElement(Badge, {\n        color: \"success\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310\n        },\n        __self: this\n      }, user.win)), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312\n        },\n        __self: this\n      }, React.createElement(Badge, {\n        color: \"danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313\n        },\n        __self: this\n      }, user.lose)), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315\n        },\n        __self: this\n      }, renderWinRate(~~(user.win / (user.win + user.lose) * 100 || 0))), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318\n        },\n        __self: this\n      }, React.createElement(AppSwitch, {\n        className: \"mx-1\",\n        color: \"success\",\n        checked: user.checked,\n        disabled: handleTotalSelected() === 10 && !user.checked || !user.role || !user.role.length,\n        onChange: function onChange(_ref3) {\n          var checked = _ref3.target.checked;\n          setUsers(function (prev) {\n            return prev.map(function (p) {\n              if (p.username === user.username) {\n                p.checked = checked;\n              }\n\n              return p;\n            });\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319\n        },\n        __self: this\n      })));\n    });\n  };\n\n  var handleTotalSelected = function handleTotalSelected() {\n    return users.filter(function (i) {\n      return i.checked;\n    }).length;\n  };\n\n  var handleSaveTeamRandom = function handleSaveTeamRandom() {\n    changeStatusProgress(true);\n    var statistic = {\n      blueTeam: teams[0],\n      redTeam: teams[1],\n      dateMatch: moment(new Date()).format(\"YYYY-MM-DD\"),\n      complete: false,\n      authorCreate: JSON.parse(localStorage.getItem(\"account\")).username,\n      authorUpdate: \"\"\n    };\n    ref.ref(\"historyRandom\").push(statistic, function (snap) {\n      changeStatusProgress(false);\n    });\n    ref.ref(\"historyRandomNotPlay\").push(randomPlayerNotInclude);\n    setOldMatch(statistic);\n  };\n\n  if (oldMatch.complete === false) return React.createElement(OldMatch, {\n    oldMatch: oldMatch,\n    changeStatusProgress: changeStatusProgress,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 369\n    },\n    __self: this\n  });\n  return React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 376\n    },\n    __self: this\n  }, React.createElement(Col, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 377\n    },\n    __self: this\n  }, React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 378\n    },\n    __self: this\n  }, React.createElement(CardHeader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 379\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fa fa-align-justify\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 380\n    },\n    __self: this\n  }), \" Users table\"), React.createElement(CardBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 382\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 383\n    },\n    __self: this\n  }, \"Player selected\", \" \", React.createElement(Badge, {\n    color: handleTotalSelected() === 10 ? \"success\" : \"secondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 385\n    },\n    __self: this\n  }, handleTotalSelected())), handleTotalSelected() !== 10 && React.createElement(\"small\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 392\n    },\n    __self: this\n  }, \"Choose 10 players from the board\") || React.createElement(\"small\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 393\n    },\n    __self: this\n  }, \"Picked enough\"), React.createElement(Table, {\n    hover: true,\n    bordered: true,\n    striped: true,\n    responsive: true,\n    size: \"sm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 394\n    },\n    __self: this\n  }, React.createElement(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 395\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 396\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 397\n    },\n    __self: this\n  }, \"#\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 398\n    },\n    __self: this\n  }, \"Avatar\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 399\n    },\n    __self: this\n  }, \"Player\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 400\n    },\n    __self: this\n  }, \"Role\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 401\n    },\n    __self: this\n  }, \"Win\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 402\n    },\n    __self: this\n  }, \"Lost\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 403\n    },\n    __self: this\n  }, \"Win rate \", React.createElement(\"small\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 404\n    },\n    __self: this\n  }, \"(%)\")), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 406\n    },\n    __self: this\n  }, \"Status\"))), React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 409\n    },\n    __self: this\n  }, renderUser())), React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 411\n    },\n    __self: this\n  }, React.createElement(Col, {\n    col: \"6\",\n    sm: \"4\",\n    md: \"3\",\n    xl: \"2\",\n    className: \"mb-3 mb-xl-0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 412\n    },\n    __self: this\n  }, React.createElement(Button, {\n    block: true,\n    color: \"success\",\n    onClick: handleRandomPlayer,\n    fullWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 413\n    },\n    __self: this\n  }, \"Random players\")), React.createElement(Col, {\n    col: \"6\",\n    sm: \"4\",\n    md: \"3\",\n    xl: \"2\",\n    className: \"mb-3 mb-xl-0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 422\n    },\n    __self: this\n  }, React.createElement(Button, {\n    block: true,\n    color: \"success\",\n    disabled: handleTotalSelected() !== 10,\n    onClick: handleSplitTeam,\n    fullWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 423\n    },\n    __self: this\n  }, \"Random team\"))), React.createElement(\"div\", {\n    ref: myRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 434\n    },\n    __self: this\n  }, teams && JSON.stringify(teams) !== \"{}\" && React.createElement(React.Fragment, null, React.createElement(TableTeams, {\n    teams: lastInfoTeam(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 437\n    },\n    __self: this\n  }), React.createElement(ChartTeams, {\n    teams: lastInfoTeam(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 438\n    },\n    __self: this\n  }), React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 439\n    },\n    __self: this\n  }, React.createElement(Col, {\n    col: \"6\",\n    sm: \"4\",\n    md: \"3\",\n    xl: \"2\",\n    className: \"mb-3 mb-xl-0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 440\n    },\n    __self: this\n  }, React.createElement(Button, {\n    block: true,\n    color: \"success\",\n    onClick: handleSaveTeamRandom,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 441\n    },\n    __self: this\n  }, \"Save Team\")))))))));\n};\n\nexport default Random;","map":{"version":3,"sources":["C:/Users/Admin/Desktop/persol/persol-lqmb/src/components/Random/index.js"],"names":["React","useState","useEffect","useRef","firebase","Card","CardBody","CardHeader","Col","Row","Table","CardImg","Badge","Button","AppSwitch","ChartTeams","TableTeams","OldMatch","moment","scrollToRef","ref","current","scrollIntoView","behavior","block","Random","changeStatusProgress","myRef","database","users","setUsers","teams","setTeams","oldMatch","setOldMatch","randomPlayerNotInclude","setRandomPlayerNotInclude","lastRandomNotPlay","setLastRandomNotPlay","handleRandomPlayer","prev","map","i","checked","arrayUsers","ingame","tempUsers","filter","includes","length","index","Math","random","splice","orderByValue","on","snap","Object","values","val","user","limitToLast","complete","statisticPlayer","player","find","lastInfoTeam","t1","split","addStatistic","win","lose","avatar","t2","handleSplitTeam","tmpTeams","randomFollowLength","names","details","reduce","acc","cur","role","isFull","team","renderLane","r","rLane","some","err","splitTeam","push","Boolean","point1","name","pLane","u","coefficient","point2","abs","console","log","renderRole","background","marginRight","color","renderWinRate","renderUser","username","width","handleTotalSelected","target","p","handleSaveTeamRandom","statistic","blueTeam","redTeam","dateMatch","Date","format","authorCreate","JSON","parse","localStorage","getItem","authorUpdate","stringify"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport firebase from \"./../../config\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  Col,\r\n  Row,\r\n  Table,\r\n  CardImg,\r\n  Badge,\r\n  Button\r\n} from \"reactstrap\";\r\nimport { AppSwitch } from \"@coreui/react\";\r\nimport ChartTeams from \"./ChartTeams\";\r\nimport TableTeams from \"./TableTeams\";\r\nimport OldMatch from \"./OldMatch\";\r\nimport moment from \"moment\";\r\n\r\nconst scrollToRef = ref =>\r\n  ref.current.scrollIntoView({ behavior: \"smooth\", block: \"start\" });\r\n\r\nconst Random = ({ changeStatusProgress }) => {\r\n  const myRef = useRef(null);\r\n  const ref = firebase.database();\r\n  const [users, setUsers] = useState([]);\r\n  const [teams, setTeams] = useState({});\r\n  const [oldMatch, setOldMatch] = useState({});\r\n  const [randomPlayerNotInclude, setRandomPlayerNotInclude] = useState([]);\r\n  const [lastRandomNotPlay, setLastRandomNotPlay] = useState([]);\r\n\r\n  const handleRandomPlayer = () => {    \r\n    setUsers(prev => prev.map(i => ({ ...i, checked: false })));\r\n    let arrayUsers = [...lastRandomNotPlay.map(i => i.ingame)];\r\n    let tempUsers = [...users].filter(i => !arrayUsers.includes(i.ingame));\r\n    let length = arrayUsers.length;\r\n    for (let i = 0; i < 10 - length; i++) {\r\n      let index = ~~(Math.random() * tempUsers.length);\r\n      arrayUsers = [...arrayUsers, tempUsers[index] && tempUsers[index].ingame];\r\n      tempUsers.splice(index, 1);\r\n    }\r\n\r\n    setUsers(prev =>\r\n      prev.map(i =>\r\n        arrayUsers.includes(i.ingame) ? { ...i, checked: true } : i\r\n      )\r\n    );\r\n    setTeams({});\r\n    setRandomPlayerNotInclude(tempUsers);\r\n  };\r\n\r\n  useEffect(() => {\r\n    changeStatusProgress(true);\r\n    ref\r\n      .ref(\"users\")\r\n      .orderByValue()\r\n      .on(\"value\", snap => {\r\n        changeStatusProgress(false);\r\n        setUsers(\r\n          Object.values(snap.val()).map(user => ({ ...user, checked: false }))\r\n        );\r\n      });\r\n\r\n    ref\r\n      .ref(\"historyRandom\")\r\n      .orderByValue()\r\n      .limitToLast(1)\r\n      .on(\"value\", snap => {\r\n        changeStatusProgress(false);\r\n        if (snap.val() !== null && !Object.values(snap.val())[0].complete) {\r\n          setOldMatch(Object.values(snap.val())[0]);\r\n        }\r\n      });\r\n\r\n    ref\r\n      .ref(\"historyRandomNotPlay\")\r\n      .orderByValue()\r\n      .limitToLast(1)\r\n      .on(\"value\", snap => {\r\n        if (snap.val()) {\r\n          setLastRandomNotPlay(Object.values(snap.val())[0]);\r\n        }\r\n      });\r\n  }, []);\r\n\r\n  const statisticPlayer = player => users.find(user => user.ingame === player);\r\n\r\n  useEffect(() => {\r\n    scrollToRef(myRef);\r\n  }, [teams]);\r\n\r\n  const lastInfoTeam = () => {\r\n    const t1 =\r\n      teams[0] &&\r\n      teams[0].map(i => {\r\n        const player = i.split(\" - \")[0];\r\n        const addStatistic =\r\n          i +\r\n          \" - \" +\r\n          statisticPlayer(player).win +\r\n          \" - \" +\r\n          statisticPlayer(player).lose +\r\n          \" - \" +\r\n          statisticPlayer(player).avatar;\r\n        return addStatistic;\r\n      });\r\n    const t2 =\r\n      teams[1] &&\r\n      teams[1].map(i => {\r\n        const player = i.split(\" - \")[0];\r\n        const addStatistic =\r\n          i +\r\n          \" - \" +\r\n          statisticPlayer(player).win +\r\n          \" - \" +\r\n          statisticPlayer(player).lose +\r\n          \" -  \" +\r\n          statisticPlayer(player).avatar;\r\n        return addStatistic;\r\n      });\r\n    return { [0]: t1, [1]: t2 };\r\n  };\r\n\r\n  const handleSplitTeam = () => {\r\n    let teams = users.filter(i => i.checked);\r\n    let tmpTeams = [];\r\n    for(let i = 0; i<10; i++) {\r\n      const randomFollowLength = ~~(Math.random() * teams.length);\r\n      tmpTeams = [...tmpTeams, teams[randomFollowLength]];\r\n      teams.splice(randomFollowLength, 1);\r\n    }\r\n    teams = tmpTeams;\r\n    const names = teams.map(i => i.ingame);\r\n    const details = teams.reduce(\r\n      (acc, cur) => ({ ...acc, [cur.ingame]: cur.role }),\r\n      {}\r\n    );\r\n\r\n    const random = () => ~~(Math.random() * 5);\r\n\r\n    const isFull = team => team.length === 5;\r\n\r\n    const renderLane = (player, team) => {\r\n      try {\r\n        const r = random()\r\n        const rLane = details[player][r];\r\n        if (!rLane || team.some(i => i.includes(rLane))) {\r\n          return renderLane(player, team);\r\n        }\r\n        return `${player} - ${rLane} - ${5 - r}`;\r\n      } catch (err) {\r\n        return handleSplitTeam();\r\n      }\r\n    };\r\n\r\n    const splitTeam = names.reduce(\r\n      (acc, cur) => {\r\n        if (isFull(acc[0]) || isFull(acc[1])) {\r\n          isFull(acc[0])\r\n            ? acc[1].push(renderLane(cur, acc[1]))\r\n            : acc[0].push(renderLane(cur, acc[1]));\r\n        } else {\r\n          const r = random() % 2;\r\n          acc[r].push(renderLane(cur, acc[r]));\r\n        }\r\n        return acc;\r\n      },\r\n      { \"0\": [], \"1\": [] }\r\n    );\r\n    if (\r\n      splitTeam[0].filter(Boolean).length === 5 &&\r\n      splitTeam[1].filter(Boolean).length === 5\r\n    ) {\r\n      const point1 = splitTeam[0].reduce((acc, cur) => {\r\n        const split = cur.split(' - ');\r\n        const name = split[0];\r\n        const pLane = split[2];\r\n        const u = users.find(u => u.ingame === name);\r\n        acc += u.coefficient * pLane // * ~~(u.win/(u.win +u.lose) * 100)\r\n        return acc\r\n      }, 0)\r\n      const point2 = splitTeam[1].reduce((acc, cur) => {\r\n        const split = cur.split(' - ');\r\n        const name = split[0];\r\n        const pLane = split[2];\r\n        const u = users.find(u => u.ingame === name);\r\n        acc += u.coefficient * pLane // * ~~(u.win/(u.win +u.lose) * 100)\r\n        return acc\r\n      }, 0)\r\n      if(Math.abs(point1 - point2) < 1) {\r\n        console.log(Math.abs(point1 - point2))\r\n        console.log(splitTeam)\r\n        setTeams(splitTeam);\r\n      } else {\r\n        return handleSplitTeam();\r\n      }\r\n    }\r\n  };\r\n\r\n  const renderRole = r => {\r\n    switch (r) {\r\n      case \"top\":\r\n        return (\r\n          <Badge\r\n            style={{ background: \"#0099FF\", marginRight: 10, color: \"white\" }}\r\n          >\r\n            {r}\r\n          </Badge>\r\n        );\r\n      case \"jungle\":\r\n        return (\r\n          <Badge\r\n            style={{ background: \"#3366CC\", marginRight: 10, color: \"white\" }}\r\n          >\r\n            {r}\r\n          </Badge>\r\n        );\r\n      case \"mid\":\r\n        return (\r\n          <Badge\r\n            style={{ background: \"#FF9900\", marginRight: 10, color: \"white\" }}\r\n          >\r\n            {r}\r\n          </Badge>\r\n        );\r\n      case \"ad\":\r\n        return (\r\n          <Badge\r\n            style={{ background: \"#f25e5e\", marginRight: 10, color: \"white\" }}\r\n          >\r\n            {r}\r\n          </Badge>\r\n        );\r\n      case \"support\":\r\n        return (\r\n          <Badge\r\n            style={{ background: \"#f2a766\", marginRight: 10, color: \"white\" }}\r\n          >\r\n            {r}\r\n          </Badge>\r\n        );\r\n      default:\r\n        return r;\r\n    }\r\n  };\r\n  const renderWinRate = r => {\r\n    if (r <= 25) {\r\n      return (\r\n        <Badge\r\n          style={{ background: \"#f25e5e\", marginRight: 10, color: \"white\" }}\r\n        >\r\n          {r}\r\n          <small>%</small>\r\n        </Badge>\r\n      );\r\n    } else if (r <= 50) {\r\n      return (\r\n        <Badge color=\"warning\">\r\n          {r}\r\n          <small>%</small>\r\n        </Badge>\r\n      );\r\n    } else if (r <= 75) {\r\n      return (\r\n        <Badge color=\"primary\">\r\n          {r}\r\n          <small>%</small>\r\n        </Badge>\r\n      );\r\n    } else if (r <= 100) {\r\n      return (\r\n        <Badge color=\"success\">\r\n          {r}\r\n          <small>%</small>\r\n        </Badge>\r\n      );\r\n    }\r\n  };\r\n\r\n  const renderUser = () => {\r\n    return users.map((user, index) => {\r\n      return (\r\n        <tr key={user.username}>\r\n          <td>\r\n            <Badge style={{ background: \"#660099\", color: \"white\" }}>\r\n              {index + 1}\r\n            </Badge>\r\n          </td>\r\n          <td>\r\n            {user.avatar && (\r\n              <CardImg\r\n                style={{ width: \"30px\" }}\r\n                src={user.avatar}\r\n                alt=\"avatar\"\r\n              />\r\n            )}\r\n          </td>\r\n          <td>\r\n            <Badge style={{ background: \"#660099\", color: \"white\" }}>\r\n              {user.ingame}\r\n            </Badge>\r\n          </td>\r\n          <td>\r\n            {user.role &&\r\n              user.role.map(r => (\r\n                <span key={user.username + r}>{renderRole(r)}</span>\r\n              ))}\r\n          </td>\r\n          <td>\r\n            <Badge color=\"success\">{user.win}</Badge>\r\n          </td>\r\n          <td>\r\n            <Badge color=\"danger\">{user.lose}</Badge>\r\n          </td>\r\n          <td>\r\n            {renderWinRate(~~((user.win / (user.win + user.lose)) * 100 || 0))}\r\n          </td>\r\n          <td>\r\n            <AppSwitch\r\n              className={\"mx-1\"}\r\n              color={\"success\"}\r\n              checked={user.checked}\r\n              disabled={\r\n                (handleTotalSelected() === 10 && !user.checked) ||\r\n                !user.role ||\r\n                !user.role.length\r\n              }\r\n              onChange={({ target: { checked } }) => {\r\n                setUsers(prev =>\r\n                  prev.map(p => {\r\n                    if (p.username === user.username) {\r\n                      p.checked = checked;\r\n                    }\r\n                    return p;\r\n                  })\r\n                );\r\n              }}\r\n            />\r\n          </td>\r\n        </tr>\r\n      );\r\n    });\r\n  };\r\n\r\n  const handleTotalSelected = () => {\r\n    return users.filter(i => i.checked).length;\r\n  };\r\n\r\n  const handleSaveTeamRandom = () => {\r\n    changeStatusProgress(true);\r\n    const statistic = {\r\n      blueTeam: teams[0],\r\n      redTeam: teams[1],\r\n      dateMatch: moment(new Date()).format(\"YYYY-MM-DD\"),\r\n      complete: false,\r\n      authorCreate: JSON.parse(localStorage.getItem(\"account\")).username,\r\n      authorUpdate: \"\"\r\n    };\r\n\r\n    ref.ref(\"historyRandom\").push(statistic, snap => {\r\n      changeStatusProgress(false);\r\n    });\r\n    ref.ref(\"historyRandomNotPlay\").push(randomPlayerNotInclude);\r\n    setOldMatch(statistic);\r\n  };\r\n\r\n  if (oldMatch.complete === false)\r\n    return (\r\n      <OldMatch\r\n        oldMatch={oldMatch}\r\n        changeStatusProgress={changeStatusProgress}\r\n      />\r\n    );\r\n\r\n  return (\r\n    <Row>\r\n      <Col>\r\n        <Card>\r\n          <CardHeader>\r\n            <i className=\"fa fa-align-justify\"></i> Users table\r\n          </CardHeader>\r\n          <CardBody>\r\n            <h4>\r\n              Player selected{\" \"}\r\n              <Badge\r\n                color={handleTotalSelected() === 10 ? \"success\" : \"secondary\"}\r\n              >\r\n                {handleTotalSelected()}\r\n              </Badge>\r\n            </h4>\r\n            {(handleTotalSelected() !== 10 && (\r\n              <small>Choose 10 players from the board</small>\r\n            )) || <small>Picked enough</small>}\r\n            <Table hover bordered striped responsive size=\"sm\">\r\n              <thead>\r\n                <tr>\r\n                  <th>#</th>\r\n                  <th>Avatar</th>\r\n                  <th>Player</th>\r\n                  <th>Role</th>\r\n                  <th>Win</th>\r\n                  <th>Lost</th>\r\n                  <th>\r\n                    Win rate <small>(%)</small>\r\n                  </th>\r\n                  <th>Status</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>{renderUser()}</tbody>\r\n            </Table>\r\n            <Row>\r\n              <Col col=\"6\" sm=\"4\" md=\"3\" xl=\"2\" className=\"mb-3 mb-xl-0\">\r\n                <Button\r\n                  block\r\n                  color=\"success\"\r\n                  onClick={handleRandomPlayer}\r\n                  fullWidth\r\n                >\r\n                  Random players\r\n                </Button>\r\n              </Col>\r\n              <Col col=\"6\" sm=\"4\" md=\"3\" xl=\"2\" className=\"mb-3 mb-xl-0\">\r\n                <Button\r\n                  block\r\n                  color=\"success\"\r\n                  disabled={handleTotalSelected() !== 10}\r\n                  onClick={handleSplitTeam}\r\n                  fullWidth\r\n                >\r\n                  Random team\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n            <div ref={myRef}>\r\n              {teams && JSON.stringify(teams) !== \"{}\" && (\r\n                <>\r\n                  <TableTeams teams={lastInfoTeam()} />\r\n                  <ChartTeams teams={lastInfoTeam()} />\r\n                  <Row>\r\n                    <Col col=\"6\" sm=\"4\" md=\"3\" xl=\"2\" className=\"mb-3 mb-xl-0\">\r\n                      <Button\r\n                        block\r\n                        color=\"success\"\r\n                        onClick={handleSaveTeamRandom}\r\n                      >\r\n                        Save Team\r\n                      </Button>\r\n                    </Col>\r\n                  </Row>\r\n                </>\r\n              )}\r\n            </div>\r\n          </CardBody>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default Random;\r\n"]},"metadata":{},"sourceType":"module"}