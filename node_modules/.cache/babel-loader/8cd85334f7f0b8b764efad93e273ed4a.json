{"ast":null,"code":"\"use strict\";\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nvar _regeneratorRuntime = require(\"/Users/maidat/Desktop/team-lq/persol-lqmb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/Users/maidat/Desktop/team-lq/persol-lqmb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar _get = require(\"/Users/maidat/Desktop/team-lq/persol-lqmb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/get\");\n\nvar _classCallCheck = require(\"/Users/maidat/Desktop/team-lq/persol-lqmb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/maidat/Desktop/team-lq/persol-lqmb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/Users/maidat/Desktop/team-lq/persol-lqmb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/Users/maidat/Desktop/team-lq/persol-lqmb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _assertThisInitialized = require(\"/Users/maidat/Desktop/team-lq/persol-lqmb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/assertThisInitialized\");\n\nvar _inherits = require(\"/Users/maidat/Desktop/team-lq/persol-lqmb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _defineProperty = require(\"/Users/maidat/Desktop/team-lq/persol-lqmb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/defineProperty\");\n\nvar _defaultResponseHeade;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar events_1 = require(\"events\");\n\nvar http2 = require(\"http2\");\n\nvar stream_1 = require(\"stream\");\n\nvar constants_1 = require(\"./constants\");\n\nvar metadata_1 = require(\"./metadata\");\n\nvar stream_decoder_1 = require(\"./stream-decoder\");\n\nvar GRPC_ACCEPT_ENCODING_HEADER = 'grpc-accept-encoding';\nvar GRPC_ENCODING_HEADER = 'grpc-encoding';\nvar GRPC_MESSAGE_HEADER = 'grpc-message';\nvar GRPC_STATUS_HEADER = 'grpc-status';\nvar GRPC_TIMEOUT_HEADER = 'grpc-timeout';\nvar DEADLINE_REGEX = /(\\d{1,8})\\s*([HMSmun])/;\nvar deadlineUnitsToMs = {\n  H: 3600000,\n  M: 60000,\n  S: 1000,\n  m: 1,\n  u: 0.001,\n  n: 0.000001\n};\nvar defaultResponseHeaders = (_defaultResponseHeade = {}, _defineProperty(_defaultResponseHeade, GRPC_ACCEPT_ENCODING_HEADER, 'identity'), _defineProperty(_defaultResponseHeade, GRPC_ENCODING_HEADER, 'identity'), _defineProperty(_defaultResponseHeade, http2.constants.HTTP2_HEADER_STATUS, http2.constants.HTTP_STATUS_OK), _defineProperty(_defaultResponseHeade, http2.constants.HTTP2_HEADER_CONTENT_TYPE, 'application/grpc+proto'), _defaultResponseHeade);\nvar defaultResponseOptions = {\n  waitForTrailers: true\n};\n\nvar ServerUnaryCallImpl =\n/*#__PURE__*/\nfunction (_events_1$EventEmitte) {\n  _inherits(ServerUnaryCallImpl, _events_1$EventEmitte);\n\n  function ServerUnaryCallImpl(call, metadata) {\n    var _this;\n\n    _classCallCheck(this, ServerUnaryCallImpl);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ServerUnaryCallImpl).call(this));\n    _this.call = call;\n    _this.metadata = metadata;\n    _this.cancelled = false;\n    _this.request = null;\n\n    _this.call.setupSurfaceCall(_assertThisInitialized(_this));\n\n    return _this;\n  }\n\n  _createClass(ServerUnaryCallImpl, [{\n    key: \"getPeer\",\n    value: function getPeer() {\n      throw new Error('not implemented yet');\n    }\n  }, {\n    key: \"sendMetadata\",\n    value: function sendMetadata(responseMetadata) {\n      this.call.sendMetadata(responseMetadata);\n    }\n  }]);\n\n  return ServerUnaryCallImpl;\n}(events_1.EventEmitter);\n\nexports.ServerUnaryCallImpl = ServerUnaryCallImpl;\n\nvar ServerReadableStreamImpl =\n/*#__PURE__*/\nfunction (_stream_1$Readable) {\n  _inherits(ServerReadableStreamImpl, _stream_1$Readable);\n\n  function ServerReadableStreamImpl(call, metadata, deserialize) {\n    var _this2;\n\n    _classCallCheck(this, ServerReadableStreamImpl);\n\n    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(ServerReadableStreamImpl).call(this, {\n      objectMode: true\n    }));\n    _this2.call = call;\n    _this2.metadata = metadata;\n    _this2.deserialize = deserialize;\n    _this2.cancelled = false;\n\n    _this2.call.setupSurfaceCall(_assertThisInitialized(_this2));\n\n    _this2.call.setupReadable(_assertThisInitialized(_this2));\n\n    return _this2;\n  }\n\n  _createClass(ServerReadableStreamImpl, [{\n    key: \"_read\",\n    value: function _read(size) {\n      if (!this.call.consumeUnpushedMessages(this)) {\n        return;\n      }\n\n      this.call.resume();\n    }\n  }, {\n    key: \"getPeer\",\n    value: function getPeer() {\n      throw new Error('not implemented yet');\n    }\n  }, {\n    key: \"sendMetadata\",\n    value: function sendMetadata(responseMetadata) {\n      this.call.sendMetadata(responseMetadata);\n    }\n  }]);\n\n  return ServerReadableStreamImpl;\n}(stream_1.Readable);\n\nexports.ServerReadableStreamImpl = ServerReadableStreamImpl;\n\nvar ServerWritableStreamImpl =\n/*#__PURE__*/\nfunction (_stream_1$Writable) {\n  _inherits(ServerWritableStreamImpl, _stream_1$Writable);\n\n  function ServerWritableStreamImpl(call, metadata, serialize) {\n    var _this3;\n\n    _classCallCheck(this, ServerWritableStreamImpl);\n\n    _this3 = _possibleConstructorReturn(this, _getPrototypeOf(ServerWritableStreamImpl).call(this, {\n      objectMode: true\n    }));\n    _this3.call = call;\n    _this3.metadata = metadata;\n    _this3.serialize = serialize;\n    _this3.cancelled = false;\n    _this3.request = null;\n    _this3.trailingMetadata = new metadata_1.Metadata();\n\n    _this3.call.setupSurfaceCall(_assertThisInitialized(_this3));\n\n    _this3.on('error', function (err) {\n      _this3.call.sendError(err);\n\n      _this3.end();\n    });\n\n    return _this3;\n  }\n\n  _createClass(ServerWritableStreamImpl, [{\n    key: \"getPeer\",\n    value: function getPeer() {\n      throw new Error('not implemented yet');\n    }\n  }, {\n    key: \"sendMetadata\",\n    value: function sendMetadata(responseMetadata) {\n      this.call.sendMetadata(responseMetadata);\n    }\n  }, {\n    key: \"_write\",\n    value: function () {\n      var _write2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(chunk, encoding, // tslint:disable-next-line:no-any\n      callback) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return this.call.serializeMessage(chunk);\n\n              case 3:\n                response = _context.sent;\n\n                if (this.call.write(response)) {\n                  _context.next = 7;\n                  break;\n                }\n\n                this.call.once('drain', callback);\n                return _context.abrupt(\"return\");\n\n              case 7:\n                _context.next = 13;\n                break;\n\n              case 9:\n                _context.prev = 9;\n                _context.t0 = _context[\"catch\"](0);\n                _context.t0.code = constants_1.Status.INTERNAL;\n                this.emit('error', _context.t0);\n\n              case 13:\n                callback();\n\n              case 14:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 9]]);\n      }));\n\n      function _write(_x, _x2, _x3) {\n        return _write2.apply(this, arguments);\n      }\n\n      return _write;\n    }()\n  }, {\n    key: \"_final\",\n    value: function _final(callback) {\n      this.call.sendStatus({\n        code: constants_1.Status.OK,\n        details: 'OK',\n        metadata: this.trailingMetadata\n      });\n      callback(null);\n    } // tslint:disable-next-line:no-any\n\n  }, {\n    key: \"end\",\n    value: function end(metadata) {\n      if (metadata) {\n        this.trailingMetadata = metadata;\n      }\n\n      _get(_getPrototypeOf(ServerWritableStreamImpl.prototype), \"end\", this).call(this);\n    }\n  }]);\n\n  return ServerWritableStreamImpl;\n}(stream_1.Writable);\n\nexports.ServerWritableStreamImpl = ServerWritableStreamImpl;\n\nvar ServerDuplexStreamImpl =\n/*#__PURE__*/\nfunction (_stream_1$Duplex) {\n  _inherits(ServerDuplexStreamImpl, _stream_1$Duplex);\n\n  function ServerDuplexStreamImpl(call, metadata, serialize, deserialize) {\n    var _this4;\n\n    _classCallCheck(this, ServerDuplexStreamImpl);\n\n    _this4 = _possibleConstructorReturn(this, _getPrototypeOf(ServerDuplexStreamImpl).call(this, {\n      objectMode: true\n    }));\n    _this4.call = call;\n    _this4.metadata = metadata;\n    _this4.serialize = serialize;\n    _this4.deserialize = deserialize;\n    _this4.cancelled = false;\n    _this4.trailingMetadata = new metadata_1.Metadata();\n\n    _this4.call.setupSurfaceCall(_assertThisInitialized(_this4));\n\n    _this4.call.setupReadable(_assertThisInitialized(_this4));\n\n    _this4.on('error', function (err) {\n      _this4.call.sendError(err);\n\n      _this4.end();\n    });\n\n    return _this4;\n  }\n\n  _createClass(ServerDuplexStreamImpl, [{\n    key: \"getPeer\",\n    value: function getPeer() {\n      throw new Error('not implemented yet');\n    }\n  }, {\n    key: \"sendMetadata\",\n    value: function sendMetadata(responseMetadata) {\n      this.call.sendMetadata(responseMetadata);\n    }\n  }]);\n\n  return ServerDuplexStreamImpl;\n}(stream_1.Duplex);\n\nexports.ServerDuplexStreamImpl = ServerDuplexStreamImpl;\nServerDuplexStreamImpl.prototype._read = ServerReadableStreamImpl.prototype._read;\nServerDuplexStreamImpl.prototype._write = ServerWritableStreamImpl.prototype._write;\nServerDuplexStreamImpl.prototype._final = ServerWritableStreamImpl.prototype._final;\nServerDuplexStreamImpl.prototype.end = ServerWritableStreamImpl.prototype.end;\nvar noopTimer = setTimeout(function () {}, 0); // Internal class that wraps the HTTP2 request.\n\nvar Http2ServerCallStream =\n/*#__PURE__*/\nfunction (_events_1$EventEmitte2) {\n  _inherits(Http2ServerCallStream, _events_1$EventEmitte2);\n\n  function Http2ServerCallStream(stream, handler) {\n    var _this5;\n\n    _classCallCheck(this, Http2ServerCallStream);\n\n    _this5 = _possibleConstructorReturn(this, _getPrototypeOf(Http2ServerCallStream).call(this));\n    _this5.stream = stream;\n    _this5.handler = handler;\n    _this5.cancelled = false;\n    _this5.deadline = noopTimer;\n    _this5.wantTrailers = false;\n    _this5.metadataSent = false;\n    _this5.canPush = false;\n    _this5.isPushPending = false;\n    _this5.bufferedMessages = [];\n    _this5.messagesToPush = [];\n\n    _this5.stream.once('error', function (err) {\n      err.code = constants_1.Status.INTERNAL;\n\n      _this5.sendError(err);\n    });\n\n    _this5.stream.once('close', function () {\n      if (_this5.stream.rstCode === http2.constants.NGHTTP2_CANCEL) {\n        _this5.cancelled = true;\n\n        _this5.emit('cancelled', 'cancelled');\n      }\n    });\n\n    _this5.stream.on('drain', function () {\n      _this5.emit('drain');\n    });\n\n    return _this5;\n  }\n\n  _createClass(Http2ServerCallStream, [{\n    key: \"sendMetadata\",\n    value: function sendMetadata(customMetadata) {\n      if (this.metadataSent) {\n        return;\n      }\n\n      this.metadataSent = true;\n      var custom = customMetadata ? customMetadata.toHttp2Headers() : null; // TODO(cjihrig): Include compression headers.\n\n      var headers = Object.assign(defaultResponseHeaders, custom);\n      this.stream.respond(headers, defaultResponseOptions);\n    }\n  }, {\n    key: \"receiveMetadata\",\n    value: function receiveMetadata(headers) {\n      var metadata = metadata_1.Metadata.fromHttp2Headers(headers); // TODO(cjihrig): Receive compression metadata.\n\n      var timeoutHeader = metadata.get(GRPC_TIMEOUT_HEADER);\n\n      if (timeoutHeader.length > 0) {\n        var match = timeoutHeader[0].toString().match(DEADLINE_REGEX);\n\n        if (match === null) {\n          var err = new Error('Invalid deadline');\n          err.code = constants_1.Status.OUT_OF_RANGE;\n          this.sendError(err);\n          return;\n        }\n\n        var timeout = +match[1] * deadlineUnitsToMs[match[2]] | 0;\n        this.deadline = setTimeout(handleExpiredDeadline, timeout, this);\n        metadata.remove(GRPC_TIMEOUT_HEADER);\n      }\n\n      return metadata;\n    }\n  }, {\n    key: \"receiveUnaryMessage\",\n    value: function receiveUnaryMessage() {\n      var _this6 = this;\n\n      return new Promise(function (resolve, reject) {\n        var stream = _this6.stream;\n        var chunks = [];\n        var totalLength = 0;\n        stream.on('data', function (data) {\n          chunks.push(data);\n          totalLength += data.byteLength;\n        });\n        stream.once('end',\n        /*#__PURE__*/\n        _asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee2() {\n          var requestBytes;\n          return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  _context2.prev = 0;\n                  requestBytes = Buffer.concat(chunks, totalLength);\n                  _context2.t0 = resolve;\n                  _context2.next = 5;\n                  return _this6.deserializeMessage(requestBytes);\n\n                case 5:\n                  _context2.t1 = _context2.sent;\n                  (0, _context2.t0)(_context2.t1);\n                  _context2.next = 14;\n                  break;\n\n                case 9:\n                  _context2.prev = 9;\n                  _context2.t2 = _context2[\"catch\"](0);\n                  _context2.t2.code = constants_1.Status.INTERNAL;\n\n                  _this6.sendError(_context2.t2);\n\n                  resolve();\n\n                case 14:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, _callee2, null, [[0, 9]]);\n        })));\n      });\n    }\n  }, {\n    key: \"serializeMessage\",\n    value: function serializeMessage(value) {\n      var messageBuffer = this.handler.serialize(value); // TODO(cjihrig): Call compression aware serializeMessage().\n\n      var byteLength = messageBuffer.byteLength;\n      var output = Buffer.allocUnsafe(byteLength + 5);\n      output.writeUInt8(0, 0);\n      output.writeUInt32BE(byteLength, 1);\n      messageBuffer.copy(output, 5);\n      return output;\n    }\n  }, {\n    key: \"deserializeMessage\",\n    value: function () {\n      var _deserializeMessage = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(bytes) {\n        var receivedMessage;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                // TODO(cjihrig): Call compression aware deserializeMessage().\n                receivedMessage = bytes.slice(5);\n                return _context3.abrupt(\"return\", this.handler.deserialize(receivedMessage));\n\n              case 2:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function deserializeMessage(_x4) {\n        return _deserializeMessage.apply(this, arguments);\n      }\n\n      return deserializeMessage;\n    }()\n  }, {\n    key: \"sendUnaryMessage\",\n    value: function () {\n      var _sendUnaryMessage = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4(err, value, metadata, flags) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                if (!metadata) {\n                  metadata = new metadata_1.Metadata();\n                }\n\n                if (!err) {\n                  _context4.next = 5;\n                  break;\n                }\n\n                err.metadata = metadata;\n                this.sendError(err);\n                return _context4.abrupt(\"return\");\n\n              case 5:\n                _context4.prev = 5;\n                _context4.next = 8;\n                return this.serializeMessage(value);\n\n              case 8:\n                response = _context4.sent;\n                this.write(response);\n                this.sendStatus({\n                  code: constants_1.Status.OK,\n                  details: 'OK',\n                  metadata: metadata\n                });\n                _context4.next = 17;\n                break;\n\n              case 13:\n                _context4.prev = 13;\n                _context4.t0 = _context4[\"catch\"](5);\n                _context4.t0.code = constants_1.Status.INTERNAL;\n                this.sendError(_context4.t0);\n\n              case 17:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this, [[5, 13]]);\n      }));\n\n      function sendUnaryMessage(_x5, _x6, _x7, _x8) {\n        return _sendUnaryMessage.apply(this, arguments);\n      }\n\n      return sendUnaryMessage;\n    }()\n  }, {\n    key: \"sendStatus\",\n    value: function sendStatus(statusObj) {\n      var _this7 = this;\n\n      if (this.cancelled) {\n        return;\n      }\n\n      clearTimeout(this.deadline);\n\n      if (!this.wantTrailers) {\n        this.wantTrailers = true;\n        this.stream.once('wantTrailers', function () {\n          var _Object$assign;\n\n          var trailersToSend = Object.assign((_Object$assign = {}, _defineProperty(_Object$assign, GRPC_STATUS_HEADER, statusObj.code), _defineProperty(_Object$assign, GRPC_MESSAGE_HEADER, encodeURI(statusObj.details)), _Object$assign), statusObj.metadata.toHttp2Headers());\n\n          _this7.stream.sendTrailers(trailersToSend);\n        });\n        this.sendMetadata();\n        this.stream.end();\n      }\n    }\n  }, {\n    key: \"sendError\",\n    value: function sendError(error) {\n      var status = {\n        code: constants_1.Status.UNKNOWN,\n        details: 'message' in error ? error.message : 'Unknown Error',\n        metadata: 'metadata' in error && error.metadata !== undefined ? error.metadata : new metadata_1.Metadata()\n      };\n\n      if ('code' in error && typeof error.code === 'number' && Number.isInteger(error.code)) {\n        status.code = error.code;\n\n        if ('details' in error && typeof error.details === 'string') {\n          status.details = error.details;\n        }\n      }\n\n      this.sendStatus(status);\n    }\n  }, {\n    key: \"write\",\n    value: function write(chunk) {\n      if (this.cancelled) {\n        return;\n      }\n\n      this.sendMetadata();\n      return this.stream.write(chunk);\n    }\n  }, {\n    key: \"resume\",\n    value: function resume() {\n      this.stream.resume();\n    }\n  }, {\n    key: \"setupSurfaceCall\",\n    value: function setupSurfaceCall(call) {\n      this.once('cancelled', function (reason) {\n        call.cancelled = true;\n        call.emit('cancelled', reason);\n      });\n    }\n  }, {\n    key: \"setupReadable\",\n    value: function setupReadable(readable) {\n      var _this8 = this;\n\n      var decoder = new stream_decoder_1.StreamDecoder();\n      this.stream.on('data',\n      /*#__PURE__*/\n      function () {\n        var _ref2 = _asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee5(data) {\n          var messages, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, message;\n\n          return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n            while (1) {\n              switch (_context5.prev = _context5.next) {\n                case 0:\n                  messages = decoder.write(data);\n                  _iteratorNormalCompletion = true;\n                  _didIteratorError = false;\n                  _iteratorError = undefined;\n                  _context5.prev = 4;\n\n                  for (_iterator = messages[Symbol.iterator](); !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                    message = _step.value;\n\n                    _this8.pushOrBufferMessage(readable, message);\n                  }\n\n                  _context5.next = 12;\n                  break;\n\n                case 8:\n                  _context5.prev = 8;\n                  _context5.t0 = _context5[\"catch\"](4);\n                  _didIteratorError = true;\n                  _iteratorError = _context5.t0;\n\n                case 12:\n                  _context5.prev = 12;\n                  _context5.prev = 13;\n\n                  if (!_iteratorNormalCompletion && _iterator.return != null) {\n                    _iterator.return();\n                  }\n\n                case 15:\n                  _context5.prev = 15;\n\n                  if (!_didIteratorError) {\n                    _context5.next = 18;\n                    break;\n                  }\n\n                  throw _iteratorError;\n\n                case 18:\n                  return _context5.finish(15);\n\n                case 19:\n                  return _context5.finish(12);\n\n                case 20:\n                case \"end\":\n                  return _context5.stop();\n              }\n            }\n          }, _callee5, null, [[4, 8, 12, 20], [13,, 15, 19]]);\n        }));\n\n        return function (_x9) {\n          return _ref2.apply(this, arguments);\n        };\n      }());\n      this.stream.once('end', function () {\n        _this8.pushOrBufferMessage(readable, null);\n      });\n    }\n  }, {\n    key: \"consumeUnpushedMessages\",\n    value: function consumeUnpushedMessages(readable) {\n      this.canPush = true;\n\n      while (this.messagesToPush.length > 0) {\n        var nextMessage = this.messagesToPush.shift();\n        var canPush = readable.push(nextMessage);\n\n        if (nextMessage === null || canPush === false) {\n          this.canPush = false;\n          break;\n        }\n      }\n\n      return this.canPush;\n    }\n  }, {\n    key: \"pushOrBufferMessage\",\n    value: function pushOrBufferMessage(readable, messageBytes) {\n      if (this.isPushPending) {\n        this.bufferedMessages.push(messageBytes);\n      } else {\n        this.pushMessage(readable, messageBytes);\n      }\n    }\n  }, {\n    key: \"pushMessage\",\n    value: function () {\n      var _pushMessage = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee6(readable, messageBytes) {\n        var deserialized;\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                if (!(messageBytes === null)) {\n                  _context6.next = 3;\n                  break;\n                }\n\n                if (this.canPush) {\n                  readable.push(null);\n                } else {\n                  this.messagesToPush.push(null);\n                }\n\n                return _context6.abrupt(\"return\");\n\n              case 3:\n                this.isPushPending = true;\n                _context6.prev = 4;\n                _context6.next = 7;\n                return this.deserializeMessage(messageBytes);\n\n              case 7:\n                deserialized = _context6.sent;\n\n                if (this.canPush) {\n                  if (!readable.push(deserialized)) {\n                    this.canPush = false;\n                    this.stream.pause();\n                  }\n                } else {\n                  this.messagesToPush.push(deserialized);\n                }\n\n                _context6.next = 16;\n                break;\n\n              case 11:\n                _context6.prev = 11;\n                _context6.t0 = _context6[\"catch\"](4);\n                // Ignore any remaining messages when errors occur.\n                this.bufferedMessages.length = 0;\n                _context6.t0.code = constants_1.Status.INTERNAL;\n                readable.emit('error', _context6.t0);\n\n              case 16:\n                this.isPushPending = false;\n\n                if (this.bufferedMessages.length > 0) {\n                  this.pushMessage(readable, this.bufferedMessages.shift());\n                }\n\n              case 18:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this, [[4, 11]]);\n      }));\n\n      function pushMessage(_x10, _x11) {\n        return _pushMessage.apply(this, arguments);\n      }\n\n      return pushMessage;\n    }()\n  }]);\n\n  return Http2ServerCallStream;\n}(events_1.EventEmitter);\n\nexports.Http2ServerCallStream = Http2ServerCallStream;\n\nfunction handleExpiredDeadline(call) {\n  var err = new Error('Deadline exceeded');\n  err.code = constants_1.Status.DEADLINE_EXCEEDED;\n  call.sendError(err);\n  call.cancelled = true;\n  call.emit('cancelled', 'deadline');\n}","map":null,"metadata":{},"sourceType":"script"}