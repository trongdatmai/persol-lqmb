{"ast":null,"code":"\"use strict\";\n/*!\n * Copyright 2019 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar _classCallCheck = require(\"/Users/maidat/Desktop/team-lq/persol-lqmb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/maidat/Desktop/team-lq/persol-lqmb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/Users/maidat/Desktop/team-lq/persol-lqmb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/Users/maidat/Desktop/team-lq/persol-lqmb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _get = require(\"/Users/maidat/Desktop/team-lq/persol-lqmb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/get\");\n\nvar _inherits = require(\"/Users/maidat/Desktop/team-lq/persol-lqmb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar stream_1 = require(\"stream\");\n\nvar ResourceStream =\n/*#__PURE__*/\nfunction (_stream_1$Transform) {\n  _inherits(ResourceStream, _stream_1$Transform);\n\n  function ResourceStream(args, requestFn) {\n    var _this;\n\n    _classCallCheck(this, ResourceStream);\n\n    var options = Object.assign({\n      objectMode: true\n    }, args.streamOptions);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ResourceStream).call(this, options));\n    _this._ended = false;\n    _this._maxApiCalls = args.maxApiCalls === -1 ? Infinity : args.maxApiCalls;\n    _this._nextQuery = args.query;\n    _this._reading = false;\n    _this._requestFn = requestFn;\n    _this._requestsMade = 0;\n    _this._resultsToSend = args.maxResults === -1 ? Infinity : args.maxResults;\n    return _this;\n  } // tslint:disable-next-line:no-any\n\n\n  _createClass(ResourceStream, [{\n    key: \"end\",\n    value: function end() {\n      var _get2;\n\n      this._ended = true;\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      return (_get2 = _get(_getPrototypeOf(ResourceStream.prototype), \"end\", this)).call.apply(_get2, [this].concat(args));\n    }\n  }, {\n    key: \"_read\",\n    value: function _read() {\n      var _this2 = this;\n\n      if (this._reading) {\n        return;\n      }\n\n      this._reading = true;\n\n      this._requestFn(this._nextQuery, function (err, results, nextQuery) {\n        if (err) {\n          _this2.destroy(err);\n\n          return;\n        }\n\n        _this2._nextQuery = nextQuery;\n\n        if (_this2._resultsToSend !== Infinity) {\n          results = results.splice(0, _this2._resultsToSend);\n          _this2._resultsToSend -= results.length;\n        }\n\n        var more = true;\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = results[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var result = _step.value;\n\n            if (_this2._ended) {\n              break;\n            }\n\n            more = _this2.push(result);\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n              _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n\n        var isFinished = !_this2._nextQuery || _this2._resultsToSend < 1;\n        var madeMaxCalls = ++_this2._requestsMade >= _this2._maxApiCalls;\n\n        if (isFinished || madeMaxCalls) {\n          _this2.end();\n        }\n\n        if (more && !_this2._ended) {\n          setImmediate(function () {\n            return _this2._read();\n          });\n        }\n\n        _this2._reading = false;\n      });\n    }\n  }]);\n\n  return ResourceStream;\n}(stream_1.Transform);\n\nexports.ResourceStream = ResourceStream;","map":null,"metadata":{},"sourceType":"script"}