{"ast":null,"code":"import _objectSpread from \"/Users/maidat/Desktop/team-lq/persol-lqmb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/maidat/Desktop/team-lq/persol-lqmb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/maidat/Desktop/team-lq/persol-lqmb/src/components/Profile/index.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Card, CardBody, CardHeader, Col, FormGroup, Input, Label, Row, Button } from \"reactstrap\";\nimport firebase from \"./../../config\";\n\nvar Profile = function Profile() {\n  var _useState = useState(JSON.parse(localStorage.getItem(\"account\") || \"{}\")),\n      _useState2 = _slicedToArray(_useState, 2),\n      account = _useState2[0],\n      setAccount = _useState2[1];\n\n  var _useState3 = useState({\n    top: false,\n    jungle: false,\n    mid: false,\n    ad: false,\n    support: false\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      role = _useState4[0],\n      setRole = _useState4[1];\n\n  useEffect(function () {\n    var ref = firebase.database();\n    ref.ref(\"users\").orderByChild(\"username\").equalTo(account.username).on(\"value\", function (snapshot) {\n      if (snapshot.val() !== null) {\n        var _Object$values = Object.values(snapshot.val()),\n            _Object$values2 = _slicedToArray(_Object$values, 1),\n            acc = _Object$values2[0];\n\n        setAccount(acc);\n      }\n    });\n  }, []);\n\n  var updateProfile = function updateProfile() {\n    var roles = Object.values(role).filter(function (val, index) {\n      if (val) {\n        return Object.keys(role)[index];\n      }\n    });\n    console.log(account, roles);\n  };\n\n  return React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(Col, {\n    xs: \"12\",\n    sm: \"12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(CardHeader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"Profile\"), React.createElement(\"small\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \" Form\")), React.createElement(CardBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(Label, {\n    htmlFor: \"company\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"Username\"), React.createElement(Input, {\n    type: \"text\",\n    readOnly: true,\n    value: account.username,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  })), React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(Label, {\n    htmlFor: \"Ingame\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"Ingame\"), React.createElement(Input, {\n    type: \"text\",\n    id: \"Ingame\",\n    placeholder: \"PS.abcxyz\",\n    value: account.ingame,\n    onChange: function onChange(_ref) {\n      var value = _ref.target.value;\n      return setRole(function (prev) {\n        return _objectSpread({}, prev, {\n          ingame: value\n        });\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  })), React.createElement(FormGroup, {\n    row: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(Col, {\n    md: \"12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, \"Role\")), React.createElement(Col, {\n    md: \"12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    check: true,\n    className: \"checkbox\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(Input, {\n    className: \"form-check-input\",\n    type: \"checkbox\",\n    id: \"Top\",\n    defaultChecked: account.role && account.role.some(function (i) {\n      return i === 'top';\n    }),\n    onChange: function onChange(_ref2) {\n      var checked = _ref2.target.checked;\n      return setRole(function (prev) {\n        return _objectSpread({}, prev, {\n          top: checked\n        });\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }), React.createElement(Label, {\n    check: true,\n    className: \"form-check-label\",\n    htmlFor: \"Top\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, \"Top\")), React.createElement(FormGroup, {\n    check: true,\n    className: \"checkbox\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(Input, {\n    className: \"form-check-input\",\n    type: \"checkbox\",\n    id: \"Jungle\",\n    defaultChecked: account.role && account.role.some(function (i) {\n      return i === 'jungle';\n    }),\n    onChange: function onChange(_ref3) {\n      var checked = _ref3.target.checked;\n      return setRole(function (prev) {\n        return _objectSpread({}, prev, {\n          jungle: checked\n        });\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }), React.createElement(Label, {\n    check: true,\n    className: \"form-check-label\",\n    htmlFor: \"Jungle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, \"Jungle\")), React.createElement(FormGroup, {\n    check: true,\n    className: \"checkbox\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, React.createElement(Input, {\n    className: \"form-check-input\",\n    type: \"checkbox\",\n    id: \"Mid\",\n    defaultChecked: account.role && account.role.some(function (i) {\n      return i === 'mid';\n    }),\n    onChange: function onChange(_ref4) {\n      var checked = _ref4.target.checked;\n      return setRole(function (prev) {\n        return _objectSpread({}, prev, {\n          mid: checked\n        });\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }), React.createElement(Label, {\n    check: true,\n    className: \"form-check-label\",\n    htmlFor: \"Mid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, \"Mid\")), React.createElement(FormGroup, {\n    check: true,\n    className: \"checkbox\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, React.createElement(Input, {\n    className: \"form-check-input\",\n    type: \"checkbox\",\n    id: \"Ad\",\n    defaultChecked: account.role && account.role.some(function (i) {\n      return i === 'ad';\n    }),\n    onChange: function onChange(_ref5) {\n      var checked = _ref5.target.checked;\n      return setRole(function (prev) {\n        return _objectSpread({}, prev, {\n          ad: checked\n        });\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }), React.createElement(Label, {\n    check: true,\n    className: \"form-check-label\",\n    htmlFor: \"Ad\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, \"Ad\")), React.createElement(FormGroup, {\n    check: true,\n    className: \"checkbox\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, React.createElement(Input, {\n    className: \"form-check-input\",\n    type: \"checkbox\",\n    id: \"Support\",\n    defaultChecked: account.role && account.role.some(function (i) {\n      return i === 'support';\n    }),\n    onChange: function onChange(_ref6) {\n      var checked = _ref6.target.checked;\n      return setRole(function (prev) {\n        return _objectSpread({}, prev, {\n          support: checked\n        });\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }), React.createElement(Label, {\n    check: true,\n    className: \"form-check-label\",\n    htmlFor: \"Support\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, \"Support\")))), React.createElement(FormGroup, {\n    row: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, React.createElement(Col, {\n    md: \"12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, React.createElement(Label, {\n    htmlFor: \"select\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, \"Rank\")), React.createElement(Col, {\n    xs: \"12\",\n    md: \"12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, React.createElement(Input, {\n    type: \"select\",\n    name: \"select\",\n    id: \"select\",\n    onChange: function onChange(_ref7) {\n      var value = _ref7.target.value;\n      return setAccount(function (prev) {\n        return _objectSpread({}, prev, {\n          rank: value\n        });\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }, \"Please select\"), React.createElement(\"option\", {\n    value: \"Bronze\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, \"Bronze\"), React.createElement(\"option\", {\n    value: \"Silver\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }, \"Silver\"), React.createElement(\"option\", {\n    value: \"Gold\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }, \"Gold\"), React.createElement(\"option\", {\n    value: \"Platinum\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }, \"Platinum\"), React.createElement(\"option\", {\n    value: \"Diamond\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }, \"Diamond\"), React.createElement(\"option\", {\n    value: \"Veteran\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }, \"Veteran\"), React.createElement(\"option\", {\n    value: \"Master\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }, \"Master\"), React.createElement(\"option\", {\n    value: \"Challenger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }, \"Challenger\")))), React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }, React.createElement(Label, {\n    htmlFor: \"Avatar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  }, \"Avatar \"), React.createElement(\"small\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181\n    },\n    __self: this\n  }, \"(Url)\"), React.createElement(Input, {\n    type: \"text\",\n    id: \"Avatar\",\n    placeholder: \"https://pornhub.com/avatar/MariaOzawa\",\n    value: account.avatar,\n    onChange: function onChange(_ref8) {\n      var value = _ref8.target.value;\n      return setAccount(function (prev) {\n        return _objectSpread({}, prev, {\n          avatar: value\n        });\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182\n    },\n    __self: this\n  })), React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195\n    },\n    __self: this\n  }, React.createElement(Col, {\n    col: \"6\",\n    sm: \"4\",\n    md: \"2\",\n    xl: true,\n    className: \"mb-3 mb-xl-0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196\n    },\n    __self: this\n  }, React.createElement(Button, {\n    block: true,\n    color: \"success\",\n    onClick: updateProfile,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197\n    },\n    __self: this\n  }, \"Save\")))))));\n};\n\nexport default Profile;","map":{"version":3,"sources":["/Users/maidat/Desktop/team-lq/persol-lqmb/src/components/Profile/index.js"],"names":["React","useState","useEffect","Card","CardBody","CardHeader","Col","FormGroup","Input","Label","Row","Button","firebase","Profile","JSON","parse","localStorage","getItem","account","setAccount","top","jungle","mid","ad","support","role","setRole","ref","database","orderByChild","equalTo","username","on","snapshot","val","Object","values","acc","updateProfile","roles","filter","index","keys","console","log","ingame","value","target","prev","some","i","checked","rank","avatar"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  Card,\n  CardBody,\n  CardHeader,\n  Col,\n  FormGroup,\n  Input,\n  Label,\n  Row,\n  Button\n} from \"reactstrap\";\nimport firebase from \"./../../config\";\n\nconst Profile = () => {\n  const [account, setAccount] = useState(\n    JSON.parse(localStorage.getItem(\"account\") || \"{}\")\n  );\n  const [role, setRole] = useState({\n    top: false,\n    jungle: false,\n    mid: false,\n    ad: false,\n    support: false\n  });\n  useEffect(() => {\n    const ref = firebase.database();\n    ref\n      .ref(\"users\")\n      .orderByChild(\"username\")\n      .equalTo(account.username)\n      .on(\"value\", snapshot => {\n        if (snapshot.val() !== null) {\n          const [acc] = Object.values(snapshot.val());\n          setAccount(acc);\n        }\n      });\n  }, []);\n\n  const updateProfile = () => {\n    const roles = Object.values(role).filter((val, index) => {\n        if(val) {\n            return Object.keys(role)[index];\n        }\n    })\n    console.log(account, roles);\n  };\n\n  return (\n    <Row>\n      <Col xs=\"12\" sm=\"12\">\n        <Card>\n          <CardHeader>\n            <strong>Profile</strong>\n            <small> Form</small>\n          </CardHeader>\n          <CardBody>\n            <FormGroup>\n              <Label htmlFor=\"company\">Username</Label>\n              <Input type=\"text\" readOnly={true} value={account.username} />\n            </FormGroup>\n            <FormGroup>\n              <Label htmlFor=\"Ingame\">Ingame</Label>\n              <Input\n                type=\"text\"\n                id=\"Ingame\"\n                placeholder=\"PS.abcxyz\"\n                value={account.ingame}\n                onChange={({ target: { value } }) =>\n                  setRole(prev => ({\n                    ...prev,\n                    ingame: value\n                  }))\n                }\n              />\n            </FormGroup>\n            <FormGroup row>\n              <Col md=\"12\">\n                <Label>Role</Label>\n              </Col>\n              <Col md=\"12\">\n                <FormGroup check className=\"checkbox\">\n                  <Input\n                    className=\"form-check-input\"\n                    type=\"checkbox\"\n                    id=\"Top\"\n                    defaultChecked={account.role && account.role.some(i => i === 'top')}\n                    onChange={({ target: { checked } }) =>\n                      setRole(prev => ({ ...prev, top: checked }))\n                    }\n                  />\n                  <Label check className=\"form-check-label\" htmlFor=\"Top\">\n                    Top\n                  </Label>\n                </FormGroup>\n                <FormGroup check className=\"checkbox\">\n                  <Input\n                    className=\"form-check-input\"\n                    type=\"checkbox\"\n                    id=\"Jungle\"\n                    defaultChecked={account.role && account.role.some(i => i === 'jungle')}\n                    onChange={({ target: { checked } }) =>\n                      setRole(prev => ({ ...prev, jungle: checked }))\n                    }\n                  />\n                  <Label check className=\"form-check-label\" htmlFor=\"Jungle\">\n                    Jungle\n                  </Label>\n                </FormGroup>\n                <FormGroup check className=\"checkbox\">\n                  <Input\n                    className=\"form-check-input\"\n                    type=\"checkbox\"\n                    id=\"Mid\"\n                    defaultChecked={account.role && account.role.some(i => i === 'mid')}\n                    onChange={({ target: { checked } }) =>\n                      setRole(prev => ({ ...prev, mid: checked }))\n                    }\n                  />\n                  <Label check className=\"form-check-label\" htmlFor=\"Mid\">\n                    Mid\n                  </Label>\n                </FormGroup>\n                <FormGroup check className=\"checkbox\">\n                  <Input\n                    className=\"form-check-input\"\n                    type=\"checkbox\"\n                    id=\"Ad\"\n                    defaultChecked={account.role && account.role.some(i => i === 'ad')}\n                    onChange={({ target: { checked } }) =>\n                      setRole(prev => ({ ...prev, ad: checked }))\n                    }\n                  />\n                  <Label check className=\"form-check-label\" htmlFor=\"Ad\">\n                    Ad\n                  </Label>\n                </FormGroup>\n                <FormGroup check className=\"checkbox\">\n                  <Input\n                    className=\"form-check-input\"\n                    type=\"checkbox\"\n                    id=\"Support\"\n                    defaultChecked={account.role && account.role.some(i => i === 'support')}\n                    onChange={({ target: { checked } }) =>\n                      setRole(prev => ({ ...prev, support: checked }))\n                    }\n                  />\n                  <Label check className=\"form-check-label\" htmlFor=\"Support\">\n                    Support\n                  </Label>\n                </FormGroup>\n              </Col>\n            </FormGroup>\n            <FormGroup row>\n              <Col md=\"12\">\n                <Label htmlFor=\"select\">Rank</Label>\n              </Col>\n              <Col xs=\"12\" md=\"12\">\n                <Input\n                  type=\"select\"\n                  name=\"select\"\n                  id=\"select\"\n                  onChange={({ target: { value } }) =>\n                    setAccount(prev => ({ ...prev, rank: value }))\n                  }\n                >\n                  <option value=\"\">Please select</option>\n                  <option value=\"Bronze\">Bronze</option>\n                  <option value=\"Silver\">Silver</option>\n                  <option value=\"Gold\">Gold</option>\n                  <option value=\"Platinum\">Platinum</option>\n                  <option value=\"Diamond\">Diamond</option>\n                  <option value=\"Veteran\">Veteran</option>\n                  <option value=\"Master\">Master</option>\n                  <option value=\"Challenger\">Challenger</option>\n                </Input>\n              </Col>\n            </FormGroup>\n            <FormGroup>\n              <Label htmlFor=\"Avatar\">Avatar </Label>\n              <small>(Url)</small>\n              <Input\n                type=\"text\"\n                id=\"Avatar\"\n                placeholder=\"https://pornhub.com/avatar/MariaOzawa\"\n                value={account.avatar}\n                onChange={({ target: { value } }) =>\n                  setAccount(prev => ({\n                    ...prev,\n                    avatar: value\n                  }))\n                }\n              />\n            </FormGroup>\n            <Row>\n              <Col col=\"6\" sm=\"4\" md=\"2\" xl className=\"mb-3 mb-xl-0\">\n                <Button block color=\"success\" onClick={updateProfile}>\n                  Save\n                </Button>\n              </Col>\n            </Row>\n          </CardBody>\n        </Card>\n      </Col>\n    </Row>\n  );\n};\n\nexport default Profile;\n"]},"metadata":{},"sourceType":"module"}