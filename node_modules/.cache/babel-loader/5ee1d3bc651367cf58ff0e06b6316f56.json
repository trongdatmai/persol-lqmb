{"ast":null,"code":"import _defineProperty from \"/Users/maidat/Desktop/untitled folder/persol-lqmb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/maidat/Desktop/untitled folder/persol-lqmb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"/Users/maidat/Desktop/untitled folder/persol-lqmb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/Users/maidat/Desktop/untitled folder/persol-lqmb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/maidat/Desktop/untitled folder/persol-lqmb/src/components/Random/index.js\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport firebase from \"./../../config\";\nimport { Card, CardBody, CardHeader, Col, Row, Table, CardImg, Badge, Button } from \"reactstrap\";\nimport { AppSwitch } from \"@coreui/react\";\nimport ChartTeams from \"./ChartTeams\";\nimport TableTeams from \"./TableTeams\";\nimport OldMatch from \"./OldMatch\";\nimport moment from \"moment\";\n\nvar scrollToRef = function scrollToRef(ref) {\n  return ref.current.scrollIntoView({\n    behavior: \"smooth\",\n    block: \"start\"\n  });\n};\n\nvar Random = function Random(_ref) {\n  var changeStatusProgress = _ref.changeStatusProgress;\n  var myRef = useRef(null);\n  var ref = firebase.database();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      users = _useState2[0],\n      setUsers = _useState2[1];\n\n  var _useState3 = useState({}),\n      _useState4 = _slicedToArray(_useState3, 2),\n      teams = _useState4[0],\n      setTeams = _useState4[1];\n\n  var _useState5 = useState({}),\n      _useState6 = _slicedToArray(_useState5, 2),\n      oldMatch = _useState6[0],\n      setOldMatch = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      randomPlayer = _useState8[0],\n      setRandomPlayer = _useState8[1];\n\n  var handleRandomPlayer = function handleRandomPlayer() {\n    var tempUsers = _toConsumableArray(users);\n\n    var arrayUsers = [];\n\n    for (var i = 0; i < 10; i++) {\n      var index = Math.random(tempUsers.length);\n      console.log(index);\n    }\n\n    console.log(users);\n  };\n\n  handleRandomPlayer();\n  useEffect(function () {\n    changeStatusProgress(true);\n    ref.ref(\"users\").orderByValue().on(\"value\", function (snap) {\n      changeStatusProgress(false);\n      setUsers(Object.values(snap.val()).map(function (user) {\n        return _objectSpread({}, user, {\n          checked: true\n        });\n      }));\n    });\n    ref.ref(\"historyRandom\").orderByValue().limitToLast(1).on(\"value\", function (snap) {\n      changeStatusProgress(false);\n\n      if (snap.val() !== null && !Object.values(snap.val())[0].complete) {\n        setOldMatch(Object.values(snap.val())[0]);\n      }\n    });\n  }, []);\n\n  var statisticPlayer = function statisticPlayer(player) {\n    return users.find(function (user) {\n      return user.ingame === player;\n    });\n  };\n\n  useEffect(function () {\n    scrollToRef(myRef);\n  }, [teams]);\n\n  var lastInfoTeam = function lastInfoTeam() {\n    var _ref2;\n\n    var t1 = teams[0] && teams[0].map(function (i) {\n      var player = i.split(\" - \")[0];\n      var addStatistic = i + \" - \" + statisticPlayer(player).win + \" - \" + statisticPlayer(player).lose + \" - \" + statisticPlayer(player).avatar;\n      return addStatistic;\n    });\n    var t2 = teams[1] && teams[1].map(function (i) {\n      var player = i.split(\" - \")[0];\n      var addStatistic = i + \" - \" + statisticPlayer(player).win + \" - \" + statisticPlayer(player).lose + \" -  \" + statisticPlayer(player).avatar;\n      return addStatistic;\n    });\n    return _ref2 = {}, _defineProperty(_ref2, 0, t1), _defineProperty(_ref2, 1, t2), _ref2;\n  };\n\n  var handleSplitTeam = function handleSplitTeam() {\n    var teams = users.filter(function (i) {\n      return i.checked;\n    });\n    var names = teams.map(function (i) {\n      return i.ingame;\n    });\n    var details = teams.reduce(function (acc, cur) {\n      return _objectSpread({}, acc, _defineProperty({}, cur.ingame, cur.role));\n    }, {});\n\n    var random = function random() {\n      return ~~(Math.random() * 5);\n    };\n\n    var isFull = function isFull(team) {\n      return team.length === 5;\n    };\n\n    var renderLane = function renderLane(player, team) {\n      try {\n        var rLane = details[player][random()];\n\n        if (!rLane || team.some(function (i) {\n          return i.includes(rLane);\n        })) {\n          return renderLane(player, team);\n        }\n\n        return \"\".concat(player, \" - \").concat(rLane);\n      } catch (err) {\n        return handleSplitTeam();\n      }\n    };\n\n    var splitTeam = names.reduce(function (acc, cur) {\n      if (isFull(acc[0]) || isFull(acc[1])) {\n        isFull(acc[0]) ? acc[1].push(renderLane(cur, acc[1])) : acc[0].push(renderLane(cur, acc[1]));\n      } else {\n        var r = random() % 2;\n        acc[r].push(renderLane(cur, acc[r]));\n      }\n\n      return acc;\n    }, {\n      \"0\": [],\n      \"1\": []\n    });\n\n    if (splitTeam[0].filter(Boolean).length === 5 && splitTeam[1].filter(Boolean).length === 5) {\n      setTeams(splitTeam);\n    }\n  };\n\n  var renderUser = function renderUser() {\n    return users.map(function (user, index) {\n      return React.createElement(\"tr\", {\n        key: user.username,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, index + 1), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, user.avatar && React.createElement(CardImg, {\n        style: {\n          width: \"30px\"\n        },\n        src: user.avatar,\n        alt: \"avatar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      })), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, user.ingame), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, user.role && user.role.map(function (r) {\n        return React.createElement(\"span\", {\n          key: user.username + r,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 168\n          },\n          __self: this\n        }, r, \", \");\n      })), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, user.win), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, user.lose), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, ~~(user.win / (user.win + user.lose) * 100 || 0), \" \", React.createElement(\"small\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, \"%\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, React.createElement(AppSwitch, {\n        className: \"mx-1\",\n        color: \"success\",\n        checked: user.checked,\n        disabled: handleTotalSelected() === 10 && !user.checked || !user.role || !user.role.length,\n        onChange: function onChange(_ref3) {\n          var checked = _ref3.target.checked;\n          setUsers(function (prev) {\n            return prev.map(function (p) {\n              if (p.username === user.username) {\n                p.checked = checked;\n              }\n\n              return p;\n            });\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      })));\n    });\n  };\n\n  var handleTotalSelected = function handleTotalSelected() {\n    return users.filter(function (i) {\n      return i.checked;\n    }).length;\n  };\n\n  var handleSaveTeamRandom = function handleSaveTeamRandom() {\n    changeStatusProgress(true);\n    var statistic = {\n      blueTeam: teams[0],\n      redTeam: teams[1],\n      dateMatch: moment(new Date()).format(\"YYYY-MM-DD\"),\n      complete: false,\n      authorCreate: JSON.parse(localStorage.getItem(\"account\")).username,\n      authorUpdate: ''\n    };\n    ref.ref(\"historyRandom\").push(statistic, function (snap) {\n      changeStatusProgress(false);\n    });\n    setOldMatch(statistic);\n  };\n\n  if (oldMatch.complete === false) return React.createElement(OldMatch, {\n    oldMatch: oldMatch,\n    changeStatusProgress: changeStatusProgress,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220\n    },\n    __self: this\n  });\n  return React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223\n    },\n    __self: this\n  }, React.createElement(Col, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224\n    },\n    __self: this\n  }, React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225\n    },\n    __self: this\n  }, React.createElement(CardHeader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fa fa-align-justify\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227\n    },\n    __self: this\n  }), \" Users table\"), React.createElement(CardBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230\n    },\n    __self: this\n  }, \"Player selected\", \" \", React.createElement(Badge, {\n    color: handleTotalSelected() === 10 ? \"success\" : \"secondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232\n    },\n    __self: this\n  }, handleTotalSelected())), handleTotalSelected() !== 10 && React.createElement(\"small\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239\n    },\n    __self: this\n  }, \"Choose 10 players from the board\") || React.createElement(\"small\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240\n    },\n    __self: this\n  }, \"Picked enough\"), React.createElement(Table, {\n    hover: true,\n    bordered: true,\n    striped: true,\n    responsive: true,\n    size: \"sm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241\n    },\n    __self: this\n  }, React.createElement(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244\n    },\n    __self: this\n  }, \"#\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245\n    },\n    __self: this\n  }, \"Avatar\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246\n    },\n    __self: this\n  }, \"Player\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247\n    },\n    __self: this\n  }, \"Role\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248\n    },\n    __self: this\n  }, \"Win\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249\n    },\n    __self: this\n  }, \"Lost\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250\n    },\n    __self: this\n  }, \"Win rate \", React.createElement(\"small\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251\n    },\n    __self: this\n  }, \"(%)\")), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253\n    },\n    __self: this\n  }, \"Status\"))), React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256\n    },\n    __self: this\n  }, renderUser())), React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258\n    },\n    __self: this\n  }, React.createElement(Col, {\n    col: \"6\",\n    sm: \"4\",\n    md: \"3\",\n    xl: \"2\",\n    className: \"mb-3 mb-xl-0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259\n    },\n    __self: this\n  }, React.createElement(Button, {\n    block: true,\n    color: \"success\",\n    disabled: handleTotalSelected() !== 10,\n    onClick: handleSplitTeam,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260\n    },\n    __self: this\n  }, \"Random team\"))), React.createElement(\"div\", {\n    ref: myRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270\n    },\n    __self: this\n  }, teams && JSON.stringify(teams) !== \"{}\" && React.createElement(React.Fragment, null, React.createElement(TableTeams, {\n    teams: lastInfoTeam(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273\n    },\n    __self: this\n  }), React.createElement(ChartTeams, {\n    teams: lastInfoTeam(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274\n    },\n    __self: this\n  }), React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275\n    },\n    __self: this\n  }, React.createElement(Col, {\n    col: \"6\",\n    sm: \"4\",\n    md: \"3\",\n    xl: \"2\",\n    className: \"mb-3 mb-xl-0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276\n    },\n    __self: this\n  }, React.createElement(Button, {\n    block: true,\n    color: \"success\",\n    onClick: handleSaveTeamRandom,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277\n    },\n    __self: this\n  }, \"Save Team\")))))))));\n};\n\nexport default Random;","map":{"version":3,"sources":["/Users/maidat/Desktop/untitled folder/persol-lqmb/src/components/Random/index.js"],"names":["React","useState","useEffect","useRef","firebase","Card","CardBody","CardHeader","Col","Row","Table","CardImg","Badge","Button","AppSwitch","ChartTeams","TableTeams","OldMatch","moment","scrollToRef","ref","current","scrollIntoView","behavior","block","Random","changeStatusProgress","myRef","database","users","setUsers","teams","setTeams","oldMatch","setOldMatch","randomPlayer","setRandomPlayer","handleRandomPlayer","tempUsers","arrayUsers","i","index","Math","random","length","console","log","orderByValue","on","snap","Object","values","val","map","user","checked","limitToLast","complete","statisticPlayer","player","find","ingame","lastInfoTeam","t1","split","addStatistic","win","lose","avatar","t2","handleSplitTeam","filter","names","details","reduce","acc","cur","role","isFull","team","renderLane","rLane","some","includes","err","splitTeam","push","r","Boolean","renderUser","username","width","handleTotalSelected","target","prev","p","handleSaveTeamRandom","statistic","blueTeam","redTeam","dateMatch","Date","format","authorCreate","JSON","parse","localStorage","getItem","authorUpdate","stringify"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport firebase from \"./../../config\";\nimport {\n  Card,\n  CardBody,\n  CardHeader,\n  Col,\n  Row,\n  Table,\n  CardImg,\n  Badge,\n  Button\n} from \"reactstrap\";\nimport { AppSwitch } from \"@coreui/react\";\nimport ChartTeams from \"./ChartTeams\";\nimport TableTeams from \"./TableTeams\";\nimport OldMatch from \"./OldMatch\";\nimport moment from \"moment\";\n\nconst scrollToRef = ref =>\n  ref.current.scrollIntoView({ behavior: \"smooth\", block: \"start\" });\n\nconst Random = ({ changeStatusProgress }) => {\n  const myRef = useRef(null);\n  const ref = firebase.database();\n  const [users, setUsers] = useState([]);\n  const [teams, setTeams] = useState({});\n  const [oldMatch, setOldMatch] = useState({});\n  const [randomPlayer, setRandomPlayer] = useState([]);\n\n  \n  const handleRandomPlayer = () => {\n    let tempUsers = [...users];\n    let arrayUsers = [];\n    for(let i = 0; i < 10; i++) {\n      let index = Math.random(tempUsers.length)\n      console.log(index)\n    }\n    console.log(users)\n  }\n  handleRandomPlayer()\n  useEffect(() => {\n    changeStatusProgress(true);\n    ref\n      .ref(\"users\")\n      .orderByValue()\n      .on(\"value\", snap => {\n        changeStatusProgress(false);\n        setUsers(\n          Object.values(snap.val()).map(user => ({ ...user, checked: true }))\n        );\n      });\n      \n    ref\n      .ref(\"historyRandom\")\n      .orderByValue()\n      .limitToLast(1)\n      .on(\"value\", snap => {\n        changeStatusProgress(false);\n        if (snap.val() !== null && !Object.values(snap.val())[0].complete) {\n          setOldMatch(Object.values(snap.val())[0]);\n        }\n      });\n  }, []);\n  \n  const statisticPlayer = player => users.find(user => user.ingame === player);\n\n  useEffect(() => {\n    scrollToRef(myRef);\n  }, [teams]);\n\n  const lastInfoTeam = () => {\n    const t1 =\n      teams[0] &&\n      teams[0].map(i => {\n        const player = i.split(\" - \")[0];\n        const addStatistic =\n          i +\n          \" - \" +\n          statisticPlayer(player).win +\n          \" - \" +\n          statisticPlayer(player).lose +\n          \" - \" +\n          statisticPlayer(player).avatar;\n        return addStatistic;\n      });\n    const t2 =\n      teams[1] &&\n      teams[1].map(i => {\n        const player = i.split(\" - \")[0];\n        const addStatistic =\n          i +\n          \" - \" +\n          statisticPlayer(player).win +\n          \" - \" +\n          statisticPlayer(player).lose +\n          \" -  \" +\n          statisticPlayer(player).avatar;\n        return addStatistic;\n      });\n    return { [0]: t1, [1]: t2 };\n  };\n\n  const handleSplitTeam = () => {\n    const teams = users.filter(i => i.checked);\n    const names = teams.map(i => i.ingame);\n    const details = teams.reduce(\n      (acc, cur) => ({ ...acc, [cur.ingame]: cur.role }),\n      {}\n    );\n\n    const random = () => ~~(Math.random() * 5);\n\n    const isFull = team => team.length === 5;\n\n    const renderLane = (player, team) => {\n      try {\n        const rLane = details[player][random()];\n        if (!rLane || team.some(i => i.includes(rLane))) {\n          return renderLane(player, team);\n        }\n        return `${player} - ${rLane}`;\n      } catch (err) {\n        return handleSplitTeam();\n      }\n    };\n\n    const splitTeam = names.reduce(\n      (acc, cur) => {\n        if (isFull(acc[0]) || isFull(acc[1])) {\n          isFull(acc[0])\n            ? acc[1].push(renderLane(cur, acc[1]))\n            : acc[0].push(renderLane(cur, acc[1]));\n        } else {\n          const r = random() % 2;\n          acc[r].push(renderLane(cur, acc[r]));\n        }\n        return acc;\n      },\n      { \"0\": [], \"1\": [] }\n    );\n\n    if (\n      splitTeam[0].filter(Boolean).length === 5 &&\n      splitTeam[1].filter(Boolean).length === 5\n    ) {\n      setTeams(splitTeam);\n    }\n  };\n\n  const renderUser = () => {\n    return users.map((user, index) => {\n      return (\n        <tr key={user.username}>\n          <td>{index + 1}</td>\n          <td>\n            {user.avatar && (\n              <CardImg\n                style={{ width: \"30px\" }}\n                src={user.avatar}\n                alt=\"avatar\"\n              />\n            )}\n          </td>\n          <td>{user.ingame}</td>\n          <td>\n            {user.role && user.role.map(r => (\n              <span key={user.username + r}>{r}, </span>\n            ))}\n          </td>\n          <td>{user.win}</td>\n          <td>{user.lose}</td>\n          <td>\n            {~~((user.win / (user.win + user.lose)) * 100 || 0)} <small>%</small>\n          </td>\n          <td>\n            <AppSwitch\n              className={\"mx-1\"}\n              color={\"success\"}\n              checked={user.checked}\n              disabled={handleTotalSelected() === 10 && !user.checked || (!user.role || !user.role.length)}\n              onChange={({ target: { checked } }) => {\n                setUsers(prev =>\n                  prev.map(p => {\n                    if (p.username === user.username) {\n                      p.checked = checked;\n                    }\n                    return p;\n                  })\n                );\n              }}\n            />\n          </td>\n        </tr>\n      );\n    });\n  };\n\n  const handleTotalSelected = () => {\n    return users.filter(i => i.checked).length;\n  };\n\n  const handleSaveTeamRandom = () => {\n    changeStatusProgress(true);\n    const statistic = {\n      blueTeam: teams[0],\n      redTeam: teams[1],\n      dateMatch: moment(new Date()).format(\"YYYY-MM-DD\"),\n      complete: false,\n      authorCreate: JSON.parse(localStorage.getItem(\"account\")).username,\n      authorUpdate: ''\n    };\n\n    ref.ref(\"historyRandom\").push(statistic, snap => {\n      changeStatusProgress(false);\n    });\n    setOldMatch(statistic);\n  };\n\n  if(oldMatch.complete === false) return <OldMatch oldMatch={oldMatch} changeStatusProgress={changeStatusProgress}/>\n\n  return (\n    <Row>\n      <Col>\n        <Card>\n          <CardHeader>\n            <i className=\"fa fa-align-justify\"></i> Users table\n          </CardHeader>\n          <CardBody>\n            <h4>\n              Player selected{\" \"}\n              <Badge\n                color={handleTotalSelected() === 10 ? \"success\" : \"secondary\"}\n              >\n                {handleTotalSelected()}\n              </Badge>\n            </h4>\n            {(handleTotalSelected() !== 10 && (\n              <small>Choose 10 players from the board</small>\n            )) || <small>Picked enough</small>}\n            <Table hover bordered striped responsive size=\"sm\">\n              <thead>\n                <tr>\n                  <th>#</th>\n                  <th>Avatar</th>\n                  <th>Player</th>\n                  <th>Role</th>\n                  <th>Win</th>\n                  <th>Lost</th>\n                  <th>\n                    Win rate <small>(%)</small>\n                  </th>\n                  <th>Status</th>\n                </tr>\n              </thead>\n              <tbody>{renderUser()}</tbody>\n            </Table>\n            <Row>\n              <Col col=\"6\" sm=\"4\" md=\"3\" xl=\"2\" className=\"mb-3 mb-xl-0\">\n                <Button\n                  block\n                  color=\"success\"\n                  disabled={handleTotalSelected() !== 10}\n                  onClick={handleSplitTeam}\n                >\n                  Random team\n                </Button>\n              </Col>\n            </Row>\n            <div ref={myRef}>\n              {teams && JSON.stringify(teams) !== \"{}\" && (\n                <>\n                  <TableTeams teams={lastInfoTeam()} />\n                  <ChartTeams teams={lastInfoTeam()} />\n                  <Row>\n                    <Col col=\"6\" sm=\"4\" md=\"3\" xl=\"2\" className=\"mb-3 mb-xl-0\">\n                      <Button\n                        block\n                        color=\"success\"\n                        onClick={handleSaveTeamRandom}\n                      >\n                        Save Team\n                      </Button>\n                    </Col>\n                  </Row>\n                </>\n              )}\n            </div>\n          </CardBody>\n        </Card>\n      </Col>\n    </Row>\n  );\n};\n\nexport default Random;\n"]},"metadata":{},"sourceType":"module"}