{"ast":null,"code":"import _toConsumableArray from \"/Users/maidat/Desktop/team-lq/persol-lqmb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/Users/maidat/Desktop/team-lq/persol-lqmb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _regeneratorRuntime from \"/Users/maidat/Desktop/team-lq/persol-lqmb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/maidat/Desktop/team-lq/persol-lqmb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/maidat/Desktop/team-lq/persol-lqmb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/maidat/Desktop/team-lq/persol-lqmb/src/components/Profile/index.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Card, CardBody, CardHeader, Col, FormGroup, Input, Label, Row, Button, CardImg } from \"reactstrap\";\nimport firebase from \"./../../config\";\nvar base64Matcher = new RegExp(\"^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=|[A-Za-z0-9+/]{4})$\");\n\nvar Profile = function Profile(_ref) {\n  var changeStatusProgress = _ref.changeStatusProgress;\n  var ref = firebase.database();\n\n  var _useState = useState(JSON.parse(localStorage.getItem(\"account\") || \"{}\")),\n      _useState2 = _slicedToArray(_useState, 2),\n      account = _useState2[0],\n      setAccount = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      keyAccount = _useState4[0],\n      setKeyAccount = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      isSave = _useState6[0],\n      setSave = _useState6[1];\n\n  useEffect(function () {\n    changeStatusProgress(true);\n    ref.ref(\"users\").orderByChild(\"username\").equalTo(account.username).on(\"value\", function (snapshot) {\n      if (snapshot.val() !== null) {\n        var _Object$values = Object.values(snapshot.val()),\n            _Object$values2 = _slicedToArray(_Object$values, 1),\n            acc = _Object$values2[0];\n\n        setAccount(acc);\n        setKeyAccount(Object.keys(snapshot.val()));\n      }\n\n      changeStatusProgress(false);\n    });\n  }, []);\n  useEffect(function () {\n    setSave(false);\n  }, [account]);\n\n  var updateProfile =\n  /*#__PURE__*/\n  function () {\n    var _ref2 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              changeStatusProgress(true);\n              ref.ref().child(\"/users/\" + keyAccount).update(account, function () {\n                setSave(true);\n                changeStatusProgress(false);\n              });\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function updateProfile() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(Col, {\n    xs: \"12\",\n    sm: \"12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(CardHeader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"Profile\"), React.createElement(\"small\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \" Form\")), React.createElement(CardBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(Label, {\n    htmlFor: \"company\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"Username\"), React.createElement(Input, {\n    type: \"text\",\n    readOnly: true,\n    value: account.username,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  })), React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(Label, {\n    htmlFor: \"Ingame\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \"Ingame\"), React.createElement(Input, {\n    type: \"text\",\n    id: \"Ingame\",\n    placeholder: \"PS.abcxyz\",\n    value: account.ingame,\n    onChange: function onChange(_ref3) {\n      var value = _ref3.target.value;\n      return setAccount(function (prev) {\n        return _objectSpread({}, prev, {\n          ingame: value\n        });\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  })), React.createElement(FormGroup, {\n    row: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(Col, {\n    md: \"12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, \"Role\")), React.createElement(Col, {\n    md: \"12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    check: true,\n    className: \"checkbox\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(Input, {\n    className: \"form-check-input\",\n    type: \"checkbox\",\n    id: \"Top\",\n    checked: account.role && account.role.some(function (i) {\n      return i === \"top\";\n    }),\n    onChange: function onChange(_ref4) {\n      var checked = _ref4.target.checked;\n      return setAccount(function (prev) {\n        return checked ? account.role && account.role.length ? _objectSpread({}, prev, {\n          role: [].concat(_toConsumableArray(account.role), [\"top\"])\n        }) : _objectSpread({}, prev, {\n          role: [\"top\"]\n        }) : _objectSpread({}, prev, {\n          role: _toConsumableArray(account.role).filter(function (i) {\n            return i !== \"top\";\n          })\n        });\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }), React.createElement(Label, {\n    check: true,\n    className: \"form-check-label\",\n    htmlFor: \"Top\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, \"Top\")), React.createElement(FormGroup, {\n    check: true,\n    className: \"checkbox\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, React.createElement(Input, {\n    className: \"form-check-input\",\n    type: \"checkbox\",\n    id: \"Jungle\",\n    checked: account.role && account.role.some(function (i) {\n      return i === \"jungle\";\n    }),\n    onChange: function onChange(_ref5) {\n      var checked = _ref5.target.checked;\n      return setAccount(function (prev) {\n        return checked ? account.role && account.role.length ? _objectSpread({}, prev, {\n          role: [].concat(_toConsumableArray(account.role), [\"jungle\"])\n        }) : _objectSpread({}, prev, {\n          role: [\"jungle\"]\n        }) : _objectSpread({}, prev, {\n          role: _toConsumableArray(account.role).filter(function (i) {\n            return i !== \"jungle\";\n          })\n        });\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }), React.createElement(Label, {\n    check: true,\n    className: \"form-check-label\",\n    htmlFor: \"Jungle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, \"Jungle\")), React.createElement(FormGroup, {\n    check: true,\n    className: \"checkbox\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, React.createElement(Input, {\n    className: \"form-check-input\",\n    type: \"checkbox\",\n    id: \"Mid\",\n    checked: account.role && account.role.some(function (i) {\n      return i === \"mid\";\n    }),\n    onChange: function onChange(_ref6) {\n      var checked = _ref6.target.checked;\n      return setAccount(function (prev) {\n        return checked ? account.role && account.role.length ? _objectSpread({}, prev, {\n          role: [].concat(_toConsumableArray(account.role), [\"mid\"])\n        }) : _objectSpread({}, prev, {\n          role: [\"mid\"]\n        }) : _objectSpread({}, prev, {\n          role: _toConsumableArray(account.role).filter(function (i) {\n            return i !== \"mid\";\n          })\n        });\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }), React.createElement(Label, {\n    check: true,\n    className: \"form-check-label\",\n    htmlFor: \"Mid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, \"Mid\")), React.createElement(FormGroup, {\n    check: true,\n    className: \"checkbox\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, React.createElement(Input, {\n    className: \"form-check-input\",\n    type: \"checkbox\",\n    id: \"Ad\",\n    checked: account.role && account.role.some(function (i) {\n      return i === \"ad\";\n    }),\n    onChange: function onChange(_ref7) {\n      var checked = _ref7.target.checked;\n      return setAccount(function (prev) {\n        return checked ? account.role && account.role.length ? _objectSpread({}, prev, {\n          role: [].concat(_toConsumableArray(account.role), [\"ad\"])\n        }) : _objectSpread({}, prev, {\n          role: [\"ad\"]\n        }) : _objectSpread({}, prev, {\n          role: _toConsumableArray(account.role).filter(function (i) {\n            return i !== \"ad\";\n          })\n        });\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }), React.createElement(Label, {\n    check: true,\n    className: \"form-check-label\",\n    htmlFor: \"Ad\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184\n    },\n    __self: this\n  }, \"Ad\")), React.createElement(FormGroup, {\n    check: true,\n    className: \"checkbox\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188\n    },\n    __self: this\n  }, React.createElement(Input, {\n    className: \"form-check-input\",\n    type: \"checkbox\",\n    id: \"Support\",\n    checked: account.role && account.role.some(function (i) {\n      return i === \"support\";\n    }),\n    onChange: function onChange(_ref8) {\n      var checked = _ref8.target.checked;\n      return setAccount(function (prev) {\n        return checked ? account.role && account.role.length ? _objectSpread({}, prev, {\n          role: [].concat(_toConsumableArray(account.role), [\"support\"])\n        }) : _objectSpread({}, prev, {\n          role: [\"support\"]\n        }) : _objectSpread({}, prev, {\n          role: _toConsumableArray(account.role).filter(function (i) {\n            return i !== \"support\";\n          })\n        });\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189\n    },\n    __self: this\n  }), React.createElement(Label, {\n    check: true,\n    className: \"form-check-label\",\n    htmlFor: \"Support\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209\n    },\n    __self: this\n  }, \"Support\")))), React.createElement(FormGroup, {\n    row: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216\n    },\n    __self: this\n  }, React.createElement(Col, {\n    md: \"12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217\n    },\n    __self: this\n  }, React.createElement(Label, {\n    htmlFor: \"select\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218\n    },\n    __self: this\n  }, \"Rank\")), React.createElement(Col, {\n    xs: \"12\",\n    md: \"12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220\n    },\n    __self: this\n  }, React.createElement(Input, {\n    type: \"select\",\n    name: \"select\",\n    id: \"select\",\n    value: account.rank,\n    onChange: function onChange(_ref9) {\n      var value = _ref9.target.value;\n      return setAccount(function (prev) {\n        return _objectSpread({}, prev, {\n          rank: value\n        });\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230\n    },\n    __self: this\n  }, \"Please select\"), React.createElement(\"option\", {\n    value: \"Bronze\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231\n    },\n    __self: this\n  }, \"Bronze\"), React.createElement(\"option\", {\n    value: \"Silver\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232\n    },\n    __self: this\n  }, \"Silver\"), React.createElement(\"option\", {\n    value: \"Gold\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233\n    },\n    __self: this\n  }, \"Gold\"), React.createElement(\"option\", {\n    value: \"Platinum\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234\n    },\n    __self: this\n  }, \"Platinum\"), React.createElement(\"option\", {\n    value: \"Diamond\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235\n    },\n    __self: this\n  }, \"Diamond\"), React.createElement(\"option\", {\n    value: \"Veteran\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236\n    },\n    __self: this\n  }, \"Veteran\"), React.createElement(\"option\", {\n    value: \"Master\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237\n    },\n    __self: this\n  }, \"Master\"), React.createElement(\"option\", {\n    value: \"Challenger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238\n    },\n    __self: this\n  }, \"Challenger\")))), React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242\n    },\n    __self: this\n  }, React.createElement(Label, {\n    htmlFor: \"Avatar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243\n    },\n    __self: this\n  }, \"Avatar \"), React.createElement(\"small\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244\n    },\n    __self: this\n  }, \"(Url)\"), React.createElement(Input, {\n    type: \"text\",\n    id: \"Avatar\",\n    placeholder: \"https://pornhub.com/avatar/MariaOzawa\",\n    value: account.avatar,\n    onChange: function onChange(_ref10) {\n      var value = _ref10.target.value;\n      return setAccount(function (prev) {\n        return _objectSpread({}, prev, {\n          avatar: value\n        });\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245\n    },\n    __self: this\n  }), account.avatar && React.createElement(React.Fragment, null, React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259\n    },\n    __self: this\n  }), React.createElement(Label, {\n    htmlFor: \"Avatar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260\n    },\n    __self: this\n  }, \"Preview \"), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261\n    },\n    __self: this\n  }), React.createElement(CardImg, {\n    src: account.avatar,\n    alt: \"avatar\",\n    style: {\n      width: \"200px\",\n      border: \"5px solid rgba(0,0,0, .4)\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262\n    },\n    __self: this\n  }))), React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273\n    },\n    __self: this\n  }, React.createElement(Col, {\n    col: \"6\",\n    sm: \"4\",\n    md: \"2\",\n    className: \"mb-3 mb-xl-0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274\n    },\n    __self: this\n  }, React.createElement(Button, {\n    block: true,\n    color: isSave ? \"success\" : \"primary\",\n    disabled: isSave,\n    onClick: updateProfile,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275\n    },\n    __self: this\n  }, isSave ? \"Success ✓\" : \"Save\")))))));\n};\n\nexport default Profile;","map":{"version":3,"sources":["/Users/maidat/Desktop/team-lq/persol-lqmb/src/components/Profile/index.js"],"names":["React","useState","useEffect","Card","CardBody","CardHeader","Col","FormGroup","Input","Label","Row","Button","CardImg","firebase","base64Matcher","RegExp","Profile","changeStatusProgress","ref","database","JSON","parse","localStorage","getItem","account","setAccount","keyAccount","setKeyAccount","isSave","setSave","orderByChild","equalTo","username","on","snapshot","val","Object","values","acc","keys","updateProfile","child","update","ingame","value","target","prev","role","some","i","checked","length","filter","rank","avatar","width","border"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  Card,\n  CardBody,\n  CardHeader,\n  Col,\n  FormGroup,\n  Input,\n  Label,\n  Row,\n  Button,\n  CardImg\n} from \"reactstrap\";\nimport firebase from \"./../../config\";\n\nconst base64Matcher = new RegExp(\"^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=|[A-Za-z0-9+/]{4})$\");\n\nconst Profile = ({ changeStatusProgress }) => {\n  const ref = firebase.database();\n  const [account, setAccount] = useState(\n    JSON.parse(localStorage.getItem(\"account\") || \"{}\")\n  );\n  const [keyAccount, setKeyAccount] = useState(\"\");\n  const [isSave, setSave] = useState(false);\n\n  useEffect(() => {\n    changeStatusProgress(true);\n    ref\n      .ref(\"users\")\n      .orderByChild(\"username\")\n      .equalTo(account.username)\n      .on(\"value\", snapshot => {\n        if (snapshot.val() !== null) {\n          const [acc] = Object.values(snapshot.val());\n          setAccount(acc);\n          setKeyAccount(Object.keys(snapshot.val()));\n        }\n        changeStatusProgress(false);\n      });\n  }, []);\n\n  useEffect(() => {\n    setSave(false);\n  }, [account]);\n\n  const updateProfile = async () => {\n    changeStatusProgress(true);\n    ref\n      .ref()\n      .child(\"/users/\" + keyAccount)\n      .update(account, () => {\n        setSave(true);\n        changeStatusProgress(false);\n      });\n  };\n\n  return (\n    <Row>\n      <Col xs=\"12\" sm=\"12\">\n        <Card>\n          <CardHeader>\n            <strong>Profile</strong>\n            <small> Form</small>\n          </CardHeader>\n          <CardBody>\n            <FormGroup>\n              <Label htmlFor=\"company\">Username</Label>\n              <Input type=\"text\" readOnly={true} value={account.username} />\n            </FormGroup>\n            <FormGroup>\n              <Label htmlFor=\"Ingame\">Ingame</Label>\n              <Input\n                type=\"text\"\n                id=\"Ingame\"\n                placeholder=\"PS.abcxyz\"\n                value={account.ingame}\n                onChange={({ target: { value } }) =>\n                  setAccount(prev => ({\n                    ...prev,\n                    ingame: value\n                  }))\n                }\n              />\n            </FormGroup>\n            <FormGroup row>\n              <Col md=\"12\">\n                <Label>Role</Label>\n              </Col>\n              <Col md=\"12\">\n                <FormGroup check className=\"checkbox\">\n                  <Input\n                    className=\"form-check-input\"\n                    type=\"checkbox\"\n                    id=\"Top\"\n                    checked={\n                      account.role && account.role.some(i => i === \"top\")\n                    }\n                    onChange={({ target: { checked } }) =>\n                      setAccount(prev =>\n                        checked\n                          ? account.role && account.role.length\n                            ? ({ ...prev, role: [...account.role, \"top\"] })\n                            : ({ ...prev, role: [\"top\"] })\n                          : ({\n                              ...prev,\n                              role: [...account.role].filter(i => i !== \"top\")\n                            })\n                      )\n                    }\n                  />\n                  <Label check className=\"form-check-label\" htmlFor=\"Top\">\n                    Top\n                  </Label>\n                </FormGroup>\n                <FormGroup check className=\"checkbox\">\n                  <Input\n                    className=\"form-check-input\"\n                    type=\"checkbox\"\n                    id=\"Jungle\"\n                    checked={\n                      account.role && account.role.some(i => i === \"jungle\")\n                    }\n                    onChange={({ target: { checked } }) =>\n                    setAccount(prev =>\n                        checked\n                          ? account.role && account.role.length\n                            ? ({ ...prev, role: [...account.role, \"jungle\"] })\n                            : ({ ...prev, role: [\"jungle\"] })\n                          : ({\n                              ...prev,\n                              role: [...account.role].filter(i => i !== \"jungle\")\n                            })\n                      )\n                    }\n                  />\n                  <Label check className=\"form-check-label\" htmlFor=\"Jungle\">\n                    Jungle\n                  </Label>\n                </FormGroup>\n                <FormGroup check className=\"checkbox\">\n                  <Input\n                    className=\"form-check-input\"\n                    type=\"checkbox\"\n                    id=\"Mid\"\n                    checked={\n                      account.role && account.role.some(i => i === \"mid\")\n                    }\n                    onChange={({ target: { checked } }) =>\n                    setAccount(prev =>\n                        checked\n                          ? account.role && account.role.length\n                            ? ({ ...prev, role: [...account.role, \"mid\"] })\n                            : ({ ...prev, role: [\"mid\"] })\n                          : ({\n                              ...prev,\n                              role: [...account.role].filter(i => i !== \"mid\")\n                            })\n                      )\n                    }\n                  />\n                  <Label check className=\"form-check-label\" htmlFor=\"Mid\">\n                    Mid\n                  </Label>\n                </FormGroup>\n                <FormGroup check className=\"checkbox\">\n                  <Input\n                    className=\"form-check-input\"\n                    type=\"checkbox\"\n                    id=\"Ad\"\n                    checked={account.role && account.role.some(i => i === \"ad\")}\n                    onChange={({ target: { checked } }) =>\n                    setAccount(prev =>\n                        checked\n                          ? account.role && account.role.length\n                            ? ({ ...prev, role: [...account.role, \"ad\"] })\n                            : ({ ...prev, role: [\"ad\"] })\n                          : ({\n                              ...prev,\n                              role: [...account.role].filter(i => i !== \"ad\")\n                            })\n                      )\n                    }\n                  />\n                  <Label check className=\"form-check-label\" htmlFor=\"Ad\">\n                    Ad\n                  </Label>\n                </FormGroup>\n                <FormGroup check className=\"checkbox\">\n                  <Input\n                    className=\"form-check-input\"\n                    type=\"checkbox\"\n                    id=\"Support\"\n                    checked={\n                      account.role && account.role.some(i => i === \"support\")\n                    }\n                    onChange={({ target: { checked } }) =>\n                        setAccount(prev =>\n                            checked\n                            ? account.role && account.role.length\n                                ? ({ ...prev, role: [...account.role, \"support\"] })\n                                : ({ ...prev, role: [\"support\"] })\n                            : ({\n                                ...prev,\n                                role: [...account.role].filter(i => i !== \"support\")\n                                })\n                        )\n                    }\n                  />\n                  <Label check className=\"form-check-label\" htmlFor=\"Support\">\n                    Support\n                  </Label>\n                </FormGroup>\n              </Col>\n            </FormGroup>\n\n            <FormGroup row>\n              <Col md=\"12\">\n                <Label htmlFor=\"select\">Rank</Label>\n              </Col>\n              <Col xs=\"12\" md=\"12\">\n                <Input\n                  type=\"select\"\n                  name=\"select\"\n                  id=\"select\"\n                  value={account.rank}\n                  onChange={({ target: { value } }) =>\n                    setAccount(prev => ({ ...prev, rank: value }))\n                  }\n                >\n                  <option value=\"\">Please select</option>\n                  <option value=\"Bronze\">Bronze</option>\n                  <option value=\"Silver\">Silver</option>\n                  <option value=\"Gold\">Gold</option>\n                  <option value=\"Platinum\">Platinum</option>\n                  <option value=\"Diamond\">Diamond</option>\n                  <option value=\"Veteran\">Veteran</option>\n                  <option value=\"Master\">Master</option>\n                  <option value=\"Challenger\">Challenger</option>\n                </Input>\n              </Col>\n            </FormGroup>\n            <FormGroup>\n              <Label htmlFor=\"Avatar\">Avatar </Label>\n              <small>(Url)</small>\n              <Input\n                type=\"text\"\n                id=\"Avatar\"\n                placeholder=\"https://pornhub.com/avatar/MariaOzawa\"\n                value={account.avatar}\n                onChange={({ target: { value } }) =>\n                  setAccount(prev => ({\n                    ...prev,\n                    avatar: value\n                  }))\n                }\n              />\n              {account.avatar && (\n                <>\n                  <br />\n                  <Label htmlFor=\"Avatar\">Preview </Label>\n                  <br />\n                  <CardImg\n                    src={account.avatar}\n                    alt=\"avatar\"\n                    style={{\n                      width: \"200px\",\n                      border: \"5px solid rgba(0,0,0, .4)\"\n                    }}\n                  />\n                </>\n              )}\n            </FormGroup>\n            <Row>\n              <Col col=\"6\" sm=\"4\" md=\"2\" className=\"mb-3 mb-xl-0\">\n                <Button\n                  block\n                  color={isSave ? \"success\" : \"primary\"}\n                  disabled={isSave}\n                  onClick={updateProfile}\n                >\n                  {isSave ? \"Success ✓\" : \"Save\"}\n                </Button>\n              </Col>\n            </Row>\n          </CardBody>\n        </Card>\n      </Col>\n    </Row>\n  );\n};\n\nexport default Profile;\n"]},"metadata":{},"sourceType":"module"}